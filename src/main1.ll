
; __CLANG_OFFLOAD_BUNDLE____START__ sycl-spir64-unknown-unknown
; ModuleID = 'main1.cpp'
source_filename = "main1.cpp"
target datalayout = "e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-n8:16:32:64"
target triple = "spir64-unknown-unknown"

%"class.cl::sycl::range" = type { %"class.cl::sycl::detail::array" }
%"class.cl::sycl::detail::array" = type { [1 x i64] }
%"class.cl::sycl::id" = type { %"class.cl::sycl::detail::array" }

$_ZTSN2cl4sycl6detail19__pf_kernel_wrapperIZZ4mainENKUlRNS0_7handlerEE_clES4_E10FillBufferEE = comdat any

$_ZTSZZ4mainENKUlRN2cl4sycl7handlerEE_clES2_E10FillBuffer = comdat any

@__spirv_BuiltInGlobalInvocationId = external dso_local local_unnamed_addr addrspace(1) constant <3 x i64>, align 32

; Function Attrs: convergent norecurse
define weak_odr dso_local spir_kernel void @_ZTSN2cl4sycl6detail19__pf_kernel_wrapperIZZ4mainENKUlRNS0_7handlerEE_clES4_E10FillBufferEE(%"class.cl::sycl::range"* noundef byval(%"class.cl::sycl::range") align 8 %_arg_NumWorkItems, i32 addrspace(1)* noundef align 4 %_arg_Accessor, %"class.cl::sycl::id"* noundef byval(%"class.cl::sycl::id") align 8 %_arg_Accessor3) local_unnamed_addr #0 comdat !kernel_arg_buffer_location !6 !kernel_arg_runtime_aligned !7 !kernel_arg_exclusive_ptr !7 !sycl_kernel_omit_args !8 {
entry:
  call void @__itt_offload_wi_start_wrapper()
  %0 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %_arg_NumWorkItems, i64 0, i32 0, i32 0, i64 0
  %1 = addrspacecast i64* %0 to i64 addrspace(4)*
  %2 = load i64, i64 addrspace(4)* %1, align 8
  %3 = getelementptr inbounds %"class.cl::sycl::id", %"class.cl::sycl::id"* %_arg_Accessor3, i64 0, i32 0, i32 0, i64 0
  %4 = addrspacecast i64* %3 to i64 addrspace(4)*
  %5 = load i64, i64 addrspace(4)* %4, align 8
  %6 = load <3 x i64>, <3 x i64> addrspace(4)* addrspacecast (<3 x i64> addrspace(1)* @__spirv_BuiltInGlobalInvocationId to <3 x i64> addrspace(4)*), align 32, !noalias !9
  %7 = extractelement <3 x i64> %6, i64 0
  %cmp.i.i = icmp ult i64 %7, 2147483648
  tail call void @llvm.assume(i1 %cmp.i.i)
  %cmp.not.i = icmp ult i64 %7, %2
  br i1 %cmp.not.i, label %if.end.i, label %_ZNK2cl4sycl6detail18RoundedRangeKernelINS0_4itemILi1ELb1EEELi1EZZ4mainENKUlRNS0_7handlerEE_clES6_EUlNS0_2idILi1EEEE_EclES4_.exit

if.end.i:                                         ; preds = %entry
  %add.ptr.i = getelementptr inbounds i32, i32 addrspace(1)* %_arg_Accessor, i64 %5
  %call.i.i = tail call spir_func noundef float @_Z6ir_sumff(float noundef 1.000000e+01, float noundef 2.000000e+01) #3
  %conv.i.i = fptosi float %call.i.i to i32
  %arrayidx.i.i7.i = getelementptr inbounds i32, i32 addrspace(1)* %add.ptr.i, i64 %7
  %arrayidx.ascast.i.i.i = addrspacecast i32 addrspace(1)* %arrayidx.i.i7.i to i32 addrspace(4)*
  store i32 %conv.i.i, i32 addrspace(4)* %arrayidx.ascast.i.i.i, align 4, !tbaa !18
  br label %_ZNK2cl4sycl6detail18RoundedRangeKernelINS0_4itemILi1ELb1EEELi1EZZ4mainENKUlRNS0_7handlerEE_clES6_EUlNS0_2idILi1EEEE_EclES4_.exit

_ZNK2cl4sycl6detail18RoundedRangeKernelINS0_4itemILi1ELb1EEELi1EZZ4mainENKUlRNS0_7handlerEE_clES6_EUlNS0_2idILi1EEEE_EclES4_.exit: ; preds = %entry, %if.end.i
  call void @__itt_offload_wi_finish_wrapper()
  ret void
}

; Function Attrs: inaccessiblememonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #1

; Function Attrs: convergent
declare dso_local spir_func noundef float @_Z6ir_sumff(float noundef, float noundef) local_unnamed_addr #2

; Function Attrs: convergent norecurse
define weak_odr dso_local spir_kernel void @_ZTSZZ4mainENKUlRN2cl4sycl7handlerEE_clES2_E10FillBuffer(i32 addrspace(1)* noundef align 4 %_arg_Accessor, %"class.cl::sycl::id"* noundef byval(%"class.cl::sycl::id") align 8 %_arg_Accessor3) local_unnamed_addr #0 comdat !kernel_arg_buffer_location !22 !kernel_arg_runtime_aligned !23 !kernel_arg_exclusive_ptr !23 !sycl_kernel_omit_args !24 {
entry:
  call void @__itt_offload_wi_start_wrapper()
  %0 = getelementptr inbounds %"class.cl::sycl::id", %"class.cl::sycl::id"* %_arg_Accessor3, i64 0, i32 0, i32 0, i64 0
  %1 = addrspacecast i64* %0 to i64 addrspace(4)*
  %2 = load i64, i64 addrspace(4)* %1, align 8
  %add.ptr.i = getelementptr inbounds i32, i32 addrspace(1)* %_arg_Accessor, i64 %2
  %3 = load <3 x i64>, <3 x i64> addrspace(4)* addrspacecast (<3 x i64> addrspace(1)* @__spirv_BuiltInGlobalInvocationId to <3 x i64> addrspace(4)*), align 32, !noalias !25
  %4 = extractelement <3 x i64> %3, i64 0
  %cmp.i.i = icmp ult i64 %4, 2147483648
  tail call void @llvm.assume(i1 %cmp.i.i) #4
  %call.i = tail call spir_func noundef float @_Z6ir_sumff(float noundef 1.000000e+01, float noundef 2.000000e+01) #3
  %conv.i = fptosi float %call.i to i32
  %arrayidx.i.i12 = getelementptr inbounds i32, i32 addrspace(1)* %add.ptr.i, i64 %4
  %arrayidx.ascast.i.i = addrspacecast i32 addrspace(1)* %arrayidx.i.i12 to i32 addrspace(4)*
  store i32 %conv.i, i32 addrspace(4)* %arrayidx.ascast.i.i, align 4, !tbaa !18
  call void @__itt_offload_wi_finish_wrapper()
  ret void
}

declare dso_local spir_func i32 @_Z18__spirv_ocl_printfPU3AS2Kcz(i8 addrspace(2)*, ...)

declare void @__itt_offload_wi_start_wrapper()

declare void @__itt_offload_wi_finish_wrapper()

attributes #0 = { convergent norecurse "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "sycl-module-id"="main1.cpp" "uniform-work-group-size"="true" }
attributes #1 = { inaccessiblememonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #2 = { convergent "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #3 = { convergent }
attributes #4 = { nounwind }

!llvm.dependent-libraries = !{!0}
!llvm.module.flags = !{!1, !2}
!opencl.spir.version = !{!3}
!spirv.Source = !{!4}
!llvm.ident = !{!5}

!0 = !{!"libcpmt"}
!1 = !{i32 1, !"wchar_size", i32 2}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{i32 1, i32 2}
!4 = !{i32 4, i32 100000}
!5 = !{!"clang version 15.0.0 (https://github.com/intel/llvm 5352b423f8913fce44e8276de68a39ffdb190bdc)"}
!6 = !{i32 -1, i32 -1, i32 -1, i32 -1, i32 -1}
!7 = !{i1 false, i1 true, i1 false, i1 false, i1 false}
!8 = !{i1 false, i1 false, i1 true, i1 true, i1 false}
!9 = !{!10, !12, !14, !16}
!10 = distinct !{!10, !11, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEE8initSizeEv: %agg.result"}
!11 = distinct !{!11, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEE8initSizeEv"}
!12 = distinct !{!12, !13, !"_ZN7__spirvL22initGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEEET0_v: %agg.result"}
!13 = distinct !{!13, !"_ZN7__spirvL22initGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEEET0_v"}
!14 = distinct !{!14, !15, !"_ZN2cl4sycl6detail7Builder7getItemILi1ELb1EEENSt9enable_ifIXT0_EKNS0_4itemIXT_EXT0_EEEE4typeEv: %agg.result"}
!15 = distinct !{!15, !"_ZN2cl4sycl6detail7Builder7getItemILi1ELb1EEENSt9enable_ifIXT0_EKNS0_4itemIXT_EXT0_EEEE4typeEv"}
!16 = distinct !{!16, !17, !"_ZN2cl4sycl6detail7Builder10getElementILi1ELb1EEEDTcl7getItemIXT_EXT0_EEEEPNS0_4itemIXT_EXT0_EEE: %agg.result"}
!17 = distinct !{!17, !"_ZN2cl4sycl6detail7Builder10getElementILi1ELb1EEEDTcl7getItemIXT_EXT0_EEEEPNS0_4itemIXT_EXT0_EEE"}
!18 = !{!19, !19, i64 0}
!19 = !{!"int", !20, i64 0}
!20 = !{!"omnipotent char", !21, i64 0}
!21 = !{!"Simple C++ TBAA"}
!22 = !{i32 -1, i32 -1, i32 -1, i32 -1}
!23 = !{i1 true, i1 false, i1 false, i1 false}
!24 = !{i1 false, i1 true, i1 true, i1 false}
!25 = !{!26, !28, !30, !32}
!26 = distinct !{!26, !27, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEE8initSizeEv: %agg.result"}
!27 = distinct !{!27, !"_ZN7__spirv29InitSizesSTGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEE8initSizeEv"}
!28 = distinct !{!28, !29, !"_ZN7__spirvL22initGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEEET0_v: %agg.result"}
!29 = distinct !{!29, !"_ZN7__spirvL22initGlobalInvocationIdILi1EN2cl4sycl2idILi1EEEEET0_v"}
!30 = distinct !{!30, !31, !"_ZN2cl4sycl6detail7Builder7getItemILi1ELb1EEENSt9enable_ifIXT0_EKNS0_4itemIXT_EXT0_EEEE4typeEv: %agg.result"}
!31 = distinct !{!31, !"_ZN2cl4sycl6detail7Builder7getItemILi1ELb1EEENSt9enable_ifIXT0_EKNS0_4itemIXT_EXT0_EEEE4typeEv"}
!32 = distinct !{!32, !33, !"_ZN2cl4sycl6detail7Builder10getElementILi1ELb1EEEDTcl7getItemIXT_EXT0_EEEEPNS0_4itemIXT_EXT0_EEE: %agg.result"}
!33 = distinct !{!33, !"_ZN2cl4sycl6detail7Builder10getElementILi1ELb1EEEDTcl7getItemIXT_EXT0_EEEEPNS0_4itemIXT_EXT0_EEE"}

; __CLANG_OFFLOAD_BUNDLE____END__ sycl-spir64-unknown-unknown

; __CLANG_OFFLOAD_BUNDLE____START__ host-x86_64-pc-windows-msvc
; ModuleID = 'C:\Users\Kike\AppData\Local\Temp\main1-50d9cc.cpp'
source_filename = "C:\\Users\\Kike\\AppData\\Local\\Temp\\main1-50d9cc.cpp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc19.34.31933"

%struct.fenv_t = type { i32, i32 }
%"class.std::basic_ostream" = type { i32*, [4 x i8], i32, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_streambuf"*, %"class.std::basic_ostream"*, i8 }
%"class.std::ios_base" = type { i32 (...)**, i64, i32, i32, i32, i64, i64, %"struct.std::ios_base::_Iosarray"*, %"struct.std::ios_base::_Fnarray"*, %"class.std::locale"* }
%"struct.std::ios_base::_Iosarray" = type { %"struct.std::ios_base::_Iosarray"*, i32, i32, i8* }
%"struct.std::ios_base::_Fnarray" = type { %"struct.std::ios_base::_Fnarray"*, i32, void (i32, %"class.std::ios_base"*, i32)* }
%"class.std::locale" = type { [8 x i8], %"class.std::locale::_Locimp"* }
%"class.std::locale::_Locimp" = type { %"class.std::locale::facet", %"class.std::locale::facet"**, i64, i32, i8, %"class.std::_Yarn" }
%"class.std::locale::facet" = type { %"class.std::_Facet_base", i32 }
%"class.std::_Facet_base" = type { i32 (...)** }
%"class.std::_Yarn" = type { i8*, i8 }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8**, i8**, i8*, i8*, i8**, i8**, i32, i32, i32*, i32*, %"class.std::locale"* }
%"struct.std::_Fake_allocator" = type { i8 }
%rtti.TypeDescriptor2 = type { i8**, i8*, [3 x i8] }
%rtti.CompleteObjectLocator = type { i32, i32, i32, i32, i32, i32 }
%rtti.TypeDescriptor57 = type { i8**, i8*, [58 x i8] }
%rtti.ClassHierarchyDescriptor = type { i32, i32, i32, i32 }
%rtti.BaseClassDescriptor = type { i32, i32, i32, i32, i32, i32, i32 }
%rtti.TypeDescriptor25 = type { i8**, i8*, [26 x i8] }
%rtti.TypeDescriptor89 = type { i8**, i8*, [90 x i8] }
%rtti.TypeDescriptor40 = type { i8**, i8*, [41 x i8] }
%rtti.TypeDescriptor19 = type { i8**, i8*, [20 x i8] }
%eh.CatchableType = type { i32, i32, i32, i32, i32, i32, i32 }
%eh.CatchableTypeArray.2 = type { i32, [2 x i32] }
%eh.ThrowInfo = type { i32, i32, i32, i32 }
%rtti.TypeDescriptor37 = type { i8**, i8*, [38 x i8] }
%rtti.TypeDescriptor27 = type { i8**, i8*, [28 x i8] }
%rtti.TypeDescriptor23 = type { i8**, i8*, [24 x i8] }
%eh.CatchableTypeArray.4 = type { i32, [4 x i32] }
%rtti.TypeDescriptor30 = type { i8**, i8*, [31 x i8] }
%eh.CatchableTypeArray.3 = type { i32, [3 x i32] }
%struct.__type_info_node = type opaque
%rtti.TypeDescriptor78 = type { i8**, i8*, [79 x i8] }
%rtti.TypeDescriptor45 = type { i8**, i8*, [46 x i8] }
%rtti.TypeDescriptor34 = type { i8**, i8*, [35 x i8] }
%rtti.TypeDescriptor26 = type { i8**, i8*, [27 x i8] }
%rtti.TypeDescriptor17 = type { i8**, i8*, [18 x i8] }
%rtti.TypeDescriptor410 = type { i8**, i8*, [411 x i8] }
%rtti.TypeDescriptor51 = type { i8**, i8*, [52 x i8] }
%rtti.TypeDescriptor359 = type { i8**, i8*, [360 x i8] }
%rtti.TypeDescriptor114 = type { i8**, i8*, [115 x i8] }
%rtti.TypeDescriptor35 = type { i8**, i8*, [36 x i8] }
%rtti.TypeDescriptor28 = type { i8**, i8*, [29 x i8] }
%"struct.cl::sycl::detail::kernel_param_desc_t" = type { i32, i32, i32 }
%rtti.TypeDescriptor307 = type { i8**, i8*, [308 x i8] }
%rtti.TypeDescriptor256 = type { i8**, i8*, [257 x i8] }
%"class.std::vector" = type { %"class.std::_Compressed_pair" }
%"class.std::_Compressed_pair" = type { %"class.std::_Vector_val" }
%"class.std::_Vector_val" = type { %"class.cl::sycl::device"*, %"class.cl::sycl::device"*, %"class.cl::sycl::device"* }
%"class.cl::sycl::device" = type { %"class.std::shared_ptr" }
%"class.std::shared_ptr" = type { %"class.std::_Ptr_base" }
%"class.std::_Ptr_base" = type { %"class.cl::sycl::detail::device_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::device_impl" = type opaque
%"class.std::_Ref_count_base" = type { i32 (...)**, i32, i32 }
%"class.std::_Vector_iterator" = type { %"class.std::_Vector_const_iterator" }
%"class.std::_Vector_const_iterator" = type { %"class.cl::sycl::device"* }
%"class.std::basic_string" = type { %"class.std::_Compressed_pair.0" }
%"class.std::_Compressed_pair.0" = type { %"class.std::_String_val" }
%"class.std::_String_val" = type { %"union.std::_String_val<std::_Simple_types<char>>::_Bxty", i64, i64 }
%"union.std::_String_val<std::_Simple_types<char>>::_Bxty" = type { i8*, [8 x i8] }
%"class.cl::sycl::buffer" = type { %"class.std::shared_ptr.3", %"class.cl::sycl::range", i64, i8 }
%"class.std::shared_ptr.3" = type { %"class.std::_Ptr_base.4" }
%"class.std::_Ptr_base.4" = type { %"class.cl::sycl::detail::buffer_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::buffer_impl" = type { %"class.cl::sycl::detail::SYCLMemObjT" }
%"class.cl::sycl::detail::SYCLMemObjT" = type { %"class.cl::sycl::detail::SYCLMemObjI", %"class.std::unique_ptr", %"class.cl::sycl::property_list", %"class.std::shared_ptr.15", %"class.std::shared_ptr.17", %struct._pi_mem*, i8, i8, i8, i64, i8*, i8*, %"class.std::function", %"class.std::shared_ptr.19" }
%"class.cl::sycl::detail::SYCLMemObjI" = type { i32 (...)**, %"class.std::shared_ptr.5" }
%"class.std::shared_ptr.5" = type { %"class.std::_Ptr_base.6" }
%"class.std::_Ptr_base.6" = type { %"struct.cl::sycl::detail::MemObjRecord"*, %"class.std::_Ref_count_base"* }
%"struct.cl::sycl::detail::MemObjRecord" = type opaque
%"class.std::unique_ptr" = type { %"class.std::_Compressed_pair.7" }
%"class.std::_Compressed_pair.7" = type { %"class.cl::sycl::detail::SYCLMemObjAllocator"* }
%"class.cl::sycl::detail::SYCLMemObjAllocator" = type { i32 (...)** }
%"class.cl::sycl::property_list" = type { %"class.cl::sycl::detail::PropertyListBase" }
%"class.cl::sycl::detail::PropertyListBase" = type { %"class.std::bitset", %"class.std::vector.8" }
%"class.std::bitset" = type { [1 x i32] }
%"class.std::vector.8" = type { %"class.std::_Compressed_pair.9" }
%"class.std::_Compressed_pair.9" = type { %"class.std::_Vector_val.12" }
%"class.std::_Vector_val.12" = type { %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"* }
%"class.std::shared_ptr.13" = type { %"class.std::_Ptr_base.14" }
%"class.std::_Ptr_base.14" = type { %"class.cl::sycl::detail::PropertyWithDataBase"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::PropertyWithDataBase" = type { i32 (...)**, i32 }
%"class.std::shared_ptr.15" = type { %"class.std::_Ptr_base.16" }
%"class.std::_Ptr_base.16" = type { %"class.cl::sycl::detail::event_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::event_impl" = type opaque
%"class.std::shared_ptr.17" = type { %"class.std::_Ptr_base.18" }
%"class.std::_Ptr_base.18" = type { %"class.cl::sycl::detail::context_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::context_impl" = type opaque
%struct._pi_mem = type opaque
%"class.std::function" = type { %"class.std::_Func_class" }
%"class.std::_Func_class" = type { %"union.std::_Func_class<void>::_Storage" }
%"union.std::_Func_class<void>::_Storage" = type { [8 x %"class.std::_Func_base"*] }
%"class.std::_Func_base" = type { i32 (...)** }
%"class.std::shared_ptr.19" = type { %"class.std::_Ptr_base.20" }
%"class.std::_Ptr_base.20" = type { i8*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::range" = type { %"class.cl::sycl::detail::array" }
%"class.cl::sycl::detail::array" = type { [1 x i64] }
%"struct.cl::sycl::detail::code_location" = type { i8*, i8*, i32, i32 }
%"class.cl::sycl::queue" = type { %"class.std::shared_ptr.21" }
%"class.std::shared_ptr.21" = type { %"class.std::_Ptr_base.22" }
%"class.std::_Ptr_base.22" = type { %"class.cl::sycl::detail::queue_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::queue_impl" = type opaque
%"class.cl::sycl::event" = type { %"class.std::shared_ptr.15" }
%class.anon = type { %"class.cl::sycl::buffer"*, %"class.cl::sycl::range"* }
%"class.cl::sycl::accessor" = type { %"class.cl::sycl::detail::AccessorBaseHost", [16 x i8] }
%"class.cl::sycl::detail::AccessorBaseHost" = type { %"class.std::shared_ptr.23" }
%"class.std::shared_ptr.23" = type { %"class.std::_Ptr_base.24" }
%"class.std::_Ptr_base.24" = type { %"class.cl::sycl::detail::AccessorImplHost"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::AccessorImplHost" = type { %"class.cl::sycl::id", %"class.cl::sycl::range.26", %"class.cl::sycl::range.26", i32, %"class.cl::sycl::detail::SYCLMemObjI"*, i32, i32, i32, i8, i8*, %"class.cl::sycl::detail::Command"*, i8, i8 }
%"class.cl::sycl::id" = type { %"class.cl::sycl::detail::array.25" }
%"class.cl::sycl::detail::array.25" = type { [3 x i64] }
%"class.cl::sycl::range.26" = type { %"class.cl::sycl::detail::array.25" }
%"class.cl::sycl::detail::Command" = type opaque
%"class.cl::sycl::id.27" = type { %"class.cl::sycl::detail::array" }
%"struct.std::_Container_base0" = type { i8 }
%"class.std::basic_ostream<char>::sentry" = type { %"class.std::basic_ostream<char>::_Sentry_base", i8 }
%"class.std::basic_ostream<char>::_Sentry_base" = type { %"class.std::basic_ostream"* }
%"class.std::unique_ptr.28" = type { %"class.std::_Compressed_pair.29" }
%"class.std::_Compressed_pair.29" = type { %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* }
%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder" = type { %"class.cl::sycl::detail::SYCLMemObjAllocator", %"class.cl::sycl::detail::aligned_allocator", i64 }
%"class.cl::sycl::detail::aligned_allocator" = type { i64 }
%"class.std::array" = type { [3 x i64] }
%class.type_info = type { i32 (...)**, %struct.__std_type_info_data }
%struct.__std_type_info_data = type { i8*, [1 x i8] }
%"class.std::function.34" = type { %"class.std::_Func_class.35" }
%"class.std::_Func_class.35" = type { %"union.std::_Func_class<void, cl::sycl::handler &>::_Storage" }
%"union.std::_Func_class<void, cl::sycl::handler &>::_Storage" = type { [8 x %"class.std::_Func_base.38"*] }
%"class.std::_Func_base.38" = type { i32 (...)** }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator.1" = type { i8 }
%"class.std::allocator" = type { i8 }
%"struct.std::_Iterator_base0" = type { i8 }
%"struct.std::_Zero_then_variadic_args_t" = type { i8 }
%"class.std::_Ref_count_obj2" = type { %"class.std::_Ref_count_base", %union.anon }
%union.anon = type { %"struct.std::_Wrap" }
%"struct.std::_Wrap" = type { %"class.cl::sycl::detail::buffer_impl" }
%"struct.std::default_delete.30" = type { i8 }
%"struct.std::_One_then_variadic_args_t" = type { i8 }
%"struct.std::default_delete" = type { i8 }
%"class.std::bad_alloc" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)**, %struct.__std_exception_data }
%struct.__std_exception_data = type { i8*, i8 }
%"class.cl::sycl::invalid_parameter_error" = type { %"class.cl::sycl::runtime_error" }
%"class.cl::sycl::runtime_error" = type { %"class.cl::sycl::exception" }
%"class.cl::sycl::exception" = type { %"class.std::exception", %"class.std::basic_string", i32, %"class.std::shared_ptr.32" }
%"class.std::shared_ptr.32" = type { %"class.std::_Ptr_base.33" }
%"class.std::_Ptr_base.33" = type { %"class.cl::sycl::context"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::context" = type { %"class.std::shared_ptr.17" }
%"class.std::error_code" = type { i32, %"class.std::error_category"* }
%"class.std::error_category" = type { i32 (...)**, i64 }
%"struct.std::_Fake_proxy_ptr_impl" = type { i8 }
%"class.std::bad_array_new_length" = type { %"class.std::bad_alloc" }
%"struct.std::_Arg_types.36" = type { i8 }
%"class.std::_Func_impl_no_alloc" = type { %"class.std::_Func_base.38", %class.anon }
%"class.cl::sycl::handler" = type { %"class.std::shared_ptr.21", %"class.std::vector.39", %"class.std::vector.47", %"class.std::vector.52", %"class.std::vector.59", %"class.std::vector.66", %"class.std::vector.71", %"class.std::vector.71", %"class.std::vector.76", %"class.cl::sycl::detail::NDRDescT", %"class.std::basic_string", %"class.std::shared_ptr.81", i32, i8*, i8*, i64, %"class.std::vector.44", %"class.std::unique_ptr.83", %"class.std::unique_ptr.87", i64, %"class.std::unique_ptr.96", %"class.std::vector.105", %"class.std::vector.105", i8, %"struct.cl::sycl::detail::code_location", i8, %"class.cl::sycl::event" }
%"class.std::vector.39" = type { %"class.std::_Compressed_pair.40" }
%"class.std::_Compressed_pair.40" = type { %"class.std::_Vector_val.43" }
%"class.std::_Vector_val.43" = type { %"class.std::vector.44"*, %"class.std::vector.44"*, %"class.std::vector.44"* }
%"class.std::vector.47" = type { %"class.std::_Compressed_pair.48" }
%"class.std::_Compressed_pair.48" = type { %"class.std::_Vector_val.51" }
%"class.std::_Vector_val.51" = type { %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"* }
%"class.std::vector.52" = type { %"class.std::_Compressed_pair.53" }
%"class.std::_Compressed_pair.53" = type { %"class.std::_Vector_val.56" }
%"class.std::_Vector_val.56" = type { %"class.std::shared_ptr.57"*, %"class.std::shared_ptr.57"*, %"class.std::shared_ptr.57"* }
%"class.std::shared_ptr.57" = type { %"class.std::_Ptr_base.58" }
%"class.std::_Ptr_base.58" = type { %"class.cl::sycl::detail::LocalAccessorImplHost"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::LocalAccessorImplHost" = type { %"class.cl::sycl::range.26", i32, i32, %"class.std::vector.44" }
%"class.std::vector.59" = type { %"class.std::_Compressed_pair.60" }
%"class.std::_Compressed_pair.60" = type { %"class.std::_Vector_val.63" }
%"class.std::_Vector_val.63" = type { %"class.std::shared_ptr.64"*, %"class.std::shared_ptr.64"*, %"class.std::shared_ptr.64"* }
%"class.std::shared_ptr.64" = type { %"class.std::_Ptr_base.65" }
%"class.std::_Ptr_base.65" = type { %"class.cl::sycl::detail::stream_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::stream_impl" = type opaque
%"class.std::vector.66" = type { %"class.std::_Compressed_pair.67" }
%"class.std::_Compressed_pair.67" = type { %"class.std::_Vector_val.70" }
%"class.std::_Vector_val.70" = type { %"class.std::shared_ptr.19"*, %"class.std::shared_ptr.19"*, %"class.std::shared_ptr.19"* }
%"class.std::vector.71" = type { %"class.std::_Compressed_pair.72" }
%"class.std::_Compressed_pair.72" = type { %"class.std::_Vector_val.75" }
%"class.std::_Vector_val.75" = type { %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"* }
%"class.cl::sycl::detail::ArgDesc" = type { i32, i8*, i32, i32 }
%"class.std::vector.76" = type { %"class.std::_Compressed_pair.77" }
%"class.std::_Compressed_pair.77" = type { %"class.std::_Vector_val.80" }
%"class.std::_Vector_val.80" = type { %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"** }
%"class.cl::sycl::detail::NDRDescT" = type { %"class.cl::sycl::range.26", %"class.cl::sycl::range.26", %"class.cl::sycl::id", %"class.cl::sycl::range.26", i64 }
%"class.std::shared_ptr.81" = type { %"class.std::_Ptr_base.82" }
%"class.std::_Ptr_base.82" = type { %"class.cl::sycl::detail::kernel_impl"*, %"class.std::_Ref_count_base"* }
%"class.cl::sycl::detail::kernel_impl" = type opaque
%"class.std::vector.44" = type { %"class.std::_Compressed_pair.45" }
%"class.std::_Compressed_pair.45" = type { %"class.std::_Vector_val.46" }
%"class.std::_Vector_val.46" = type { i8*, i8*, i8* }
%"class.std::unique_ptr.83" = type { %"class.std::_Compressed_pair.84" }
%"class.std::_Compressed_pair.84" = type { %"class.cl::sycl::detail::HostKernelBase"* }
%"class.cl::sycl::detail::HostKernelBase" = type { i32 (...)** }
%"class.std::unique_ptr.87" = type { %"class.std::_Compressed_pair.88" }
%"class.std::_Compressed_pair.88" = type { %"class.cl::sycl::detail::HostTask"* }
%"class.cl::sycl::detail::HostTask" = type { %"class.std::function", %"class.std::function.91" }
%"class.std::function.91" = type { %"class.std::_Func_class.92" }
%"class.std::_Func_class.92" = type { %"union.std::_Func_class<void, cl::sycl::interop_handle>::_Storage" }
%"union.std::_Func_class<void, cl::sycl::interop_handle>::_Storage" = type { [8 x %"class.std::_Func_base.95"*] }
%"class.std::_Func_base.95" = type { i32 (...)** }
%"class.std::unique_ptr.96" = type { %"class.std::_Compressed_pair.97" }
%"class.std::_Compressed_pair.97" = type { %"class.cl::sycl::detail::InteropTask"* }
%"class.cl::sycl::detail::InteropTask" = type { %"class.std::function.100" }
%"class.std::function.100" = type { %"class.std::_Func_class.101" }
%"class.std::_Func_class.101" = type { %"union.std::_Func_class<void, cl::sycl::interop_handler>::_Storage" }
%"union.std::_Func_class<void, cl::sycl::interop_handler>::_Storage" = type { [8 x %"class.std::_Func_base.104"*] }
%"class.std::_Func_base.104" = type { i32 (...)** }
%"class.std::vector.105" = type { %"class.std::_Compressed_pair.106" }
%"class.std::_Compressed_pair.106" = type { %"class.std::_Vector_val.109" }
%"class.std::_Vector_val.109" = type { %"class.std::shared_ptr.15"*, %"class.std::shared_ptr.15"*, %"class.std::shared_ptr.15"* }
%"class.cl::sycl::accessor.110" = type { %"class.cl::sycl::detail::AccessorBaseHost", [16 x i8] }
%class.anon.113 = type { %"class.cl::sycl::accessor.110" }
%"class.cl::sycl::detail::accessor_common.111" = type { i8 }
%"class.cl::sycl::ext::oneapi::accessor_property_list" = type { %"class.cl::sycl::detail::PropertyListBase" }
%"class.cl::sycl::invalid_object_error" = type { %"class.cl::sycl::device_error" }
%"class.cl::sycl::device_error" = type { %"class.cl::sycl::exception" }
%"struct.std::_Tidy_guard" = type { %"class.std::vector.8"* }
%"class.std::_Uninitialized_backout_al" = type { %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"*, %"class.std::allocator.10"* }
%"struct.std::_Temporary_owner" = type { %"class.cl::sycl::detail::AccessorImplHost"* }
%"class.std::_Ref_count" = type { %"class.std::_Ref_count_base", %"class.cl::sycl::detail::AccessorImplHost"* }
%"class.cl::sycl::detail::RoundedRangeKernel" = type { %"class.cl::sycl::range", %class.anon.113 }
%"class.std::allocator.73" = type { i8 }
%struct.NormalizedKernelType = type { %"class.cl::sycl::detail::RoundedRangeKernel" }
%"class.std::function.114" = type { %"class.std::_Func_class.115" }
%"class.std::_Func_class.115" = type { %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage" }
%"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage" = type { [8 x %"class.std::_Func_base.118"*] }
%"class.std::_Func_base.118" = type { i32 (...)** }
%"class.cl::sycl::detail::HostKernel" = type { %"class.cl::sycl::detail::HostKernelBase", %"class.std::function.114" }
%"struct.std::default_delete.85" = type { i8 }
%"struct.std::_Arg_types.116" = type { i8 }
%"class.std::_Func_impl_no_alloc.119" = type { %"class.std::_Func_base.118", %struct.NormalizedKernelType }
%"class.cl::sycl::nd_item" = type { %"class.cl::sycl::item", %"class.cl::sycl::item.120", %"class.cl::sycl::group" }
%"class.cl::sycl::item" = type { %"struct.cl::sycl::detail::ItemBase" }
%"struct.cl::sycl::detail::ItemBase" = type { %"class.cl::sycl::range", %"class.cl::sycl::id.27", %"class.cl::sycl::id.27" }
%"class.cl::sycl::item.120" = type { %"struct.cl::sycl::detail::ItemBase.121" }
%"struct.cl::sycl::detail::ItemBase.121" = type { %"class.cl::sycl::range", %"class.cl::sycl::id.27" }
%"class.cl::sycl::group" = type { %"class.cl::sycl::range", %"class.cl::sycl::range", %"class.cl::sycl::range", %"class.cl::sycl::id.27" }
%"class.cl::sycl::detail::HostProfilingInfo" = type { i64, i64 }
%"class.cl::sycl::nd_range" = type { %"class.cl::sycl::range.26", %"class.cl::sycl::range.26", %"class.cl::sycl::id" }
%"struct.cl::sycl::detail::NDLoopIterateImpl" = type { i8 }
%class.anon.122 = type { %"class.cl::sycl::range"*, %"class.cl::sycl::range"*, %"class.cl::sycl::range"*, %"class.cl::sycl::id.27"*, %"class.cl::sycl::detail::HostKernel"* }
%"class.cl::sycl::nd_range_error" = type { %"class.cl::sycl::runtime_error" }
%"struct.cl::sycl::detail::NDLoopIterateImpl.124" = type { i8 }
%class.anon.123 = type { %"class.cl::sycl::id.27"*, %"class.cl::sycl::range"*, %"class.cl::sycl::id.27"*, %"class.cl::sycl::range"*, %"class.cl::sycl::group"*, %"class.cl::sycl::detail::HostKernel"* }
%class.anon.126 = type { i8 }
%struct.NormalizedKernelType.127 = type { %class.anon.113 }
%"class.std::_Func_impl_no_alloc.128" = type { %"class.std::_Func_base.118", %struct.NormalizedKernelType.127 }
%"class.cl::sycl::detail::accessor_common" = type { i8 }

$"?begin@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ" = comdat any

$"?end@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ" = comdat any

$"??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z" = comdat any

$"??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEAVdevice@sycl@cl@@XZ" = comdat any

$"??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z" = comdat any

$"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z" = comdat any

$"??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z" = comdat any

$"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ" = comdat any

$"??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ" = comdat any

$"??1?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA@XZ" = comdat any

$"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z" = comdat any

$"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ" = comdat any

$"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z" = comdat any

$"??0?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@AEBV?$range@$00@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z" = comdat any

$"??1property_list@sycl@cl@@QEAA@XZ" = comdat any

$"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ" = comdat any

$"??$get_access@$0EAA@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@Ucode_location@detail@12@@Z" = comdat any

$"??$?A$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEBHV?$id@$00@12@@Z" = comdat any

$"??$?0$00@?$id@$00@sycl@cl@@QEAA@_K@Z" = comdat any

$"??1?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ" = comdat any

$"??1?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@XZ" = comdat any

$"??0code_location@detail@sycl@cl@@QEAA@PEBD0HH@Z" = comdat any

$"??1PropertyListBase@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??1?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ" = comdat any

$"?_Tidy@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAXXZ" = comdat any

$"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ" = comdat any

$"?_Orphan_all@_Container_base0@std@@QEAAXXZ" = comdat any

$"??$_Destroy_range@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@YAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@QEAV10@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z" = comdat any

$"?deallocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAXQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ" = comdat any

$"??$destroy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z" = comdat any

$"??$_Unfancy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@@Z" = comdat any

$"??1?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Decref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXXZ" = comdat any

$"?_Decref@_Ref_count_base@std@@QEAAXXZ" = comdat any

$"?_Decwref@_Ref_count_base@std@@QEAAXXZ" = comdat any

$"??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z" = comdat any

$"?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z" = comdat any

$"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Decref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXXZ" = comdat any

$"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Decref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXXZ" = comdat any

$"?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ" = comdat any

$"??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ" = comdat any

$"?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ" = comdat any

$"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ" = comdat any

$"??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z" = comdat any

$"?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ" = comdat any

$"?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z" = comdat any

$"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ" = comdat any

$"??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ" = comdat any

$"??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ" = comdat any

$"?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z" = comdat any

$"??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z" = comdat any

$"??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ" = comdat any

$"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z" = comdat any

$"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ" = comdat any

$"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ" = comdat any

$"??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z" = comdat any

$"??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ" = comdat any

$"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z" = comdat any

$"?_Tidy@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAXXZ" = comdat any

$"?_Getal@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ" = comdat any

$"??$_Destroy_range@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@YAXPEAVdevice@sycl@cl@@QEAV123@AEAV?$allocator@Vdevice@sycl@cl@@@0@@Z" = comdat any

$"?deallocate@?$allocator@Vdevice@sycl@cl@@@std@@QEAAXQEAVdevice@sycl@cl@@_K@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@Vdevice@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ" = comdat any

$"??$destroy@Vdevice@sycl@cl@@@?$_Default_allocator_traits@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@SAXAEAV?$allocator@Vdevice@sycl@cl@@@1@QEAVdevice@sycl@cl@@@Z" = comdat any

$"??$_Unfancy@Vdevice@sycl@cl@@@std@@YAPEAVdevice@sycl@cl@@PEAV123@@Z" = comdat any

$"??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z" = comdat any

$"??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z" = comdat any

$"?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z" = comdat any

$"??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z" = comdat any

$"?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAXAEBV12@@Z" = comdat any

$"??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ" = comdat any

$"??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEBVdevice@sycl@cl@@XZ" = comdat any

$"??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z" = comdat any

$"?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ" = comdat any

$"?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ" = comdat any

$"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ" = comdat any

$"??$_Unfancy@D@std@@YAPEADPEAD@Z" = comdat any

$"??0?$bitset@$0CA@@std@@QEAA@_K@Z" = comdat any

$"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@@Z" = comdat any

$"?ctorHelper@PropertyListBase@detail@sycl@cl@@IEAAXXZ" = comdat any

$"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ" = comdat any

$"??$?0$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z" = comdat any

$"?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z" = comdat any

$"??0?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAA@XZ" = comdat any

$"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ" = comdat any

$"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??$make_shared@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@0@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z" = comdat any

$"??$make_unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$V@sycl@cl@@YA?AV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@XZ" = comdat any

$"?getNextPowerOfTwo@detail@sycl@cl@@YA_K_K@Z" = comdat any

$"??4?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z" = comdat any

$"??1?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@XZ" = comdat any

$"??$?CVbuffer_impl@detail@sycl@cl@@$0A@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEBAPEAVbuffer_impl@detail@sycl@cl@@XZ" = comdat any

$"?rangeToArray@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$array@_K$02@std@@AEAV?$range@$00@23@@Z" = comdat any

$"?data@?$array@_K$02@std@@QEAAPEA_KXZ" = comdat any

$"?name@type_info@@QEBAPEBDXZ" = comdat any

$"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ" = comdat any

$"??0?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAA@XZ" = comdat any

$"??$?0_K_KAEBVproperty_list@sycl@cl@@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z" = comdat any

$"??$_Set_ptr_rep_and_enable_shared@Vbuffer_impl@detail@sycl@cl@@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEAAXQEAVbuffer_impl@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z" = comdat any

$"??0_Ref_count_base@std@@IEAA@XZ" = comdat any

$"??$_Construct_in_place@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@$$QEA_K1AEBVproperty_list@34@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z" = comdat any

$"??1_Ref_count_base@std@@UEAA@XZ" = comdat any

$"?_Destroy@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ" = comdat any

$"?_Delete_this@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ" = comdat any

$"??_G?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAAPEAXI@Z" = comdat any

$"?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z" = comdat any

$"??$_Voidify_iter@PEAVbuffer_impl@detail@sycl@cl@@@std@@YAPEAXPEAVbuffer_impl@detail@sycl@cl@@@Z" = comdat any

$"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@VSYCLMemObjAllocator@detail@sycl@cl@@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z" = comdat any

$"?release@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@XZ" = comdat any

$"?get_deleter@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ" = comdat any

$"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@PEAVSYCLMemObjAllocator@detail@sycl@cl@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@$$QEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z" = comdat any

$"??$exchange@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$T@std@@YAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAPEAV1234@$$QEA$$T@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ" = comdat any

$"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$0A@@?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@QEAA@AEBU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@@Z" = comdat any

$"??$_Destroy_in_place@Vbuffer_impl@detail@sycl@cl@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@@Z" = comdat any

$"??1?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAA@XZ" = comdat any

$"??0?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z" = comdat any

$"??0SYCLMemObjAllocator@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??0?$aligned_allocator@D@detail@sycl@cl@@QEAA@XZ" = comdat any

$"?getAllocatorImpl@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@MEAAPEAXXZ" = comdat any

$"??_G?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"?allocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAX_K@Z" = comdat any

$"?deallocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAXPEAX_K@Z" = comdat any

$"?getValueSize@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEBA_KXZ" = comdat any

$"?setAlignment@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAX_K@Z" = comdat any

$"??_GSYCLMemObjAllocator@detail@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??1?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAA@XZ" = comdat any

$"??1SYCLMemObjAllocator@detail@sycl@cl@@UEAA@XZ" = comdat any

$"?allocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAPEAD_K@Z" = comdat any

$"??0bad_alloc@std@@QEAA@XZ" = comdat any

$"??0bad_alloc@std@@QEAA@AEBV01@@Z" = comdat any

$"??0exception@std@@QEAA@AEBV01@@Z" = comdat any

$"??1bad_alloc@std@@UEAA@XZ" = comdat any

$"??0exception@std@@QEAA@QEBDH@Z" = comdat any

$"??_Gbad_alloc@std@@UEAAPEAXI@Z" = comdat any

$"?what@exception@std@@UEBAPEBDXZ" = comdat any

$"??_Gexception@std@@UEAAPEAXI@Z" = comdat any

$"??1exception@std@@UEAA@XZ" = comdat any

$"?deallocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAXPEAD_K@Z" = comdat any

$"??$setAlignImpl@V?$aligned_allocator@D@detail@sycl@cl@@@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAAX_K@Z" = comdat any

$"??$?0AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z" = comdat any

$"?getNextPowerOfTwoHelper@detail@sycl@cl@@YA_K_K0@Z" = comdat any

$"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z" = comdat any

$"?swap@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z" = comdat any

$"??$_Move_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z" = comdat any

$"?_Swap@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z" = comdat any

$"??$swap@PEAVbuffer_impl@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVbuffer_impl@detail@sycl@cl@@0@Z" = comdat any

$"??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z" = comdat any

$"??R?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@QEBAXPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z" = comdat any

$"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z" = comdat any

$"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z" = comdat any

$"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??1invalid_parameter_error@sycl@cl@@UEAA@XZ" = comdat any

$"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z" = comdat any

$"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z" = comdat any

$"??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z" = comdat any

$"??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z" = comdat any

$"??$_Convert_size@_K_K@std@@YA_K_K@Z" = comdat any

$"??0?$allocator@D@std@@QEAA@XZ" = comdat any

$"??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ" = comdat any

$"??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ" = comdat any

$"?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ" = comdat any

$"?_Xlen_string@std@@YAXXZ" = comdat any

$"??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z" = comdat any

$"?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z" = comdat any

$"?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ" = comdat any

$"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z" = comdat any

$"?allocate@?$allocator@D@std@@QEAAPEAD_K@Z" = comdat any

$"??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z" = comdat any

$"?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z" = comdat any

$"?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z" = comdat any

$"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ" = comdat any

$"??$max@_K@std@@YAAEB_KAEB_K0@Z" = comdat any

$"??$min@_K@std@@YAAEB_KAEB_K0@Z" = comdat any

$"?max@?$numeric_limits@_J@std@@SA_JXZ" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ" = comdat any

$"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z" = comdat any

$"??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z" = comdat any

$"??$_Get_size_of_n@$00@std@@YA_K_K@Z" = comdat any

$"??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z" = comdat any

$"?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z" = comdat any

$"?_Throw_bad_array_new_length@std@@YAXXZ" = comdat any

$"??0bad_array_new_length@std@@QEAA@XZ" = comdat any

$"??0bad_array_new_length@std@@QEAA@AEBV01@@Z" = comdat any

$"??1bad_array_new_length@std@@UEAA@XZ" = comdat any

$"??0bad_alloc@std@@AEAA@QEBD@Z" = comdat any

$"??_Gbad_array_new_length@std@@UEAAPEAXI@Z" = comdat any

$"??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z" = comdat any

$"??0runtime_error@sycl@cl@@QEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z" = comdat any

$"??_Ginvalid_parameter_error@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??0?$shared_ptr@Vcontext@sycl@cl@@@std@@QEAA@$$T@Z" = comdat any

$"??_Gruntime_error@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??0?$_Ptr_base@Vcontext@sycl@cl@@@std@@IEAA@XZ" = comdat any

$"??1runtime_error@sycl@cl@@UEAA@XZ" = comdat any

$"?size@?$range@$00@sycl@cl@@QEBA_KXZ" = comdat any

$"?get@?$array@$00@detail@sycl@cl@@QEBA_KH@Z" = comdat any

$"??0?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??1?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Set@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@@Z" = comdat any

$"??0?$_Func_base@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??$get_access@$0EAB@$0HNO@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@AEAVhandler@12@Ucode_location@detail@12@@Z" = comdat any

$"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??1?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ" = comdat any

$"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEAVhandler@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z" = comdat any

$"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z" = comdat any

$"?getAdjustedMode@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z" = comdat any

$"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z" = comdat any

$"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ" = comdat any

$"??$?0$02@?$id@$02@sycl@cl@@QEAA@_K00@Z" = comdat any

$"??0AccessorBaseHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N@Z" = comdat any

$"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ" = comdat any

$"?preScreenAccessor@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z" = comdat any

$"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ" = comdat any

$"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z" = comdat any

$"??$_Copy_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@1@@Z" = comdat any

$"?_Incref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAXXZ" = comdat any

$"?_Incref@_Ref_count_base@std@@QEAAXXZ" = comdat any

$"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ" = comdat any

$"??$has_property@Vnoinit@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ" = comdat any

$"??$has_property_helper@Vno_init@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ" = comdat any

$"??A?$bitset@$0CA@@std@@QEBA_N_K@Z" = comdat any

$"?_Subscript@?$bitset@$0CA@@std@@QEBA_N_K@Z" = comdat any

$"??$has_property_helper@Vnoinit@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ" = comdat any

$"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@AEBV01@@Z" = comdat any

$"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@5@@Z" = comdat any

$"?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@AEBV32@@Z" = comdat any

$"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ" = comdat any

$"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z" = comdat any

$"??$_Construct_n@AEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEBQEAV12@@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_KAEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@1@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ" = comdat any

$"?_Buy_nonzero@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z" = comdat any

$"??$_Uninitialized_copy@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@PEAV12@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@00AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z" = comdat any

$"??1?$_Tidy_guard@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@@std@@QEAA@XZ" = comdat any

$"?max_size@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEBA_KXZ" = comdat any

$"?_Xlength@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@CAXXZ" = comdat any

$"?_Buy_raw@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z" = comdat any

$"?max_size@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@Z" = comdat any

$"?allocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z" = comdat any

$"??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z" = comdat any

$"??$_Get_unwrapped@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YA?A?<decltype-auto>@@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z" = comdat any

$"??0?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z" = comdat any

$"??$_Emplace_back@AEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAXAEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z" = comdat any

$"?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@XZ" = comdat any

$"??1?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ" = comdat any

$"??$construct@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEAV12@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV31@@Z" = comdat any

$"??$_Voidify_iter@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z" = comdat any

$"??0?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z" = comdat any

$"??0?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAA@XZ" = comdat any

$"??$_Copy_construct_from@VPropertyWithDataBase@detail@sycl@cl@@@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z" = comdat any

$"?_Incref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEBAXXZ" = comdat any

$"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@$$QEAV01@@Z" = comdat any

$"??$exchange@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@$$T@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@AEAPEAV10@$$QEA$$T@Z" = comdat any

$"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@PEAV21@PEAV21@@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@22@Z" = comdat any

$"?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z" = comdat any

$"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@00@Z" = comdat any

$"??$get@$0A@@?$InitializedVal@$02Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$02@23@XZ" = comdat any

$"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z" = comdat any

$"??$?0$02@?$range@$02@sycl@cl@@QEAA@_K00@Z" = comdat any

$"??$?0$02@?$array@$02@detail@sycl@cl@@QEAA@_K00@Z" = comdat any

$"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??$?0VAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z" = comdat any

$"??4?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z" = comdat any

$"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ" = comdat any

$"??0?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@QEAVAccessorImplHost@detail@sycl@cl@@@Z" = comdat any

$"??$_Set_ptr_rep_and_enable_shared@VAccessorImplHost@detail@sycl@cl@@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@AEAAXQEAVAccessorImplHost@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z" = comdat any

$"??0?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z" = comdat any

$"??1?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Destroy@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ" = comdat any

$"?_Delete_this@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ" = comdat any

$"??_G?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAAPEAXI@Z" = comdat any

$"??1?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAA@XZ" = comdat any

$"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z" = comdat any

$"?swap@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z" = comdat any

$"??$_Move_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z" = comdat any

$"?_Swap@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z" = comdat any

$"??$swap@PEAVAccessorImplHost@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVAccessorImplHost@detail@sycl@cl@@0@Z" = comdat any

$"??0invalid_object_error@sycl@cl@@QEAA@PEBDH@Z" = comdat any

$"??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??0device_error@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??1invalid_object_error@sycl@cl@@UEAA@XZ" = comdat any

$"??0invalid_object_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z" = comdat any

$"??0device_error@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z" = comdat any

$"??_Ginvalid_object_error@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??_Gdevice_error@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??1device_error@sycl@cl@@UEAA@XZ" = comdat any

$"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ" = comdat any

$"?set_range_dim0@?$range@$00@sycl@cl@@AEAAX_K@Z" = comdat any

$"??$checkValueRange@$00V?$range@$00@sycl@cl@@@detail@sycl@cl@@YAXAEBV?$range@$00@12@@Z" = comdat any

$"??$set@$00@NDRDescT@detail@sycl@cl@@QEAAXV?$range@$00@23@@Z" = comdat any

$"??$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z" = comdat any

$"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z" = comdat any

$"??0runtime_error@sycl@cl@@QEAA@PEBDH@Z" = comdat any

$"??0runtime_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z" = comdat any

$"?setNDRangeLeftover@NDRDescT@detail@sycl@cl@@AEAAXH@Z" = comdat any

$"?clear@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@QEAAXXZ" = comdat any

$"?isESIMD@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SA_NXZ" = comdat any

$"?getParamDesc@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z" = comdat any

$"?getNumParams@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAIXZ" = comdat any

$"?getName@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAPEBDXZ" = comdat any

$"??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z" = comdat any

$"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z" = comdat any

$"??0?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAA@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@Z" = comdat any

$"?reset@?$unique_ptr@VHostKernelBase@detail@sycl@cl@@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@@std@@QEAAXPEAVHostKernelBase@detail@sycl@cl@@@Z" = comdat any

$"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ" = comdat any

$"??0?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z" = comdat any

$"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ" = comdat any

$"??$createItem@$00$00@Builder@detail@sycl@cl@@SA?AV?$item@$00$00@23@AEBV?$range@$00@23@AEBV?$id@$00@23@1@Z" = comdat any

$"?get_offset@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ" = comdat any

$"?get_global_id@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ" = comdat any

$"?get_global_range@?$nd_item@$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ" = comdat any

$"??$?0$00@?$item@$00$00@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@1@Z" = comdat any

$"??$get_offset@$00@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@12@XZ" = comdat any

$"?get_id@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ" = comdat any

$"?get_range@?$item@$00$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ" = comdat any

$"?set_allowed_range@?$item@$00$00@sycl@cl@@AEAAXV?$range@$00@23@@Z" = comdat any

$"??$?0$00$00@?$id@$00@sycl@cl@@QEAA@AEBV?$item@$00$00@12@@Z" = comdat any

$"??$?A$00X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEAHV?$id@$00@12@@Z" = comdat any

$"??$getLinearIndex@$00@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z" = comdat any

$"?getQualifiedPtr@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ" = comdat any

$"?getMemoryRange@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$range@$02@34@XZ" = comdat any

$"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z" = comdat any

$"?getOffset@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$id@$02@34@XZ" = comdat any

$"??$?CVAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ" = comdat any

$"?getPtr@AccessorBaseHost@detail@sycl@cl@@IEBAPEAXXZ" = comdat any

$"??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z" = comdat any

$"?_Tidy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXXZ" = comdat any

$"?_Empty@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBA_NXZ" = comdat any

$"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ" = comdat any

$"?_Local@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBA_NXZ" = comdat any

$"?_Reset_copy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEBV12@@Z" = comdat any

$"??0HostKernelBase@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??1HostKernelBase@detail@sycl@cl@@UEAA@XZ" = comdat any

$"?call@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAXAEBVNDRDescT@234@PEAVHostProfilingInfo@234@@Z" = comdat any

$"?getPtr@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEADXZ" = comdat any

$"??_G?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??_GHostKernelBase@detail@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"?set@NDRDescT@detail@sycl@cl@@QEAAXHV?$nd_range@$02@34@@Z" = comdat any

$"??Dsycl@cl@@YA?AV?$range@$02@01@AEBV201@0@Z" = comdat any

$"??0?$nd_range@$02@sycl@cl@@QEAA@V?$range@$02@12@0@Z" = comdat any

$"??$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@123@@Z" = comdat any

$"?get_global_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ" = comdat any

$"?get_local_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ" = comdat any

$"?get_offset@?$nd_range@$02@sycl@cl@@QEBA?AV?$id@$02@23@XZ" = comdat any

$"??0?$id@$02@sycl@cl@@QEAA@XZ" = comdat any

$"??$?0$02$0A@@?$array@$02@detail@sycl@cl@@QEAA@XZ" = comdat any

$"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ" = comdat any

$"??0nd_range_error@sycl@cl@@QEAA@PEBDH@Z" = comdat any

$"??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z" = comdat any

$"??1nd_range_error@sycl@cl@@UEAA@XZ" = comdat any

$"??0?$id@$00@sycl@cl@@QEAA@XZ" = comdat any

$"??0nd_range_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z" = comdat any

$"??_Gnd_range_error@sycl@cl@@UEAAPEAXI@Z" = comdat any

$"??$get@$00@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ" = comdat any

$"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@AEAV423@@Z" = comdat any

$"??R<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z" = comdat any

$"??B?$array@$00@detail@sycl@cl@@QEBA?AV?$id@$00@23@XZ" = comdat any

$"??$createGroup@$00@Builder@detail@sycl@cl@@SA?AV?$group@$00@23@AEBV?$range@$00@23@00AEBV?$id@$00@23@@Z" = comdat any

$"??0?$group@$00@sycl@cl@@IEAA@AEBV?$range@$00@12@0V312@AEBV?$id@$00@12@@Z" = comdat any

$"??Lsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z" = comdat any

$"??Gsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z" = comdat any

$"??Ksycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z" = comdat any

$"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???R4?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???R5?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@AEAV423@@Z" = comdat any

$"??R<lambda_1>@?0???R0?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z@QEBA?A?6@1@Z" = comdat any

$"??Hsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z" = comdat any

$"??Dsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z" = comdat any

$"??$createItem@$00$0A@@Builder@detail@sycl@cl@@SA?AV?$item@$00$0A@@23@AEBV?$range@$00@23@AEBV?$id@$00@23@@Z" = comdat any

$"??$createNDItem@$00@Builder@detail@sycl@cl@@SA?AV?$nd_item@$00@23@AEBV?$item@$00$00@23@AEBV?$item@$00$0A@@23@AEBV?$group@$00@23@@Z" = comdat any

$"??$runKernelWithArg@$$CBV?$nd_item@$00@sycl@cl@@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@detail@sycl@cl@@YAXV?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@12@@Z" = comdat any

$"??$?0$0A@@?$item@$00$0A@@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@@Z" = comdat any

$"??0?$nd_item@$00@sycl@cl@@IEAA@AEBV?$item@$00$00@12@AEBV?$item@$00$0A@@12@AEBV?$group@$00@12@@Z" = comdat any

$"??R?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAXAEBV?$nd_item@$00@sycl@cl@@@Z" = comdat any

$"??1?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAA@XZ" = comdat any

$"??$exchange@PEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@@std@@YAPEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@0@Z" = comdat any

$"?_Get_first@?$_Compressed_pair@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@PEAVHostKernelBase@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@VHostKernelBase@detail@sycl@cl@@@2@XZ" = comdat any

$"??R?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@QEBAXPEAVHostKernelBase@detail@sycl@cl@@@Z" = comdat any

$"?_Target@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBAPEBXAEBVtype_info@@@Z" = comdat any

$"?_Target@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAPEBXAEBVtype_info@@@Z" = comdat any

$"??8type_info@@QEBA_NAEBV0@@Z" = comdat any

$"??$_Destroy_range@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@YAXPEAVArgDesc@detail@sycl@cl@@QEAV1234@AEAV?$allocator@VArgDesc@detail@sycl@cl@@@0@@Z" = comdat any

$"?_Getal@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ" = comdat any

$"?_Get_first@?$_Compressed_pair@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@VArgDesc@detail@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ" = comdat any

$"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z" = comdat any

$"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z" = comdat any

$"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ" = comdat any

$"??$_Reallocate_for@V<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z" = comdat any

$"??R<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA?A?<auto>@@QEAD10@Z" = comdat any

$"?isESIMD@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SA_NXZ" = comdat any

$"?getParamDesc@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z" = comdat any

$"?getNumParams@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAIXZ" = comdat any

$"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@$$QEAV012@@Z" = comdat any

$"??0AccessorBaseHost@detail@sycl@cl@@QEAA@$$QEAV0123@@Z" = comdat any

$"??0AccessorBaseHost@detail@sycl@cl@@QEAA@AEBV0123@@Z" = comdat any

$"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z" = comdat any

$"??$_Copy_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@1@@Z" = comdat any

$"?_Incref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAXXZ" = comdat any

$"?_Tidy@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEAAXXZ" = comdat any

$"?_Empty@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEBA_NXZ" = comdat any

$"?_Getimpl@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@XZ" = comdat any

$"?_Local@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBA_NXZ" = comdat any

$"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z" = comdat any

$"?getAdjustedMode@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z" = comdat any

$"?preScreenAccessor@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z" = comdat any

$"??$getLinearIndex@$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z" = comdat any

$"?getQualifiedPtr@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ" = comdat any

$_Fenv1 = comdat any

$"??_C@_0L@IIJNMLAL@?5?5Device?3?5?$AA@" = comdat any

$"??_C@_04GHJNJNPO@main?$AA@" = comdat any

$"??_C@_09IENDANKA@main1?4cpp?$AA@" = comdat any

$"??_C@_0BC@OMDBFOOL@Device?5selected?3?5?$AA@" = comdat any

$"??_C@_03CEONNMIO@i?3?5?$AA@" = comdat any

$"??_C@_03NLJIHOMM@?5?9?5?$AA@" = comdat any

$"?_Fake_alloc@std@@3U_Fake_allocator@1@B" = comdat any

$"??_R0H@8" = comdat any

$"??_7?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" = comdat largest

$"??_R4?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" = comdat any

$"??_R0?AV?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@@8" = comdat any

$"??_R3?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = comdat any

$"??_R2?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = comdat any

$"??_R1A@?0A@EA@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = comdat any

$"??_R1A@?0A@EA@_Ref_count_base@std@@8" = comdat any

$"??_R0?AV_Ref_count_base@std@@@8" = comdat any

$"??_R3_Ref_count_base@std@@8" = comdat any

$"??_R2_Ref_count_base@std@@8" = comdat any

$"??_7?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" = comdat largest

$"??_R4?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" = comdat any

$"??_R0?AV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@8" = comdat any

$"??_R3?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = comdat any

$"??_R2?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@SYCLMemObjAllocator@detail@sycl@cl@@8" = comdat any

$"??_R0?AVSYCLMemObjAllocator@detail@sycl@cl@@@8" = comdat any

$"??_R3SYCLMemObjAllocator@detail@sycl@cl@@8" = comdat any

$"??_R2SYCLMemObjAllocator@detail@sycl@cl@@8" = comdat any

$"??_7SYCLMemObjAllocator@detail@sycl@cl@@6B@" = comdat largest

$"??_R4SYCLMemObjAllocator@detail@sycl@cl@@6B@" = comdat any

$"??_R0?AVbad_alloc@std@@@8" = comdat any

$"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24" = comdat any

$"??_R0?AVexception@std@@@8" = comdat any

$"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" = comdat any

$"_CTA2?AVbad_alloc@std@@" = comdat any

$"_TI2?AVbad_alloc@std@@" = comdat any

$"??_C@_0P@GHFPNOJB@bad?5allocation?$AA@" = comdat any

$"??_7bad_alloc@std@@6B@" = comdat largest

$"??_R4bad_alloc@std@@6B@" = comdat any

$"??_R3bad_alloc@std@@8" = comdat any

$"??_R2bad_alloc@std@@8" = comdat any

$"??_R1A@?0A@EA@bad_alloc@std@@8" = comdat any

$"??_R1A@?0A@EA@exception@std@@8" = comdat any

$"??_R3exception@std@@8" = comdat any

$"??_R2exception@std@@8" = comdat any

$"??_7exception@std@@6B@" = comdat largest

$"??_R4exception@std@@6B@" = comdat any

$"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@" = comdat any

$"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@" = comdat any

$"??_R0?AVinvalid_parameter_error@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVinvalid_parameter_error@sycl@cl@@@8??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"??_R0?AVruntime_error@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVruntime_error@sycl@cl@@@8??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"??_R0?AVexception@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"_CTA4?AVinvalid_parameter_error@sycl@cl@@" = comdat any

$"_TI4?AVinvalid_parameter_error@sycl@cl@@" = comdat any

$"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@" = comdat any

$"??_R0?AVbad_array_new_length@std@@@8" = comdat any

$"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24" = comdat any

$"_CTA3?AVbad_array_new_length@std@@" = comdat any

$"_TI3?AVbad_array_new_length@std@@" = comdat any

$"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@" = comdat any

$"??_7bad_array_new_length@std@@6B@" = comdat largest

$"??_R4bad_array_new_length@std@@6B@" = comdat any

$"??_R3bad_array_new_length@std@@8" = comdat any

$"??_R2bad_array_new_length@std@@8" = comdat any

$"??_R1A@?0A@EA@bad_array_new_length@std@@8" = comdat any

$"??_7invalid_parameter_error@sycl@cl@@6B@" = comdat largest

$"??_R4invalid_parameter_error@sycl@cl@@6B@" = comdat any

$"??_R3invalid_parameter_error@sycl@cl@@8" = comdat any

$"??_R2invalid_parameter_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@invalid_parameter_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@runtime_error@sycl@cl@@8" = comdat any

$"??_R3runtime_error@sycl@cl@@8" = comdat any

$"??_R2runtime_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@exception@sycl@cl@@8" = comdat any

$"??_R3exception@sycl@cl@@8" = comdat any

$"??_R2exception@sycl@cl@@8" = comdat any

$"??_7runtime_error@sycl@cl@@6B@" = comdat largest

$"??_R4runtime_error@sycl@cl@@6B@" = comdat any

$"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" = comdat any

$"??_R0?AV?$_Func_base@XAEAVhandler@sycl@cl@@@std@@@8" = comdat any

$"??_R3?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" = comdat any

$"??_R2?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" = comdat any

$"??_C@_0L@EMKCPDMN@operator?$CI?$CJ?$AA@" = comdat any

$"??_C@_0BA@FOIKENOD@vector?5too?5long?$AA@" = comdat any

$"??_7?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" = comdat largest

$"??_R4?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" = comdat any

$"??_R0?AV?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@@8" = comdat any

$"??_R3?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = comdat any

$"??_R2?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = comdat any

$"??_R1A@?0A@EA@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = comdat any

$"??_C@_0GD@NPJKHGHF@SYCL?5buffer?5size?5is?5zero?4?5To?5cre@" = comdat any

$"??_R0?AVinvalid_object_error@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVinvalid_object_error@sycl@cl@@@8??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"??_R0?AVdevice_error@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVdevice_error@sycl@cl@@@8??0device_error@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"_CTA4?AVinvalid_object_error@sycl@cl@@" = comdat any

$"_TI4?AVinvalid_object_error@sycl@cl@@" = comdat any

$"??_C@_0DE@JHMCFHEP@accessor?5would?5cannot?5be?5both?5re@" = comdat any

$"??_7invalid_object_error@sycl@cl@@6B@" = comdat largest

$"??_R4invalid_object_error@sycl@cl@@6B@" = comdat any

$"??_R3invalid_object_error@sycl@cl@@8" = comdat any

$"??_R2invalid_object_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@invalid_object_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@device_error@sycl@cl@@8" = comdat any

$"??_R3device_error@sycl@cl@@8" = comdat any

$"??_R2device_error@sycl@cl@@8" = comdat any

$"??_7device_error@sycl@cl@@6B@" = comdat largest

$"??_R4device_error@sycl@cl@@6B@" = comdat any

$"??_R0PEAVFillBuffer@@@8" = comdat any

$"??_C@_0CC@BLKNDEF@parallel_for?5range?5adjusted?5from@" = comdat any

$"??_C@_04MKEOLIJC@?5to?5?$AA@" = comdat any

$"??_C@_0DJ@JOCNJMGC@_ZTSZZ4mainENKUlRN2cl4sycl7handl@" = comdat any

$"?Limit@?1???$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z@4_KB" = comdat any

$"??_C@_0GI@OPDLEPNK@Provided?5range?5is?5out?5of?5integer@" = comdat any

$"_CTA3?AVruntime_error@sycl@cl@@" = comdat any

$"_TI3?AVruntime_error@sycl@cl@@" = comdat any

$"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = comdat any

$"??_R0?AV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@@8" = comdat any

$"??_R3?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" = comdat any

$"??_R2?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" = comdat any

$"??_7?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" = comdat largest

$"??_R4?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" = comdat any

$"??_R0?AV?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@@8" = comdat any

$"??_R3?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = comdat any

$"??_R2?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@HostKernelBase@detail@sycl@cl@@8" = comdat any

$"??_R0?AVHostKernelBase@detail@sycl@cl@@@8" = comdat any

$"??_R3HostKernelBase@detail@sycl@cl@@8" = comdat any

$"??_R2HostKernelBase@detail@sycl@cl@@8" = comdat any

$"??_7HostKernelBase@detail@sycl@cl@@6B@" = comdat largest

$"??_R4HostKernelBase@detail@sycl@cl@@6B@" = comdat any

$"??_C@_0CD@LPBAPNCF@Invalid?5local?5size?5for?5global?5si@" = comdat any

$"??_R0?AVnd_range_error@sycl@cl@@@8" = comdat any

$"_CT??_R0?AVnd_range_error@sycl@cl@@@8??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z80" = comdat any

$"_CTA4?AVnd_range_error@sycl@cl@@" = comdat any

$"_TI4?AVnd_range_error@sycl@cl@@" = comdat any

$"??_7nd_range_error@sycl@cl@@6B@" = comdat largest

$"??_R4nd_range_error@sycl@cl@@6B@" = comdat any

$"??_R3nd_range_error@sycl@cl@@8" = comdat any

$"??_R2nd_range_error@sycl@cl@@8" = comdat any

$"??_R1A@?0A@EA@nd_range_error@sycl@cl@@8" = comdat any

$"??_C@_1OG@FLOAHMKB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAK?$AAi?$AAk?$AAe?$AA?2?$AAD?$AAe?$AAs?$AAk?$AAt?$AAo?$AAp?$AA?2?$AAT?$AAF?$AAM?$AA?2?$AAr?$AAe?$AAp?$AAo?$AAs?$AA?2@" = comdat any

$"??_C@_1IC@OOFNJDPJ@?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?$CF?$AA?5?$AAL?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAg?$AAl?$AAo?$AAb?$AAa?$AAl@" = comdat any

$"??_C@_1KG@HJCACLNI@?$AA?$CI?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?1?$AA?5?$AAL?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAr?$AAo?$AAu?$AAp?$AAR?$AAa?$AAn?$AAg?$AAe?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@" = comdat any

$"??_C@_0FM@OMEJKKJL@_ZTSN2cl4sycl6detail19__pf_kerne@" = comdat any

$"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = comdat any

@_Fenv1 = weak_odr dso_local constant %struct.fenv_t { i32 1056964671, i32 0 }, comdat, align 4
@"?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A" = external dllimport global %"class.std::basic_ostream", align 8
@"??_C@_0L@IIJNMLAL@?5?5Device?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"  Device: \00", comdat, align 1
@"??_C@_04GHJNJNPO@main?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c"main\00", comdat, align 1
@"??_C@_09IENDANKA@main1?4cpp?$AA@" = linkonce_odr dso_local unnamed_addr constant [10 x i8] c"main1.cpp\00", comdat, align 1
@"??_C@_0BC@OMDBFOOL@Device?5selected?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i8] c"Device selected: \00", comdat, align 1
@"??_C@_03CEONNMIO@i?3?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c"i: \00", comdat, align 1
@"??_C@_03NLJIHOMM@?5?9?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [4 x i8] c" - \00", comdat, align 1
@"?_Fake_alloc@std@@3U_Fake_allocator@1@B" = linkonce_odr dso_local constant %"struct.std::_Fake_allocator" undef, comdat, align 1
@"??_7type_info@@6B@" = external constant i8*
@"??_R0H@8" = linkonce_odr global %rtti.TypeDescriptor2 { i8** @"??_7type_info@@6B@", i8* null, [3 x i8] c".H\00" }, comdat
@0 = private unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" to i8*), i8* bitcast (void (%"class.std::_Ref_count_obj2"*)* @"?_Destroy@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ" to i8*), i8* bitcast (void (%"class.std::_Ref_count_obj2"*)* @"?_Delete_this@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ" to i8*), i8* bitcast (i8* (%"class.std::_Ref_count_obj2"*, i32)* @"??_G?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.std::_Ref_count_base"*, %class.type_info*)* @"?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z" to i8*)] }, comdat($"??_7?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@")
@"??_R4?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor57* @"??_R0?AV?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AV?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@@8" = linkonce_odr global %rtti.TypeDescriptor57 { i8** @"??_7type_info@@6B@", i8* null, [58 x i8] c".?AV?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@\00" }, comdat
@__ImageBase = external dso_local constant i8
@"??_R3?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@_Ref_count_base@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor57* @"??_R0?AV?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@_Ref_count_base@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor25* @"??_R0?AV_Ref_count_base@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3_Ref_count_base@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AV_Ref_count_base@std@@@8" = linkonce_odr global %rtti.TypeDescriptor25 { i8** @"??_7type_info@@6B@", i8* null, [26 x i8] c".?AV_Ref_count_base@std@@\00" }, comdat
@"??_R3_Ref_count_base@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2_Ref_count_base@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2_Ref_count_base@std@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@_Ref_count_base@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@1 = private unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*)* @"?getAllocatorImpl@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@MEAAPEAXXZ" to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)* @"??_G?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i64)* @"?allocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAX_K@Z" to i8*), i8* bitcast (void (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i8*, i64)* @"?deallocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAXPEAX_K@Z" to i8*), i8* bitcast (i64 (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*)* @"?getValueSize@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEBA_KXZ" to i8*), i8* bitcast (void (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i64)* @"?setAlignment@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAX_K@Z" to i8*)] }, comdat($"??_7?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@")
@"??_R4?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor89* @"??_R0?AV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor89 { i8** @"??_7type_info@@6B@", i8* null, [90 x i8] c".?AV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@\00" }, comdat
@"??_R3?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@SYCLMemObjAllocator@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor89* @"??_R0?AV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@SYCLMemObjAllocator@detail@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor40* @"??_R0?AVSYCLMemObjAllocator@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3SYCLMemObjAllocator@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AVSYCLMemObjAllocator@detail@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor40 { i8** @"??_7type_info@@6B@", i8* null, [41 x i8] c".?AVSYCLMemObjAllocator@detail@sycl@cl@@\00" }, comdat
@"??_R3SYCLMemObjAllocator@detail@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2SYCLMemObjAllocator@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2SYCLMemObjAllocator@detail@sycl@cl@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@SYCLMemObjAllocator@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@2 = private unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4SYCLMemObjAllocator@detail@sycl@cl@@6B@" to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::SYCLMemObjAllocator"*, i32)* @"??_GSYCLMemObjAllocator@detail@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (void ()* @_purecall to i8*)] }, comdat($"??_7SYCLMemObjAllocator@detail@sycl@cl@@6B@")
@"??_R4SYCLMemObjAllocator@detail@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor40* @"??_R0?AVSYCLMemObjAllocator@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3SYCLMemObjAllocator@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4SYCLMemObjAllocator@detail@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AVbad_alloc@std@@@8" = linkonce_odr global %rtti.TypeDescriptor19 { i8** @"??_7type_info@@6B@", i8* null, [20 x i8] c".?AVbad_alloc@std@@\00" }, comdat
@"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 16, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVbad_alloc@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 24, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.std::bad_alloc"* (%"class.std::bad_alloc"*, %"class.std::bad_alloc"*)* @"??0bad_alloc@std@@QEAA@AEBV01@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_R0?AVexception@std@@@8" = linkonce_odr global %rtti.TypeDescriptor19 { i8** @"??_7type_info@@6B@", i8* null, [20 x i8] c".?AVexception@std@@\00" }, comdat
@"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVexception@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 24, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.std::exception"* (%"class.std::exception"*, %"class.std::exception"*)* @"??0exception@std@@QEAA@AEBV01@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"_CTA2?AVbad_alloc@std@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.2 { i32 2, [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI2?AVbad_alloc@std@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.std::bad_alloc"*)* @"??1bad_alloc@std@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.2* @"_CTA2?AVbad_alloc@std@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_C@_0P@GHFPNOJB@bad?5allocation?$AA@" = linkonce_odr dso_local unnamed_addr constant [15 x i8] c"bad allocation\00", comdat, align 1
@3 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4bad_alloc@std@@6B@" to i8*), i8* bitcast (i8* (%"class.std::bad_alloc"*, i32)* @"??_Gbad_alloc@std@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.std::exception"*)* @"?what@exception@std@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7bad_alloc@std@@6B@")
@"??_R4bad_alloc@std@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVbad_alloc@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3bad_alloc@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4bad_alloc@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3bad_alloc@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2bad_alloc@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2bad_alloc@std@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@bad_alloc@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@bad_alloc@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVbad_alloc@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3bad_alloc@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@exception@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVexception@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3exception@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2exception@std@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@4 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4exception@std@@6B@" to i8*), i8* bitcast (i8* (%"class.std::exception"*, i32)* @"??_Gexception@std@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.std::exception"*)* @"?what@exception@std@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7exception@std@@6B@")
@"??_R4exception@std@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor19* @"??_R0?AVexception@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4exception@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@" = linkonce_odr dso_local unnamed_addr constant [18 x i8] c"Unknown exception\00", comdat, align 1
@"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@" = linkonce_odr dso_local unnamed_addr constant [19 x i8] c"Index out of range\00", comdat, align 1
@"??_R0?AVinvalid_parameter_error@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor37 { i8** @"??_7type_info@@6B@", i8* null, [38 x i8] c".?AVinvalid_parameter_error@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVinvalid_parameter_error@sycl@cl@@@8??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor37* @"??_R0?AVinvalid_parameter_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::invalid_parameter_error"* (%"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"*)* @"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_R0?AVruntime_error@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor27 { i8** @"??_7type_info@@6B@", i8* null, [28 x i8] c".?AVruntime_error@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVruntime_error@sycl@cl@@@8??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor27* @"??_R0?AVruntime_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::runtime_error"* (%"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"*)* @"??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_R0?AVexception@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor23 { i8** @"??_7type_info@@6B@", i8* null, [24 x i8] c".?AVexception@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor23* @"??_R0?AVexception@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::exception"* (%"class.cl::sycl::exception"*, %"class.cl::sycl::exception"*)* @"??0exception@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"_CTA4?AVinvalid_parameter_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.4 { i32 4, [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVinvalid_parameter_error@sycl@cl@@@8??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVruntime_error@sycl@cl@@@8??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI4?AVinvalid_parameter_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.cl::sycl::invalid_parameter_error"*)* @"??1invalid_parameter_error@sycl@cl@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.4* @"_CTA4?AVinvalid_parameter_error@sycl@cl@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@" = linkonce_odr dso_local unnamed_addr constant [16 x i8] c"string too long\00", comdat, align 1
@"??_R0?AVbad_array_new_length@std@@@8" = linkonce_odr global %rtti.TypeDescriptor30 { i8** @"??_7type_info@@6B@", i8* null, [31 x i8] c".?AVbad_array_new_length@std@@\00" }, comdat
@"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor30* @"??_R0?AVbad_array_new_length@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 24, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.std::bad_array_new_length"* (%"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"*)* @"??0bad_array_new_length@std@@QEAA@AEBV01@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"_CTA3?AVbad_array_new_length@std@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.3 { i32 3, [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI3?AVbad_array_new_length@std@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.std::bad_array_new_length"*)* @"??1bad_array_new_length@std@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.3* @"_CTA3?AVbad_array_new_length@std@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@" = linkonce_odr dso_local unnamed_addr constant [21 x i8] c"bad array new length\00", comdat, align 1
@5 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4bad_array_new_length@std@@6B@" to i8*), i8* bitcast (i8* (%"class.std::bad_array_new_length"*, i32)* @"??_Gbad_array_new_length@std@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.std::exception"*)* @"?what@exception@std@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7bad_array_new_length@std@@6B@")
@"??_R4bad_array_new_length@std@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor30* @"??_R0?AVbad_array_new_length@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3bad_array_new_length@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4bad_array_new_length@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3bad_array_new_length@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 3, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([4 x i32]* @"??_R2bad_array_new_length@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2bad_array_new_length@std@@8" = linkonce_odr constant [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@bad_array_new_length@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@bad_alloc@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@bad_array_new_length@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor30* @"??_R0?AVbad_array_new_length@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 2, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3bad_array_new_length@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@6 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4invalid_parameter_error@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::invalid_parameter_error"*, i32)* @"??_Ginvalid_parameter_error@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::exception"*)* @"?what@exception@sycl@cl@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7invalid_parameter_error@sycl@cl@@6B@")
@"??_R4invalid_parameter_error@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor37* @"??_R0?AVinvalid_parameter_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3invalid_parameter_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4invalid_parameter_error@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3invalid_parameter_error@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 4, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([5 x i32]* @"??_R2invalid_parameter_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2invalid_parameter_error@sycl@cl@@8" = linkonce_odr constant [5 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@invalid_parameter_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@invalid_parameter_error@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor37* @"??_R0?AVinvalid_parameter_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 3, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3invalid_parameter_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@runtime_error@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor27* @"??_R0?AVruntime_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 2, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3runtime_error@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 3, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([4 x i32]* @"??_R2runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2runtime_error@sycl@cl@@8" = linkonce_odr constant [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@exception@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor23* @"??_R0?AVexception@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3exception@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2exception@sycl@cl@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@7 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4runtime_error@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::runtime_error"*, i32)* @"??_Gruntime_error@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::exception"*)* @"?what@exception@sycl@cl@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7runtime_error@sycl@cl@@6B@")
@"??_R4runtime_error@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor27* @"??_R0?AVruntime_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4runtime_error@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"?__type_info_root_node@@3U__type_info_node@@A" = external dso_local global %struct.__type_info_node, align 1
@8 = private unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" to i8*), i8* bitcast (%"class.std::_Func_base.38"* (%"class.std::_Func_impl_no_alloc"*, i8*)* @"?_Copy@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (%"class.std::_Func_base.38"* (%"class.std::_Func_impl_no_alloc"*, i8*)* @"?_Move@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc"*, %"class.cl::sycl::handler"*)* @"?_Do_call@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAXAEAVhandler@sycl@cl@@@Z" to i8*), i8* bitcast (%class.type_info* (%"class.std::_Func_impl_no_alloc"*)* @"?_Target_type@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAAEBVtype_info@@XZ" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc"*, i1)* @"?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAX_N@Z" to i8*), i8* bitcast (i8* (%"class.std::_Func_impl_no_alloc"*)* @"?_Get@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAPEBXXZ" to i8*)] }, comdat($"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@")
@"??_R4?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" = internal constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor78* @"??_R0?AV?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AV?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@@8" = internal global %rtti.TypeDescriptor78 { i8** @"??_7type_info@@6B@", i8* null, [79 x i8] c".?AV?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@\00" }
@"??_R3?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" = internal constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R2?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" = internal constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0]
@"??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" = internal constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor78* @"??_R0?AV?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R1A@?0A@EA@?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" = internal constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor45* @"??_R0?AV?$_Func_base@XAEAVhandler@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AV?$_Func_base@XAEAVhandler@sycl@cl@@@std@@@8" = linkonce_odr global %rtti.TypeDescriptor45 { i8** @"??_7type_info@@6B@", i8* null, [46 x i8] c".?AV?$_Func_base@XAEAVhandler@sycl@cl@@@std@@\00" }, comdat
@"??_R3?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_base@XAEAVhandler@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_C@_0L@EMKCPDMN@operator?$CI?$CJ?$AA@" = linkonce_odr dso_local unnamed_addr constant [11 x i8] c"operator()\00", comdat, align 1
@"??_C@_0BA@FOIKENOD@vector?5too?5long?$AA@" = linkonce_odr dso_local unnamed_addr constant [16 x i8] c"vector too long\00", comdat, align 1
@9 = private unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" to i8*), i8* bitcast (void (%"class.std::_Ref_count"*)* @"?_Destroy@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ" to i8*), i8* bitcast (void (%"class.std::_Ref_count"*)* @"?_Delete_this@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ" to i8*), i8* bitcast (i8* (%"class.std::_Ref_count"*, i32)* @"??_G?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.std::_Ref_count_base"*, %class.type_info*)* @"?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z" to i8*)] }, comdat($"??_7?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@")
@"??_R4?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor57* @"??_R0?AV?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AV?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@@8" = linkonce_odr global %rtti.TypeDescriptor57 { i8** @"??_7type_info@@6B@", i8* null, [58 x i8] c".?AV?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@\00" }, comdat
@"??_R3?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@_Ref_count_base@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor57* @"??_R0?AV?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_C@_0GD@NPJKHGHF@SYCL?5buffer?5size?5is?5zero?4?5To?5cre@" = linkonce_odr dso_local unnamed_addr constant [99 x i8] c"SYCL buffer size is zero. To create a device accessor, SYCL buffer size must be greater than zero.\00", comdat, align 1
@"??_R0?AVinvalid_object_error@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor34 { i8** @"??_7type_info@@6B@", i8* null, [35 x i8] c".?AVinvalid_object_error@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVinvalid_object_error@sycl@cl@@@8??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor34* @"??_R0?AVinvalid_object_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::invalid_object_error"* (%"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"*)* @"??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_R0?AVdevice_error@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor26 { i8** @"??_7type_info@@6B@", i8* null, [27 x i8] c".?AVdevice_error@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVdevice_error@sycl@cl@@@8??0device_error@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor26* @"??_R0?AVdevice_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::device_error"* (%"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"*)* @"??0device_error@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"_CTA4?AVinvalid_object_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.4 { i32 4, [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVinvalid_object_error@sycl@cl@@@8??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVdevice_error@sycl@cl@@@8??0device_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI4?AVinvalid_object_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.cl::sycl::invalid_object_error"*)* @"??1invalid_object_error@sycl@cl@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.4* @"_CTA4?AVinvalid_object_error@sycl@cl@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"??_C@_0DE@JHMCFHEP@accessor?5would?5cannot?5be?5both?5re@" = linkonce_odr dso_local unnamed_addr constant [52 x i8] c"accessor would cannot be both read_only and no_init\00", comdat, align 1
@10 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4invalid_object_error@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::invalid_object_error"*, i32)* @"??_Ginvalid_object_error@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::exception"*)* @"?what@exception@sycl@cl@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7invalid_object_error@sycl@cl@@6B@")
@"??_R4invalid_object_error@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor34* @"??_R0?AVinvalid_object_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3invalid_object_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4invalid_object_error@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3invalid_object_error@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 4, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([5 x i32]* @"??_R2invalid_object_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2invalid_object_error@sycl@cl@@8" = linkonce_odr constant [5 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@invalid_object_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@device_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@invalid_object_error@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor34* @"??_R0?AVinvalid_object_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 3, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3invalid_object_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@device_error@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor26* @"??_R0?AVdevice_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 2, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3device_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3device_error@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 3, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([4 x i32]* @"??_R2device_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2device_error@sycl@cl@@8" = linkonce_odr constant [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@device_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@11 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4device_error@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::device_error"*, i32)* @"??_Gdevice_error@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::exception"*)* @"?what@exception@sycl@cl@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7device_error@sycl@cl@@6B@")
@"??_R4device_error@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor26* @"??_R0?AVdevice_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3device_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4device_error@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0PEAVFillBuffer@@@8" = linkonce_odr global %rtti.TypeDescriptor17 { i8** @"??_7type_info@@6B@", i8* null, [18 x i8] c".PEAVFillBuffer@@\00" }, comdat
@"??_C@_0CC@BLKNDEF@parallel_for?5range?5adjusted?5from@" = linkonce_odr dso_local unnamed_addr constant [34 x i8] c"parallel_for range adjusted from \00", comdat, align 1
@"??_C@_04MKEOLIJC@?5to?5?$AA@" = linkonce_odr dso_local unnamed_addr constant [5 x i8] c" to \00", comdat, align 1
@"??_C@_0DJ@JOCNJMGC@_ZTSZZ4mainENKUlRN2cl4sycl7handl@" = linkonce_odr dso_local unnamed_addr constant [57 x i8] c"_ZTSZZ4mainENKUlRN2cl4sycl7handlerEE_clES2_E10FillBuffer\00", comdat, align 1
@"?Limit@?1???$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z@4_KB" = linkonce_odr dso_local constant i64 2147483647, comdat, align 8
@"??_C@_0GI@OPDLEPNK@Provided?5range?5is?5out?5of?5integer@" = linkonce_odr dso_local unnamed_addr constant [104 x i8] c"Provided range is out of integer limits. Pass `-fno-sycl-id-queries-fit-in-int' to disable range check.\00", comdat, align 1
@"_CTA3?AVruntime_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.3 { i32 3, [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVruntime_error@sycl@cl@@@8??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI3?AVruntime_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.cl::sycl::runtime_error"*)* @"??1runtime_error@sycl@cl@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.3* @"_CTA3?AVruntime_error@sycl@cl@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@12 = private unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i8*), i8* bitcast (%"class.std::_Func_base.118"* (%"class.std::_Func_impl_no_alloc.119"*, i8*)* @"?_Copy@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (%"class.std::_Func_base.118"* (%"class.std::_Func_impl_no_alloc.119"*, i8*)* @"?_Move@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc.119"*, %"class.cl::sycl::nd_item"*)* @"?_Do_call@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAXAEBV?$nd_item@$00@sycl@cl@@@Z" to i8*), i8* bitcast (%class.type_info* (%"class.std::_Func_impl_no_alloc.119"*)* @"?_Target_type@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAAEBVtype_info@@XZ" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc.119"*, i1)* @"?_Delete_this@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAX_N@Z" to i8*), i8* bitcast (i8* (%"class.std::_Func_impl_no_alloc.119"*)* @"?_Get@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEBXXZ" to i8*)] }, comdat($"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@")
@"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = internal constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor410* @"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@@8" = internal global %rtti.TypeDescriptor410 { i8** @"??_7type_info@@6B@", i8* null, [411 x i8] c".?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@\00" }
@"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R2?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0]
@"??_R1A@?0A@EA@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor410* @"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R1A@?0A@EA@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" = internal constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor51* @"??_R0?AV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@@8" = linkonce_odr global %rtti.TypeDescriptor51 { i8** @"??_7type_info@@6B@", i8* null, [52 x i8] c".?AV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@\00" }, comdat
@"??_R3?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@@8" = internal global %rtti.TypeDescriptor359 { i8** @"??_7type_info@@6B@", i8* null, [360 x i8] c".?AUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@\00" }
@13 = private unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" to i8*), i8* bitcast (void (%"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::HostProfilingInfo"*)* @"?call@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAXAEBVNDRDescT@234@PEAVHostProfilingInfo@234@@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::HostKernel"*)* @"?getPtr@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEADXZ" to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::HostKernel"*, i32)* @"??_G?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEAXI@Z" to i8*)] }, comdat($"??_7?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@")
@"??_R4?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor114* @"??_R0?AV?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AV?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor114 { i8** @"??_7type_info@@6B@", i8* null, [115 x i8] c".?AV?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@\00" }, comdat
@"??_R3?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = linkonce_odr constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@HostKernelBase@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor114* @"??_R0?AV?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R1A@?0A@EA@HostKernelBase@detail@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor35* @"??_R0?AVHostKernelBase@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3HostKernelBase@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R0?AVHostKernelBase@detail@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor35 { i8** @"??_7type_info@@6B@", i8* null, [36 x i8] c".?AVHostKernelBase@detail@sycl@cl@@\00" }, comdat
@"??_R3HostKernelBase@detail@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 1, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([2 x i32]* @"??_R2HostKernelBase@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2HostKernelBase@detail@sycl@cl@@8" = linkonce_odr constant [2 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@HostKernelBase@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@14 = private unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4HostKernelBase@detail@sycl@cl@@6B@" to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (void ()* @_purecall to i8*), i8* bitcast (i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)* @"??_GHostKernelBase@detail@sycl@cl@@UEAAPEAXI@Z" to i8*)] }, comdat($"??_7HostKernelBase@detail@sycl@cl@@6B@")
@"??_R4HostKernelBase@detail@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor35* @"??_R0?AVHostKernelBase@detail@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3HostKernelBase@detail@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4HostKernelBase@detail@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_C@_0CD@LPBAPNCF@Invalid?5local?5size?5for?5global?5si@" = linkonce_odr dso_local unnamed_addr constant [35 x i8] c"Invalid local size for global size\00", comdat, align 1
@"??_R0?AVnd_range_error@sycl@cl@@@8" = linkonce_odr global %rtti.TypeDescriptor28 { i8** @"??_7type_info@@6B@", i8* null, [29 x i8] c".?AVnd_range_error@sycl@cl@@\00" }, comdat
@"_CT??_R0?AVnd_range_error@sycl@cl@@@8??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z80" = linkonce_odr unnamed_addr constant %eh.CatchableType { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor28* @"??_R0?AVnd_range_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 -1, i32 0, i32 80, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%"class.cl::sycl::nd_range_error"* (%"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"*)* @"??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@"_CTA4?AVnd_range_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.CatchableTypeArray.4 { i32 4, [4 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVnd_range_error@sycl@cl@@@8??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVruntime_error@sycl@cl@@@8??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@sycl@cl@@@8??0exception@sycl@cl@@QEAA@AEBV012@@Z80" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableType* @"_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32)] }, section ".xdata", comdat
@"_TI4?AVnd_range_error@sycl@cl@@" = linkonce_odr unnamed_addr constant %eh.ThrowInfo { i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (void (%"class.cl::sycl::nd_range_error"*)* @"??1nd_range_error@sycl@cl@@UEAA@XZ" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%eh.CatchableTypeArray.4* @"_CTA4?AVnd_range_error@sycl@cl@@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, section ".xdata", comdat
@15 = private unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4nd_range_error@sycl@cl@@6B@" to i8*), i8* bitcast (i8* (%"class.cl::sycl::nd_range_error"*, i32)* @"??_Gnd_range_error@sycl@cl@@UEAAPEAXI@Z" to i8*), i8* bitcast (i8* (%"class.cl::sycl::exception"*)* @"?what@exception@sycl@cl@@UEBAPEBDXZ" to i8*)] }, comdat($"??_7nd_range_error@sycl@cl@@6B@")
@"??_R4nd_range_error@sycl@cl@@6B@" = linkonce_odr constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor28* @"??_R0?AVnd_range_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3nd_range_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4nd_range_error@sycl@cl@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R3nd_range_error@sycl@cl@@8" = linkonce_odr constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 4, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([5 x i32]* @"??_R2nd_range_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_R2nd_range_error@sycl@cl@@8" = linkonce_odr constant [5 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@nd_range_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@runtime_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@exception@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0], comdat
@"??_R1A@?0A@EA@nd_range_error@sycl@cl@@8" = linkonce_odr constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor28* @"??_R0?AVnd_range_error@sycl@cl@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 3, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3nd_range_error@sycl@cl@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }, comdat
@"??_C@_1OG@FLOAHMKB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAK?$AAi?$AAk?$AAe?$AA?2?$AAD?$AAe?$AAs?$AAk?$AAt?$AAo?$AAp?$AA?2?$AAT?$AAF?$AAM?$AA?2?$AAr?$AAe?$AAp?$AAo?$AAs?$AA?2@" = linkonce_odr dso_local unnamed_addr constant [115 x i16] [i16 67, i16 58, i16 92, i16 85, i16 115, i16 101, i16 114, i16 115, i16 92, i16 75, i16 105, i16 107, i16 101, i16 92, i16 68, i16 101, i16 115, i16 107, i16 116, i16 111, i16 112, i16 92, i16 84, i16 70, i16 77, i16 92, i16 114, i16 101, i16 112, i16 111, i16 115, i16 92, i16 69, i16 108, i16 101, i16 118, i16 101, i16 110, i16 82, i16 101, i16 110, i16 100, i16 101, i16 114, i16 92, i16 98, i16 117, i16 105, i16 108, i16 100, i16 92, i16 95, i16 100, i16 101, i16 112, i16 115, i16 92, i16 115, i16 121, i16 99, i16 108, i16 95, i16 108, i16 108, i16 118, i16 109, i16 45, i16 115, i16 114, i16 99, i16 92, i16 98, i16 117, i16 105, i16 108, i16 100, i16 92, i16 98, i16 105, i16 110, i16 92, i16 46, i16 46, i16 92, i16 105, i16 110, i16 99, i16 108, i16 117, i16 100, i16 101, i16 92, i16 115, i16 121, i16 99, i16 108, i16 92, i16 67, i16 76, i16 47, i16 115, i16 121, i16 99, i16 108, i16 47, i16 103, i16 114, i16 111, i16 117, i16 112, i16 46, i16 104, i16 112, i16 112, i16 0], comdat, align 2
@"??_C@_1IC@OOFNJDPJ@?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?$CF?$AA?5?$AAL?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAg?$AAl?$AAo?$AAb?$AAa?$AAl@" = linkonce_odr dso_local unnamed_addr constant [65 x i16] [i16 40, i16 40, i16 71, i16 32, i16 37, i16 32, i16 76, i16 41, i16 46, i16 115, i16 105, i16 122, i16 101, i16 40, i16 41, i16 32, i16 61, i16 61, i16 32, i16 48, i16 41, i16 32, i16 38, i16 38, i16 32, i16 34, i16 103, i16 108, i16 111, i16 98, i16 97, i16 108, i16 32, i16 114, i16 97, i16 110, i16 103, i16 101, i16 32, i16 105, i16 115, i16 32, i16 110, i16 111, i16 116, i16 32, i16 109, i16 117, i16 108, i16 116, i16 105, i16 112, i16 108, i16 101, i16 32, i16 111, i16 102, i16 32, i16 108, i16 111, i16 99, i16 97, i16 108, i16 34, i16 0], comdat, align 2
@"??_C@_1KG@HJCACLNI@?$AA?$CI?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?1?$AA?5?$AAL?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAr?$AAo?$AAu?$AAp?$AAR?$AAa?$AAn?$AAg?$AAe?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@" = linkonce_odr dso_local unnamed_addr constant [83 x i16] [i16 40, i16 40, i16 40, i16 71, i16 32, i16 47, i16 32, i16 76, i16 41, i16 32, i16 45, i16 32, i16 71, i16 114, i16 111, i16 117, i16 112, i16 82, i16 97, i16 110, i16 103, i16 101, i16 41, i16 46, i16 115, i16 105, i16 122, i16 101, i16 40, i16 41, i16 32, i16 61, i16 61, i16 32, i16 48, i16 41, i16 32, i16 38, i16 38, i16 32, i16 34, i16 105, i16 110, i16 99, i16 111, i16 110, i16 115, i16 105, i16 115, i16 116, i16 101, i16 110, i16 116, i16 32, i16 103, i16 114, i16 111, i16 117, i16 112, i16 32, i16 99, i16 111, i16 110, i16 115, i16 116, i16 114, i16 117, i16 99, i16 116, i16 111, i16 114, i16 32, i16 97, i16 114, i16 103, i16 117, i16 109, i16 101, i16 110, i16 116, i16 115, i16 34, i16 0], comdat, align 2
@"?kernel_signatures@detail@sycl@cl@@3QBUkernel_param_desc_t@123@B" = internal constant [4 x %"struct.cl::sycl::detail::kernel_param_desc_t"] [%"struct.cl::sycl::detail::kernel_param_desc_t" { i32 1, i32 8, i32 0 }, %"struct.cl::sycl::detail::kernel_param_desc_t" { i32 0, i32 4062, i32 8 }, %"struct.cl::sycl::detail::kernel_param_desc_t" { i32 0, i32 4062, i32 0 }, %"struct.cl::sycl::detail::kernel_param_desc_t" { i32 15, i32 -987654321, i32 -987654321 }], align 16
@"??_C@_0FM@OMEJKKJL@_ZTSN2cl4sycl6detail19__pf_kerne@" = linkonce_odr dso_local unnamed_addr constant [92 x i8] c"_ZTSN2cl4sycl6detail19__pf_kernel_wrapperIZZ4mainENKUlRNS0_7handlerEE_clES4_E10FillBufferEE\00", comdat, align 1
@16 = private unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* bitcast (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i8*), i8* bitcast (%"class.std::_Func_base.118"* (%"class.std::_Func_impl_no_alloc.128"*, i8*)* @"?_Copy@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (%"class.std::_Func_base.118"* (%"class.std::_Func_impl_no_alloc.128"*, i8*)* @"?_Move@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc.128"*, %"class.cl::sycl::nd_item"*)* @"?_Do_call@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAXAEBV?$nd_item@$00@sycl@cl@@@Z" to i8*), i8* bitcast (%class.type_info* (%"class.std::_Func_impl_no_alloc.128"*)* @"?_Target_type@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAAEBVtype_info@@XZ" to i8*), i8* bitcast (void (%"class.std::_Func_impl_no_alloc.128"*, i1)* @"?_Delete_this@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAX_N@Z" to i8*), i8* bitcast (i8* (%"class.std::_Func_impl_no_alloc.128"*)* @"?_Get@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEBXXZ" to i8*)] }, comdat($"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@")
@"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = internal constant %rtti.CompleteObjectLocator { i32 1, i32 0, i32 0, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor307* @"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.CompleteObjectLocator* @"??_R4?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@@8" = internal global %rtti.TypeDescriptor307 { i8** @"??_7type_info@@6B@", i8* null, [308 x i8] c".?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@\00" }
@"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant %rtti.ClassHierarchyDescriptor { i32 0, i32 0, i32 2, i32 trunc (i64 sub nuw nsw (i64 ptrtoint ([3 x i32]* @"??_R2?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R2?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant [3 x i32] [i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.BaseClassDescriptor* @"??_R1A@?0A@EA@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 0]
@"??_R1A@?0A@EA@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" = internal constant %rtti.BaseClassDescriptor { i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.TypeDescriptor307* @"??_R0?AV?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32), i32 1, i32 0, i32 -1, i32 0, i32 64, i32 trunc (i64 sub nuw nsw (i64 ptrtoint (%rtti.ClassHierarchyDescriptor* @"??_R3?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@8" to i64), i64 ptrtoint (i8* @__ImageBase to i64)) to i32) }
@"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@@8" = internal global %rtti.TypeDescriptor256 { i8** @"??_7type_info@@6B@", i8* null, [257 x i8] c".?AUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@\00" }
@"??_R0?AV<lambda_1>@?0??main@@9@@8" = internal global %rtti.TypeDescriptor27 { i8** @"??_7type_info@@6B@", i8* null, [28 x i8] c".?AV<lambda_1>@?0??main@@9@\00" }

@"??_7?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @0, i32 0, i32 0, i32 1)
@"??_7?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @1, i32 0, i32 0, i32 1)
@"??_7SYCLMemObjAllocator@detail@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @2, i32 0, i32 0, i32 1)
@"??_7bad_alloc@std@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @3, i32 0, i32 0, i32 1)
@"??_7exception@std@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @4, i32 0, i32 0, i32 1)
@"??_7bad_array_new_length@std@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @5, i32 0, i32 0, i32 1)
@"??_7invalid_parameter_error@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @6, i32 0, i32 0, i32 1)
@"??_7runtime_error@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @7, i32 0, i32 0, i32 1)
@"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" = internal unnamed_addr alias i8*, getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @8, i32 0, i32 0, i32 1)
@"??_7?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @9, i32 0, i32 0, i32 1)
@"??_7invalid_object_error@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @10, i32 0, i32 0, i32 1)
@"??_7device_error@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @11, i32 0, i32 0, i32 1)
@"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = internal unnamed_addr alias i8*, getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @12, i32 0, i32 0, i32 1)
@"??_7?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @13, i32 0, i32 0, i32 1)
@"??_7HostKernelBase@detail@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @14, i32 0, i32 0, i32 1)
@"??_7nd_range_error@sycl@cl@@6B@" = unnamed_addr alias i8*, getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @15, i32 0, i32 0, i32 1)
@"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" = internal unnamed_addr alias i8*, getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @16, i32 0, i32 0, i32 1)

; Function Attrs: mustprogress noinline norecurse optnone uwtable
define dso_local noundef i32 @main(i32 noundef %argc, i8** noundef %argv) #0 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %retval = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %argc.addr = alloca i32, align 4
  %__range1 = alloca %"class.std::vector"*, align 8
  %ref.tmp = alloca %"class.std::vector", align 8
  %__begin1 = alloca %"class.std::_Vector_iterator", align 8
  %__end1 = alloca %"class.std::_Vector_iterator", align 8
  %device = alloca %"class.cl::sycl::device", align 8
  %ref.tmp4 = alloca %"class.std::basic_string", align 8
  %Buffer = alloca %"class.cl::sycl::buffer", align 8
  %agg.tmp = alloca %"struct.cl::sycl::detail::code_location", align 8
  %ref.tmp13 = alloca %"class.cl::sycl::property_list", align 8
  %ref.tmp15 = alloca %"class.cl::sycl::range", align 8
  %Queue = alloca %"class.cl::sycl::queue", align 8
  %ref.tmp21 = alloca %"class.cl::sycl::property_list", align 8
  %device27 = alloca %"class.cl::sycl::device", align 8
  %ref.tmp31 = alloca %"class.std::basic_string", align 8
  %NumOfWorkItems = alloca %"class.cl::sycl::range", align 8
  %agg.tmp.ensured = alloca %"class.cl::sycl::event", align 8
  %ref.tmp39 = alloca %"struct.cl::sycl::detail::code_location", align 8
  %agg.tmp40 = alloca %class.anon, align 8
  %HostAccessor = alloca %"class.cl::sycl::accessor", align 8
  %agg.tmp44 = alloca %"struct.cl::sycl::detail::code_location", align 8
  %MismatchFound = alloca i8, align 1
  %I = alloca i64, align 8
  %agg.tmp55 = alloca %"class.cl::sycl::id.27", align 8
  store i32 0, i32* %retval, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i32 %argc, i32* %argc.addr, align 4
  call void @"?get_devices@device@sycl@cl@@SA?AV?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@W4device_type@info@23@@Z"(%"class.std::vector"* sret(%"class.std::vector") align 8 %ref.tmp, i64 noundef 4294967295)
  store %"class.std::vector"* %ref.tmp, %"class.std::vector"** %__range1, align 8
  %0 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  call void @"?begin@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %0, %"class.std::_Vector_iterator"* sret(%"class.std::_Vector_iterator") align 8 %__begin1) #15
  %1 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  call void @"?end@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %1, %"class.std::_Vector_iterator"* sret(%"class.std::_Vector_iterator") align 8 %__end1) #15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = bitcast %"class.std::_Vector_iterator"* %__begin1 to %"class.std::_Vector_const_iterator"*
  %3 = bitcast %"class.std::_Vector_iterator"* %__end1 to %"class.std::_Vector_const_iterator"*
  %call = call noundef zeroext i1 @"??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %2, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %3) #15
  br i1 %call, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  call void @"??1?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %ref.tmp) #15
  br label %for.end

for.body:                                         ; preds = %for.cond
  %call1 = call noundef nonnull align 8 dereferenceable(16) %"class.cl::sycl::device"* @"??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEAVdevice@sycl@cl@@XZ"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %__begin1) #15
  %call2 = call noundef %"class.cl::sycl::device"* @"??0device@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device, %"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %call1) #15
  %call3 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @"?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A", i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@IIJNMLAL@?5?5Device?3?5?$AA@", i64 0, i64 0))
          to label %invoke.cont unwind label %ehcleanup10

invoke.cont:                                      ; preds = %for.body
  invoke void @"??$get_info@$0BACL@@device@sycl@cl@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device, %"class.std::basic_string"* sret(%"class.std::basic_string") align 8 %ref.tmp4)
          to label %invoke.cont5 unwind label %ehcleanup10

invoke.cont5:                                     ; preds = %invoke.cont
  %call7 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call3, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp4)
          to label %invoke.cont6 unwind label %ehcleanup

invoke.cont6:                                     ; preds = %invoke.cont5
  %call9 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call7, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* noundef @"??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z")
          to label %invoke.cont8 unwind label %ehcleanup

invoke.cont8:                                     ; preds = %invoke.cont6
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp4) #15
  call void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device) #15
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont8
  %call11 = call noundef nonnull align 8 dereferenceable(8) %"class.std::_Vector_iterator"* @"??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %__begin1) #15
  br label %for.cond

ehcleanup:                                        ; preds = %invoke.cont6, %invoke.cont5
  %4 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp4) #15 [ "funclet"(token %4) ]
  cleanupret from %4 unwind label %ehcleanup10

ehcleanup10:                                      ; preds = %ehcleanup, %invoke.cont, %for.body
  %5 = cleanuppad within none []
  call void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device) #15 [ "funclet"(token %5) ]
  cleanupret from %5 unwind label %ehcleanup12

ehcleanup12:                                      ; preds = %ehcleanup10
  %6 = cleanuppad within none []
  call void @"??1?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %ref.tmp) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind to caller

for.end:                                          ; preds = %for.cond.cleanup
  call void @"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z"(%"struct.cl::sycl::detail::code_location"* sret(%"struct.cl::sycl::detail::code_location") align 8 %agg.tmp, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09IENDANKA@main1?4cpp?$AA@", i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04GHJNJNPO@main?$AA@", i32 0, i32 0), i32 noundef 24, i32 noundef 35) #15
  %call14 = call noundef %"class.cl::sycl::property_list"* @"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp13)
  %call17 = invoke noundef %"class.cl::sycl::range"* @"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp15, i64 noundef 4)
          to label %invoke.cont16 unwind label %ehcleanup20

invoke.cont16:                                    ; preds = %for.end
  %call19 = invoke noundef %"class.cl::sycl::buffer"* @"??0?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@AEBV?$range@$00@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp15, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp13, %"struct.cl::sycl::detail::code_location"* noundef %agg.tmp)
          to label %invoke.cont18 unwind label %ehcleanup20

invoke.cont18:                                    ; preds = %invoke.cont16
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp13) #15
  %call23 = invoke noundef %"class.cl::sycl::property_list"* @"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp21)
          to label %invoke.cont22 unwind label %ehcleanup70

invoke.cont22:                                    ; preds = %invoke.cont18
  %call25 = invoke noundef %"class.cl::sycl::queue"* @"??0queue@sycl@cl@@QEAA@AEBVproperty_list@12@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %Queue, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp21)
          to label %invoke.cont24 unwind label %ehcleanup26

invoke.cont24:                                    ; preds = %invoke.cont22
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp21) #15
  invoke void @"?get_device@queue@sycl@cl@@QEBA?AVdevice@23@XZ"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %Queue, %"class.cl::sycl::device"* sret(%"class.cl::sycl::device") align 8 %device27)
          to label %invoke.cont28 unwind label %ehcleanup69

invoke.cont28:                                    ; preds = %invoke.cont24
  %call30 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @"?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A", i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @"??_C@_0BC@OMDBFOOL@Device?5selected?3?5?$AA@", i64 0, i64 0))
          to label %invoke.cont29 unwind label %ehcleanup68

invoke.cont29:                                    ; preds = %invoke.cont28
  invoke void @"??$get_info@$0BACL@@device@sycl@cl@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device27, %"class.std::basic_string"* sret(%"class.std::basic_string") align 8 %ref.tmp31)
          to label %invoke.cont32 unwind label %ehcleanup68

invoke.cont32:                                    ; preds = %invoke.cont29
  %call34 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call30, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp31)
          to label %invoke.cont33 unwind label %ehcleanup35

invoke.cont33:                                    ; preds = %invoke.cont32
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp31) #15
  %call36 = call noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer) #15
  %call38 = invoke noundef %"class.cl::sycl::range"* @"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %NumOfWorkItems, i64 noundef %call36)
          to label %invoke.cont37 unwind label %ehcleanup68

invoke.cont37:                                    ; preds = %invoke.cont33
  call void @"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z"(%"struct.cl::sycl::detail::code_location"* sret(%"struct.cl::sycl::detail::code_location") align 8 %ref.tmp39, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09IENDANKA@main1?4cpp?$AA@", i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04GHJNJNPO@main?$AA@", i32 0, i32 0), i32 noundef 38, i32 noundef 5) #15
  %Buffer41 = getelementptr inbounds %class.anon, %class.anon* %agg.tmp40, i32 0, i32 0
  store %"class.cl::sycl::buffer"* %Buffer, %"class.cl::sycl::buffer"** %Buffer41, align 8
  %NumOfWorkItems42 = getelementptr inbounds %class.anon, %class.anon* %agg.tmp40, i32 0, i32 1
  store %"class.cl::sycl::range"* %NumOfWorkItems, %"class.cl::sycl::range"** %NumOfWorkItems42, align 8
  invoke void @"??$submit@V<lambda_1>@?0??main@@9@@queue@sycl@cl@@QEAA?AVevent@12@V<lambda_1>@?0??main@@9@AEBUcode_location@detail@12@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %Queue, %"class.cl::sycl::event"* sret(%"class.cl::sycl::event") align 8 %agg.tmp.ensured, %class.anon* noundef %agg.tmp40, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %ref.tmp39)
          to label %invoke.cont43 unwind label %ehcleanup68

invoke.cont43:                                    ; preds = %invoke.cont37
  call void @"??1event@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16) %agg.tmp.ensured) #15
  call void @"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z"(%"struct.cl::sycl::detail::code_location"* sret(%"struct.cl::sycl::detail::code_location") align 8 %agg.tmp44, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09IENDANKA@main1?4cpp?$AA@", i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04GHJNJNPO@main?$AA@", i32 0, i32 0), i32 noundef 51, i32 noundef 31) #15
  invoke void @"??$get_access@$0EAA@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer, %"class.cl::sycl::accessor"* sret(%"class.cl::sycl::accessor") align 8 %HostAccessor, %"struct.cl::sycl::detail::code_location"* noundef %agg.tmp44)
          to label %invoke.cont45 unwind label %ehcleanup68

invoke.cont45:                                    ; preds = %invoke.cont43
  store i8 0, i8* %MismatchFound, align 1
  store i64 0, i64* %I, align 8
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc65, %invoke.cont45
  %7 = load i64, i64* %I, align 8
  %call47 = call noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer) #15
  %cmp = icmp ult i64 %7, %call47
  br i1 %cmp, label %for.body48, label %for.end66

for.body48:                                       ; preds = %for.cond46
  %call50 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @"?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A", i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03CEONNMIO@i?3?5?$AA@", i64 0, i64 0))
          to label %invoke.cont49 unwind label %ehcleanup67

invoke.cont49:                                    ; preds = %for.body48
  %8 = load i64, i64* %I, align 8
  %call52 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call50, i64 noundef %8)
          to label %invoke.cont51 unwind label %ehcleanup67

invoke.cont51:                                    ; preds = %invoke.cont49
  %call54 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call52, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @"??_C@_03NLJIHOMM@?5?9?5?$AA@", i64 0, i64 0))
          to label %invoke.cont53 unwind label %ehcleanup67

invoke.cont53:                                    ; preds = %invoke.cont51
  %9 = load i64, i64* %I, align 8
  %call57 = invoke noundef %"class.cl::sycl::id.27"* @"??$?0$00@?$id@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.tmp55, i64 noundef %9)
          to label %invoke.cont56 unwind label %ehcleanup67

invoke.cont56:                                    ; preds = %invoke.cont53
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp55, i32 0, i32 0
  %coerce.dive58 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %10 = bitcast [1 x i64]* %coerce.dive58 to i64*
  %11 = load i64, i64* %10, align 8
  %call60 = invoke noundef nonnull align 4 dereferenceable(4) i32* @"??$?A$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEBHV?$id@$00@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %HostAccessor, i64 %11)
          to label %invoke.cont59 unwind label %ehcleanup67

invoke.cont59:                                    ; preds = %invoke.cont56
  %12 = load i32, i32* %call60, align 4
  %call62 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call54, i32 noundef %12)
          to label %invoke.cont61 unwind label %ehcleanup67

invoke.cont61:                                    ; preds = %invoke.cont59
  %call64 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call62, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* noundef @"??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z")
          to label %invoke.cont63 unwind label %ehcleanup67

invoke.cont63:                                    ; preds = %invoke.cont61
  br label %for.inc65

for.inc65:                                        ; preds = %invoke.cont63
  %13 = load i64, i64* %I, align 8
  %inc = add i64 %13, 1
  store i64 %inc, i64* %I, align 8
  br label %for.cond46, !llvm.loop !11

ehcleanup20:                                      ; preds = %invoke.cont16, %for.end
  %14 = cleanuppad within none []
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp13) #15 [ "funclet"(token %14) ]
  cleanupret from %14 unwind to caller

ehcleanup26:                                      ; preds = %invoke.cont22
  %15 = cleanuppad within none []
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp21) #15 [ "funclet"(token %15) ]
  cleanupret from %15 unwind label %ehcleanup70

ehcleanup35:                                      ; preds = %invoke.cont32
  %16 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp31) #15 [ "funclet"(token %16) ]
  cleanupret from %16 unwind label %ehcleanup68

for.end66:                                        ; preds = %for.cond46
  store i32 0, i32* %retval, align 4
  call void @"??1?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %HostAccessor) #15
  call void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device27) #15
  call void @"??1queue@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %Queue) #15
  call void @"??1?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer) #15
  %17 = load i32, i32* %retval, align 4
  ret i32 %17

ehcleanup67:                                      ; preds = %invoke.cont61, %invoke.cont59, %invoke.cont56, %invoke.cont53, %invoke.cont51, %invoke.cont49, %for.body48
  %18 = cleanuppad within none []
  call void @"??1?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %HostAccessor) #15 [ "funclet"(token %18) ]
  cleanupret from %18 unwind label %ehcleanup68

ehcleanup68:                                      ; preds = %ehcleanup67, %invoke.cont43, %invoke.cont37, %invoke.cont33, %ehcleanup35, %invoke.cont29, %invoke.cont28
  %19 = cleanuppad within none []
  call void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %device27) #15 [ "funclet"(token %19) ]
  cleanupret from %19 unwind label %ehcleanup69

ehcleanup69:                                      ; preds = %ehcleanup68, %invoke.cont24
  %20 = cleanuppad within none []
  call void @"??1queue@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %Queue) #15 [ "funclet"(token %20) ]
  cleanupret from %20 unwind label %ehcleanup70

ehcleanup70:                                      ; preds = %ehcleanup69, %ehcleanup26, %invoke.cont18
  %21 = cleanuppad within none []
  call void @"??1?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %Buffer) #15 [ "funclet"(token %21) ]
  cleanupret from %21 unwind to caller
}

declare dllimport void @"?get_devices@device@sycl@cl@@SA?AV?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@W4device_type@info@23@@Z"(%"class.std::vector"* sret(%"class.std::vector") align 8, i64 noundef) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?begin@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this, %"class.std::_Vector_iterator"* noalias sret(%"class.std::_Vector_iterator") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  %_My_data = alloca %"class.std::_Vector_val"*, align 8
  %0 = bitcast %"class.std::_Vector_iterator"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair", %"class.std::_Compressed_pair"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val"* %_Myval2, %"class.std::_Vector_val"** %_My_data, align 8
  %1 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %2 = bitcast %"class.std::_Vector_val"* %1 to %"struct.std::_Container_base0"*
  %3 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val", %"class.std::_Vector_val"* %3, i32 0, i32 0
  %4 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Myfirst, align 8
  %call = call noundef %"class.std::_Vector_iterator"* @"??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %agg.result, %"class.cl::sycl::device"* noundef %4, %"struct.std::_Container_base0"* noundef %2) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?end@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this, %"class.std::_Vector_iterator"* noalias sret(%"class.std::_Vector_iterator") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  %_My_data = alloca %"class.std::_Vector_val"*, align 8
  %0 = bitcast %"class.std::_Vector_iterator"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair", %"class.std::_Compressed_pair"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val"* %_Myval2, %"class.std::_Vector_val"** %_My_data, align 8
  %1 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %2 = bitcast %"class.std::_Vector_val"* %1 to %"struct.std::_Container_base0"*
  %3 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val", %"class.std::_Vector_val"* %3, i32 0, i32 1
  %4 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Mylast, align 8
  %call = call noundef %"class.std::_Vector_iterator"* @"??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %agg.result, %"class.cl::sycl::device"* noundef %4, %"struct.std::_Container_base0"* noundef %2) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"class.std::_Vector_const_iterator"* %_Right, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %0 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  %call = call noundef zeroext i1 @"??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this1, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(16) %"class.cl::sycl::device"* @"??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEAVdevice@sycl@cl@@XZ"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Vector_iterator"*, align 8
  store %"class.std::_Vector_iterator"* %this, %"class.std::_Vector_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_iterator"*, %"class.std::_Vector_iterator"** %this.addr, align 8
  %0 = bitcast %"class.std::_Vector_iterator"* %this1 to %"class.std::_Vector_const_iterator"*
  %call = call noundef nonnull align 8 dereferenceable(16) %"class.cl::sycl::device"* @"??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEBVdevice@sycl@cl@@XZ"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  ret %"class.cl::sycl::device"* %call
}

; Function Attrs: nounwind
declare dllimport noundef %"class.cl::sycl::device"* @"??0device@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::device"* noundef nonnull returned align 8 dereferenceable(16), %"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16)) unnamed_addr #3

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %_Str) #4 comdat {
entry:
  %_Str.addr = alloca %"class.std::basic_string"*, align 8
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  store %"class.std::basic_string"* %_Str, %"class.std::basic_string"** %_Str.addr, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %0 = load %"class.std::basic_string"*, %"class.std::basic_string"** %_Str.addr, align 8
  %call = call noundef i64 @"?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %0) #15
  %1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %_Str.addr, align 8
  %call1 = call noundef i8* @"?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %1) #15
  %2 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %call2 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %2, i8* noundef %call1, i64 noundef %call)
  ret %"class.std::basic_ostream"* %call2
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr, i8* noundef %_Val) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Val.addr = alloca i8*, align 8
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  %_State = alloca i32, align 4
  %_Count = alloca i64, align 8
  %_Pad = alloca i64, align 8
  %_Ok = alloca %"class.std::basic_ostream<char>::sentry", align 8
  %ref.tmp = alloca i32, align 4
  %ref.tmp38 = alloca i32, align 4
  %ref.tmp62 = alloca i32, align 4
  %ref.tmp77 = alloca i32, align 4
  store i8* %_Val, i8** %_Val.addr, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  store i32 0, i32* %_State, align 4
  %0 = load i8*, i8** %_Val.addr, align 8
  %call = call noundef i64 @"?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z"(i8* noundef %0) #15
  store i64 %call, i64* %_Count, align 8
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %vbptr = getelementptr inbounds i8, i8* %2, i64 0
  %3 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %3, align 8
  %4 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %4, align 4
  %5 = sext i32 %vbase_offs to i64
  %6 = add nsw i64 0, %5
  %7 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %6
  %8 = bitcast i8* %add.ptr to %"class.std::ios_base"*
  %call1 = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %8)
  %cmp = icmp sle i64 %call1, 0
  br i1 %cmp, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %10 = bitcast %"class.std::basic_ostream"* %9 to i8*
  %vbptr2 = getelementptr inbounds i8, i8* %10, i64 0
  %11 = bitcast i8* %vbptr2 to i32**
  %vbtable3 = load i32*, i32** %11, align 8
  %12 = getelementptr inbounds i32, i32* %vbtable3, i32 1
  %vbase_offs4 = load i32, i32* %12, align 4
  %13 = sext i32 %vbase_offs4 to i64
  %14 = add nsw i64 0, %13
  %15 = bitcast %"class.std::basic_ostream"* %9 to i8*
  %add.ptr5 = getelementptr inbounds i8, i8* %15, i64 %14
  %16 = bitcast i8* %add.ptr5 to %"class.std::ios_base"*
  %call6 = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %16)
  %17 = load i64, i64* %_Count, align 8
  %cmp7 = icmp sle i64 %call6, %17
  br i1 %cmp7, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %entry
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %19 = bitcast %"class.std::basic_ostream"* %18 to i8*
  %vbptr8 = getelementptr inbounds i8, i8* %19, i64 0
  %20 = bitcast i8* %vbptr8 to i32**
  %vbtable9 = load i32*, i32** %20, align 8
  %21 = getelementptr inbounds i32, i32* %vbtable9, i32 1
  %vbase_offs10 = load i32, i32* %21, align 4
  %22 = sext i32 %vbase_offs10 to i64
  %23 = add nsw i64 0, %22
  %24 = bitcast %"class.std::basic_ostream"* %18 to i8*
  %add.ptr11 = getelementptr inbounds i8, i8* %24, i64 %23
  %25 = bitcast i8* %add.ptr11 to %"class.std::ios_base"*
  %call12 = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %25)
  %26 = load i64, i64* %_Count, align 8
  %sub = sub nsw i64 %call12, %26
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 0, %cond.true ], [ %sub, %cond.false ]
  store i64 %cond, i64* %_Pad, align 8
  %27 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %call13 = call noundef %"class.std::basic_ostream<char>::sentry"* @"??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok, %"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %27)
  %call14 = invoke noundef zeroext i1 @"??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %cond.end
  br i1 %call14, label %if.else, label %if.then

if.then:                                          ; preds = %invoke.cont
  %28 = load i32, i32* %_State, align 4
  %or = or i32 %28, 4
  store i32 %or, i32* %_State, align 4
  br label %if.end98

if.else:                                          ; preds = %invoke.cont
  %29 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %30 = bitcast %"class.std::basic_ostream"* %29 to i8*
  %vbptr15 = getelementptr inbounds i8, i8* %30, i64 0
  %31 = bitcast i8* %vbptr15 to i32**
  %vbtable16 = load i32*, i32** %31, align 8
  %32 = getelementptr inbounds i32, i32* %vbtable16, i32 1
  %vbase_offs17 = load i32, i32* %32, align 4
  %33 = sext i32 %vbase_offs17 to i64
  %34 = add nsw i64 0, %33
  %35 = bitcast %"class.std::basic_ostream"* %29 to i8*
  %add.ptr18 = getelementptr inbounds i8, i8* %35, i64 %34
  %36 = bitcast i8* %add.ptr18 to %"class.std::ios_base"*
  %call20 = invoke noundef i32 @"?flags@ios_base@std@@QEBAHXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %36)
          to label %invoke.cont19 unwind label %catch.dispatch

invoke.cont19:                                    ; preds = %if.else
  %and = and i32 %call20, 448
  %cmp21 = icmp ne i32 %and, 64
  br i1 %cmp21, label %if.then22, label %if.end43

if.then22:                                        ; preds = %invoke.cont19
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then22
  %37 = load i64, i64* %_Pad, align 8
  %cmp23 = icmp slt i64 0, %37
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %38 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %39 = bitcast %"class.std::basic_ostream"* %38 to i8*
  %vbptr24 = getelementptr inbounds i8, i8* %39, i64 0
  %40 = bitcast i8* %vbptr24 to i32**
  %vbtable25 = load i32*, i32** %40, align 8
  %41 = getelementptr inbounds i32, i32* %vbtable25, i32 1
  %vbase_offs26 = load i32, i32* %41, align 4
  %42 = sext i32 %vbase_offs26 to i64
  %43 = add nsw i64 0, %42
  %44 = bitcast %"class.std::basic_ostream"* %38 to i8*
  %add.ptr27 = getelementptr inbounds i8, i8* %44, i64 %43
  %45 = bitcast i8* %add.ptr27 to %"class.std::basic_ios"*
  %call29 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %45)
          to label %invoke.cont28 unwind label %catch.dispatch

invoke.cont28:                                    ; preds = %for.body
  %46 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %47 = bitcast %"class.std::basic_ostream"* %46 to i8*
  %vbptr30 = getelementptr inbounds i8, i8* %47, i64 0
  %48 = bitcast i8* %vbptr30 to i32**
  %vbtable31 = load i32*, i32** %48, align 8
  %49 = getelementptr inbounds i32, i32* %vbtable31, i32 1
  %vbase_offs32 = load i32, i32* %49, align 4
  %50 = sext i32 %vbase_offs32 to i64
  %51 = add nsw i64 0, %50
  %52 = bitcast %"class.std::basic_ostream"* %46 to i8*
  %add.ptr33 = getelementptr inbounds i8, i8* %52, i64 %51
  %53 = bitcast i8* %add.ptr33 to %"class.std::basic_ios"*
  %call35 = invoke noundef i8 @"?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %53)
          to label %invoke.cont34 unwind label %catch.dispatch

invoke.cont34:                                    ; preds = %invoke.cont28
  %call37 = invoke noundef i32 @"?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call29, i8 noundef %call35)
          to label %invoke.cont36 unwind label %catch.dispatch

invoke.cont36:                                    ; preds = %invoke.cont34
  store i32 %call37, i32* %ref.tmp, align 4
  %call39 = call noundef i32 @"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ"() #15
  store i32 %call39, i32* %ref.tmp38, align 4
  %call40 = call noundef zeroext i1 @"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z"(i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp38, i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp) #15
  br i1 %call40, label %if.then41, label %if.end

if.then41:                                        ; preds = %invoke.cont36
  %54 = load i32, i32* %_State, align 4
  %or42 = or i32 %54, 4
  store i32 %or42, i32* %_State, align 4
  br label %for.end

if.end:                                           ; preds = %invoke.cont36
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %55 = load i64, i64* %_Pad, align 8
  %dec = add nsw i64 %55, -1
  store i64 %dec, i64* %_Pad, align 8
  br label %for.cond, !llvm.loop !13

for.end:                                          ; preds = %if.then41, %for.cond
  br label %if.end43

if.end43:                                         ; preds = %for.end, %invoke.cont19
  %56 = load i32, i32* %_State, align 4
  %cmp44 = icmp eq i32 %56, 0
  br i1 %cmp44, label %land.lhs.true, label %if.end56

land.lhs.true:                                    ; preds = %if.end43
  %57 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %58 = bitcast %"class.std::basic_ostream"* %57 to i8*
  %vbptr45 = getelementptr inbounds i8, i8* %58, i64 0
  %59 = bitcast i8* %vbptr45 to i32**
  %vbtable46 = load i32*, i32** %59, align 8
  %60 = getelementptr inbounds i32, i32* %vbtable46, i32 1
  %vbase_offs47 = load i32, i32* %60, align 4
  %61 = sext i32 %vbase_offs47 to i64
  %62 = add nsw i64 0, %61
  %63 = bitcast %"class.std::basic_ostream"* %57 to i8*
  %add.ptr48 = getelementptr inbounds i8, i8* %63, i64 %62
  %64 = bitcast i8* %add.ptr48 to %"class.std::basic_ios"*
  %call50 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %64)
          to label %invoke.cont49 unwind label %catch.dispatch

invoke.cont49:                                    ; preds = %land.lhs.true
  %65 = load i64, i64* %_Count, align 8
  %66 = load i8*, i8** %_Val.addr, align 8
  %call52 = invoke noundef i64 @"?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call50, i8* noundef %66, i64 noundef %65)
          to label %invoke.cont51 unwind label %catch.dispatch

invoke.cont51:                                    ; preds = %invoke.cont49
  %67 = load i64, i64* %_Count, align 8
  %cmp53 = icmp ne i64 %call52, %67
  br i1 %cmp53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %invoke.cont51
  %68 = load i32, i32* %_State, align 4
  %or55 = or i32 %68, 4
  store i32 %or55, i32* %_State, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %invoke.cont51, %if.end43
  %69 = load i32, i32* %_State, align 4
  %cmp57 = icmp eq i32 %69, 0
  br i1 %cmp57, label %if.then58, label %if.end86

if.then58:                                        ; preds = %if.end56
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc83, %if.then58
  %70 = load i64, i64* %_Pad, align 8
  %cmp60 = icmp slt i64 0, %70
  br i1 %cmp60, label %for.body61, label %for.end85

for.body61:                                       ; preds = %for.cond59
  %71 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %72 = bitcast %"class.std::basic_ostream"* %71 to i8*
  %vbptr63 = getelementptr inbounds i8, i8* %72, i64 0
  %73 = bitcast i8* %vbptr63 to i32**
  %vbtable64 = load i32*, i32** %73, align 8
  %74 = getelementptr inbounds i32, i32* %vbtable64, i32 1
  %vbase_offs65 = load i32, i32* %74, align 4
  %75 = sext i32 %vbase_offs65 to i64
  %76 = add nsw i64 0, %75
  %77 = bitcast %"class.std::basic_ostream"* %71 to i8*
  %add.ptr66 = getelementptr inbounds i8, i8* %77, i64 %76
  %78 = bitcast i8* %add.ptr66 to %"class.std::basic_ios"*
  %call68 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %78)
          to label %invoke.cont67 unwind label %catch.dispatch

invoke.cont67:                                    ; preds = %for.body61
  %79 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %80 = bitcast %"class.std::basic_ostream"* %79 to i8*
  %vbptr69 = getelementptr inbounds i8, i8* %80, i64 0
  %81 = bitcast i8* %vbptr69 to i32**
  %vbtable70 = load i32*, i32** %81, align 8
  %82 = getelementptr inbounds i32, i32* %vbtable70, i32 1
  %vbase_offs71 = load i32, i32* %82, align 4
  %83 = sext i32 %vbase_offs71 to i64
  %84 = add nsw i64 0, %83
  %85 = bitcast %"class.std::basic_ostream"* %79 to i8*
  %add.ptr72 = getelementptr inbounds i8, i8* %85, i64 %84
  %86 = bitcast i8* %add.ptr72 to %"class.std::basic_ios"*
  %call74 = invoke noundef i8 @"?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %86)
          to label %invoke.cont73 unwind label %catch.dispatch

invoke.cont73:                                    ; preds = %invoke.cont67
  %call76 = invoke noundef i32 @"?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call68, i8 noundef %call74)
          to label %invoke.cont75 unwind label %catch.dispatch

invoke.cont75:                                    ; preds = %invoke.cont73
  store i32 %call76, i32* %ref.tmp62, align 4
  %call78 = call noundef i32 @"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ"() #15
  store i32 %call78, i32* %ref.tmp77, align 4
  %call79 = call noundef zeroext i1 @"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z"(i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp77, i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp62) #15
  br i1 %call79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %invoke.cont75
  %87 = load i32, i32* %_State, align 4
  %or81 = or i32 %87, 4
  store i32 %or81, i32* %_State, align 4
  br label %for.end85

if.end82:                                         ; preds = %invoke.cont75
  br label %for.inc83

for.inc83:                                        ; preds = %if.end82
  %88 = load i64, i64* %_Pad, align 8
  %dec84 = add nsw i64 %88, -1
  store i64 %dec84, i64* %_Pad, align 8
  br label %for.cond59, !llvm.loop !14

for.end85:                                        ; preds = %if.then80, %for.cond59
  br label %if.end86

if.end86:                                         ; preds = %for.end85, %if.end56
  %89 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %90 = bitcast %"class.std::basic_ostream"* %89 to i8*
  %vbptr87 = getelementptr inbounds i8, i8* %90, i64 0
  %91 = bitcast i8* %vbptr87 to i32**
  %vbtable88 = load i32*, i32** %91, align 8
  %92 = getelementptr inbounds i32, i32* %vbtable88, i32 1
  %vbase_offs89 = load i32, i32* %92, align 4
  %93 = sext i32 %vbase_offs89 to i64
  %94 = add nsw i64 0, %93
  %95 = bitcast %"class.std::basic_ostream"* %89 to i8*
  %add.ptr90 = getelementptr inbounds i8, i8* %95, i64 %94
  %96 = bitcast i8* %add.ptr90 to %"class.std::ios_base"*
  %call92 = invoke noundef i64 @"?width@ios_base@std@@QEAA_J_J@Z"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %96, i64 noundef 0)
          to label %invoke.cont91 unwind label %catch.dispatch

catch.dispatch:                                   ; preds = %if.end86, %invoke.cont73, %invoke.cont67, %for.body61, %invoke.cont49, %land.lhs.true, %invoke.cont34, %invoke.cont28, %for.body, %if.else
  %97 = catchswitch within none [label %catch] unwind label %ehcleanup

catch:                                            ; preds = %catch.dispatch
  %98 = catchpad within %97 [i8* null, i32 64, i8* null]
  %99 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %100 = bitcast %"class.std::basic_ostream"* %99 to i8*
  %vbptr93 = getelementptr inbounds i8, i8* %100, i64 0
  %101 = bitcast i8* %vbptr93 to i32**
  %vbtable94 = load i32*, i32** %101, align 8
  %102 = getelementptr inbounds i32, i32* %vbtable94, i32 1
  %vbase_offs95 = load i32, i32* %102, align 4
  %103 = sext i32 %vbase_offs95 to i64
  %104 = add nsw i64 0, %103
  %105 = bitcast %"class.std::basic_ostream"* %99 to i8*
  %add.ptr96 = getelementptr inbounds i8, i8* %105, i64 %104
  %106 = bitcast i8* %add.ptr96 to %"class.std::basic_ios"*
  invoke void @"?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %106, i32 noundef 4, i1 noundef zeroext true) [ "funclet"(token %98) ]
          to label %invoke.cont97 unwind label %ehcleanup

invoke.cont97:                                    ; preds = %catch
  catchret from %98 to label %catchret.dest

catchret.dest:                                    ; preds = %invoke.cont97
  br label %try.cont

try.cont:                                         ; preds = %catchret.dest, %invoke.cont91
  br label %if.end98

invoke.cont91:                                    ; preds = %if.end86
  br label %try.cont

if.end98:                                         ; preds = %try.cont, %if.then
  %107 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %108 = bitcast %"class.std::basic_ostream"* %107 to i8*
  %vbptr99 = getelementptr inbounds i8, i8* %108, i64 0
  %109 = bitcast i8* %vbptr99 to i32**
  %vbtable100 = load i32*, i32** %109, align 8
  %110 = getelementptr inbounds i32, i32* %vbtable100, i32 1
  %vbase_offs101 = load i32, i32* %110, align 4
  %111 = sext i32 %vbase_offs101 to i64
  %112 = add nsw i64 0, %111
  %113 = bitcast %"class.std::basic_ostream"* %107 to i8*
  %add.ptr102 = getelementptr inbounds i8, i8* %113, i64 %112
  %114 = bitcast i8* %add.ptr102 to %"class.std::basic_ios"*
  %115 = load i32, i32* %_State, align 4
  invoke void @"?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %114, i32 noundef %115, i1 noundef zeroext false)
          to label %invoke.cont103 unwind label %ehcleanup

invoke.cont103:                                   ; preds = %if.end98
  %116 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  call void @"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok) #15
  ret %"class.std::basic_ostream"* %116

ehcleanup:                                        ; preds = %if.end98, %catch, %catch.dispatch, %cond.end
  %117 = cleanuppad within none []
  call void @"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok) #15 [ "funclet"(token %117) ]
  cleanupret from %117 unwind to caller
}

declare dso_local i32 @__CxxFrameHandler3(...)

declare dso_local void @"??$get_info@$0BACL@@device@sycl@cl@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16), %"class.std::basic_string"* sret(%"class.std::basic_string") align 8) #1

declare dllimport noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr) #4 comdat {
entry:
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %vbptr = getelementptr inbounds i8, i8* %2, i64 0
  %3 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %3, align 8
  %4 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %4, align 4
  %5 = sext i32 %vbase_offs to i64
  %6 = add nsw i64 0, %5
  %7 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %6
  %8 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call = call noundef i8 @"?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %8, i8 noundef 10)
  %call1 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %0, i8 noundef %call)
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %call2 = call noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %9)
  %10 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  ret %"class.std::basic_ostream"* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  call void @"?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  call void @"??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %_Mypair) #15
  ret void
}

; Function Attrs: nounwind
declare dllimport void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16)) unnamed_addr #3

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::_Vector_iterator"* @"??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ"(%"class.std::_Vector_iterator"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Vector_iterator"*, align 8
  store %"class.std::_Vector_iterator"* %this, %"class.std::_Vector_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_iterator"*, %"class.std::_Vector_iterator"** %this.addr, align 8
  %0 = bitcast %"class.std::_Vector_iterator"* %this1 to %"class.std::_Vector_const_iterator"*
  %call = call noundef nonnull align 8 dereferenceable(8) %"class.std::_Vector_const_iterator"* @"??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  ret %"class.std::_Vector_iterator"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  call void @"?_Tidy@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAXXZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z"(%"struct.cl::sycl::detail::code_location"* noalias sret(%"struct.cl::sycl::detail::code_location") align 8 %agg.result, i8* noundef %fileName, i8* noundef %funcName, i32 noundef %lineNo, i32 noundef %columnNo) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %columnNo.addr = alloca i32, align 4
  %lineNo.addr = alloca i32, align 4
  %funcName.addr = alloca i8*, align 8
  %fileName.addr = alloca i8*, align 8
  %0 = bitcast %"struct.cl::sycl::detail::code_location"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i32 %columnNo, i32* %columnNo.addr, align 4
  store i32 %lineNo, i32* %lineNo.addr, align 4
  store i8* %funcName, i8** %funcName.addr, align 8
  store i8* %fileName, i8** %fileName.addr, align 8
  %1 = load i32, i32* %columnNo.addr, align 4
  %2 = load i32, i32* %lineNo.addr, align 4
  %3 = load i8*, i8** %funcName.addr, align 8
  %4 = load i8*, i8** %fileName.addr, align 8
  %call = call noundef %"struct.cl::sycl::detail::code_location"* @"??0code_location@detail@sycl@cl@@QEAA@PEBD0HH@Z"(%"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %agg.result, i8* noundef %4, i8* noundef %3, i32 noundef %2, i32 noundef %1) #15
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::property_list"* @"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull returned align 8 dereferenceable(32) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.cl::sycl::property_list"*, align 8
  %agg.tmp = alloca %"class.std::bitset", align 4
  store %"class.cl::sycl::property_list"* %this, %"class.cl::sycl::property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  %call = call noundef %"class.std::bitset"* @"??0?$bitset@$0CA@@std@@QEAA@_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %agg.tmp, i64 noundef 0) #15
  %coerce.dive = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %agg.tmp, i32 0, i32 0
  %1 = bitcast [1 x i32]* %coerce.dive to i32*
  %2 = load i32, i32* %1, align 4
  %call2 = call noundef %"class.cl::sycl::detail::PropertyListBase"* @"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@@Z"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0, i32 %2)
  %3 = bitcast %"class.cl::sycl::property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  invoke void @"?ctorHelper@PropertyListBase@detail@sycl@cl@@IEAAXXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %3)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.cl::sycl::property_list"* %this1

ehcleanup:                                        ; preds = %entry
  %4 = cleanuppad within none []
  %5 = bitcast %"class.cl::sycl::property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  call void @"??1PropertyListBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %5) #15 [ "funclet"(token %4) ]
  cleanupret from %4 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::range"* @"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::range"* noundef nonnull returned align 8 dereferenceable(8) %this, i64 noundef %dim0) unnamed_addr #5 comdat align 2 {
entry:
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::range"*, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::range"* %this, %"class.cl::sycl::range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::range"* %this1 to %"class.cl::sycl::detail::array"*
  %1 = load i64, i64* %dim0.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::array"* @"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %0, i64 noundef %1)
  ret %"class.cl::sycl::range"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::buffer"* @"??0?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@AEBV?$range@$00@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull returned align 8 dereferenceable(40) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %bufferRange, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %propList, %"struct.cl::sycl::detail::code_location"* noundef %CodeLoc) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %propList.addr = alloca %"class.cl::sycl::property_list"*, align 8
  %bufferRange.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.3", align 8
  %ref.tmp2 = alloca %"class.std::unique_ptr.28", align 8
  %ref.tmp3 = alloca i64, align 8
  %ref.tmp6 = alloca i64, align 8
  %ref.tmp13 = alloca %"class.std::array", align 8
  store %"class.cl::sycl::property_list"* %propList, %"class.cl::sycl::property_list"** %propList.addr, align 8
  store %"class.cl::sycl::range"* %bufferRange, %"class.cl::sycl::range"** %bufferRange.addr, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 0
  %call = call noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  %Range = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 1
  %0 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %bufferRange.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %Range to i8*
  %2 = bitcast %"class.cl::sycl::range"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %OffsetInBytes = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 2
  store i64 0, i64* %OffsetInBytes, align 8
  %IsSubBuffer = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 3
  store i8 0, i8* %IsSubBuffer, align 8
  invoke void @"??$make_unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$V@sycl@cl@@YA?AV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@XZ"(%"class.std::unique_ptr.28"* sret(%"class.std::unique_ptr.28") align 8 %ref.tmp2)
          to label %invoke.cont unwind label %ehcleanup21

invoke.cont:                                      ; preds = %entry
  %3 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %propList.addr, align 8
  %call5 = invoke noundef i64 @"?getNextPowerOfTwo@detail@sycl@cl@@YA_K_K@Z"(i64 noundef 4)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont
  store i64 %call5, i64* %ref.tmp3, align 8
  %call7 = call noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this1) #15
  %mul = mul i64 %call7, 4
  store i64 %mul, i64* %ref.tmp6, align 8
  invoke void @"??$make_shared@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@0@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.3"* sret(%"class.std::shared_ptr.3") align 8 %ref.tmp, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp6, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp3, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %3, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2)
          to label %invoke.cont8 unwind label %ehcleanup

invoke.cont8:                                     ; preds = %invoke.cont4
  %impl9 = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 0
  %call10 = call noundef nonnull align 8 dereferenceable(16) %"class.std::shared_ptr.3"* @"??4?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl9, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  call void @"??1?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2) #15
  %impl11 = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 0
  %call12 = call noundef %"class.cl::sycl::detail::buffer_impl"* @"??$?CVbuffer_impl@detail@sycl@cl@@$0A@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl11) #15
  %Range14 = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 1
  invoke void @"?rangeToArray@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$array@_K$02@std@@AEAV?$range@$00@23@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this1, %"class.std::array"* sret(%"class.std::array") align 8 %ref.tmp13, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Range14)
          to label %invoke.cont15 unwind label %ehcleanup21

invoke.cont15:                                    ; preds = %invoke.cont8
  %call16 = call noundef i64* @"?data@?$array@_K$02@std@@QEAAPEA_KXZ"(%"class.std::array"* noundef nonnull align 8 dereferenceable(24) %ref.tmp13) #15
  %call17 = call noundef i8* @"?name@type_info@@QEBAPEBDXZ"(%class.type_info* noundef nonnull align 8 dereferenceable(24) bitcast (%rtti.TypeDescriptor2* @"??_R0H@8" to %class.type_info*)) #15
  %impl18 = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 0
  %4 = bitcast %"class.std::shared_ptr.3"* %impl18 to %"class.std::_Ptr_base.4"*
  %call19 = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %4) #15
  %5 = bitcast %"class.cl::sycl::detail::buffer_impl"* %call19 to i8*
  invoke void @"?constructorNotification@buffer_impl@detail@sycl@cl@@QEAAXAEBUcode_location@234@PEAXPEBX2IIQEA_K@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %call12, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %CodeLoc, i8* noundef %5, i8* noundef null, i8* noundef %call17, i32 noundef 1, i32 noundef 4, i64* noundef %call16)
          to label %invoke.cont20 unwind label %ehcleanup21

invoke.cont20:                                    ; preds = %invoke.cont15
  ret %"class.cl::sycl::buffer"* %this1

ehcleanup:                                        ; preds = %invoke.cont4, %invoke.cont
  %6 = cleanuppad within none []
  call void @"??1?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind label %ehcleanup21

ehcleanup21:                                      ; preds = %invoke.cont15, %invoke.cont8, %ehcleanup, %entry
  %7 = cleanuppad within none []
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl) #15 [ "funclet"(token %7) ]
  cleanupret from %7 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::property_list"*, align 8
  store %"class.cl::sycl::property_list"* %this, %"class.cl::sycl::property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  call void @"??1PropertyListBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0) #15
  ret void
}

declare dllimport noundef %"class.cl::sycl::queue"* @"??0queue@sycl@cl@@QEAA@AEBVproperty_list@12@@Z"(%"class.cl::sycl::queue"* noundef nonnull returned align 8 dereferenceable(16), %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32)) unnamed_addr #1

declare dllimport void @"?get_device@queue@sycl@cl@@QEBA?AVdevice@23@XZ"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16), %"class.cl::sycl::device"* sret(%"class.cl::sycl::device") align 8) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %Range = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 1
  %call = invoke noundef i64 @"?size@?$range@$00@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Range)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  ret i64 %call

terminate:                                        ; preds = %entry
  %0 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %0) ]
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$submit@V<lambda_1>@?0??main@@9@@queue@sycl@cl@@QEAA?AVevent@12@V<lambda_1>@?0??main@@9@AEBUcode_location@detail@12@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %this, %"class.cl::sycl::event"* noalias sret(%"class.cl::sycl::event") align 8 %agg.result, %class.anon* noundef %CGF, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %CodeLoc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %CodeLoc.addr = alloca %"struct.cl::sycl::detail::code_location"*, align 8
  %this.addr = alloca %"class.cl::sycl::queue"*, align 8
  %Event = alloca %"class.cl::sycl::event", align 8
  %agg.tmp = alloca %"class.std::function.34", align 8
  %0 = bitcast %"class.cl::sycl::event"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.cl::sycl::detail::code_location"* %CodeLoc, %"struct.cl::sycl::detail::code_location"** %CodeLoc.addr, align 8
  store %"class.cl::sycl::queue"* %this, %"class.cl::sycl::queue"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::queue"*, %"class.cl::sycl::queue"** %this.addr, align 8
  %1 = load %"struct.cl::sycl::detail::code_location"*, %"struct.cl::sycl::detail::code_location"** %CodeLoc.addr, align 8
  %call = call noundef %"class.std::function.34"* @"??$?0AEAV<lambda_1>@?0??main@@9@$0A@@?$function@$$A6AXAEAVhandler@sycl@cl@@@Z@std@@QEAA@AEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::function.34"* noundef nonnull align 8 dereferenceable(64) %agg.tmp, %class.anon* noundef nonnull align 8 dereferenceable(16) %CGF)
  call void @"?submit_impl@queue@sycl@cl@@AEAA?AVevent@23@V?$function@$$A6AXAEAVhandler@sycl@cl@@@Z@std@@AEBUcode_location@detail@23@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %this1, %"class.cl::sycl::event"* sret(%"class.cl::sycl::event") align 8 %Event, %"class.std::function.34"* noundef %agg.tmp, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %1)
  invoke void @"?discard_or_return@queue@sycl@cl@@AEAA?AVevent@23@AEBV423@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16) %this1, %"class.cl::sycl::event"* sret(%"class.cl::sycl::event") align 8 %agg.result, %"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16) %Event)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1event@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16) %Event) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1event@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16) %Event) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: nounwind
declare dllimport void @"??1event@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16)) unnamed_addr #3

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$get_access@$0EAA@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::accessor"* noalias sret(%"class.cl::sycl::accessor") align 8 %agg.result, %"struct.cl::sycl::detail::code_location"* noundef %CodeLoc) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %agg.tmp = alloca %"struct.cl::sycl::detail::code_location", align 8
  %ref.tmp = alloca %"class.cl::sycl::property_list", align 8
  %0 = bitcast %"class.cl::sycl::accessor"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %1 = bitcast %"struct.cl::sycl::detail::code_location"* %agg.tmp to i8*
  %2 = bitcast %"struct.cl::sycl::detail::code_location"* %CodeLoc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %call = call noundef %"class.cl::sycl::property_list"* @"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp)
  %call2 = invoke noundef %"class.cl::sycl::accessor"* @"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %agg.result, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this1, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, %"struct.cl::sycl::detail::code_location"* noundef %agg.tmp)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %3) ]
  cleanupret from %3 unwind to caller
}

declare dllimport noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i64 noundef) #1

declare dllimport noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i32 noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(4) i32* @"??$?A$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEBHV?$id@$00@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this, i64 %Index.coerce) #4 comdat align 2 {
entry:
  %Index = alloca %"class.cl::sycl::id.27", align 8
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  %LinearIndex = alloca i64, align 8
  %agg.tmp = alloca %"class.cl::sycl::id.27", align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %Index, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %Index.coerce, i64* %0, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::id.27"* %agg.tmp to i8*
  %2 = bitcast %"class.cl::sycl::id.27"* %Index to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %coerce.dive3 = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp, i32 0, i32 0
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive3, i32 0, i32 0
  %3 = bitcast [1 x i64]* %coerce.dive4 to i64*
  %4 = load i64, i64* %3, align 8
  %call = call noundef i64 @"??$getLinearIndex@$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this2, i64 %4)
  store i64 %call, i64* %LinearIndex, align 8
  %call5 = call noundef i32* @"?getQualifiedPtr@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this2)
  %5 = load i64, i64* %LinearIndex, align 8
  %arrayidx = getelementptr inbounds i32, i32* %call5, i64 %5
  ret i32* %arrayidx
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::id.27"* @"??$?0$00@?$id@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::id.27"* noundef nonnull returned align 8 dereferenceable(8) %this, i64 noundef %dim0) unnamed_addr #6 comdat align 2 {
entry:
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::id.27"*, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::id.27"* %this, %"class.cl::sycl::id.27"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %this1 to %"class.cl::sycl::detail::array"*
  %1 = load i64, i64* %dim0.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::array"* @"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %0, i64 noundef %1)
  ret %"class.cl::sycl::id.27"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  call void @"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: nounwind
declare dllimport void @"??1queue@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16)) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 0
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"struct.cl::sycl::detail::code_location"* @"??0code_location@detail@sycl@cl@@QEAA@PEBD0HH@Z"(%"struct.cl::sycl::detail::code_location"* noundef nonnull returned align 8 dereferenceable(24) %this, i8* noundef %file, i8* noundef %func, i32 noundef %line, i32 noundef %col) unnamed_addr #5 comdat align 2 {
entry:
  %col.addr = alloca i32, align 4
  %line.addr = alloca i32, align 4
  %func.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %this.addr = alloca %"struct.cl::sycl::detail::code_location"*, align 8
  store i32 %col, i32* %col.addr, align 4
  store i32 %line, i32* %line.addr, align 4
  store i8* %func, i8** %func.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  store %"struct.cl::sycl::detail::code_location"* %this, %"struct.cl::sycl::detail::code_location"** %this.addr, align 8
  %this1 = load %"struct.cl::sycl::detail::code_location"*, %"struct.cl::sycl::detail::code_location"** %this.addr, align 8
  %MFileName = getelementptr inbounds %"struct.cl::sycl::detail::code_location", %"struct.cl::sycl::detail::code_location"* %this1, i32 0, i32 0
  %0 = load i8*, i8** %file.addr, align 8
  store i8* %0, i8** %MFileName, align 8
  %MFunctionName = getelementptr inbounds %"struct.cl::sycl::detail::code_location", %"struct.cl::sycl::detail::code_location"* %this1, i32 0, i32 1
  %1 = load i8*, i8** %func.addr, align 8
  store i8* %1, i8** %MFunctionName, align 8
  %MLineNo = getelementptr inbounds %"struct.cl::sycl::detail::code_location", %"struct.cl::sycl::detail::code_location"* %this1, i32 0, i32 2
  %2 = load i32, i32* %line.addr, align 4
  store i32 %2, i32* %MLineNo, align 8
  %MColumnNo = getelementptr inbounds %"struct.cl::sycl::detail::code_location", %"struct.cl::sycl::detail::code_location"* %this1, i32 0, i32 3
  %3 = load i32, i32* %col.addr, align 4
  store i32 %3, i32* %MColumnNo, align 4
  ret %"struct.cl::sycl::detail::code_location"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1PropertyListBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %MPropsWithData = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 1
  call void @"??1?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %MPropsWithData) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  call void @"?_Tidy@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAXXZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Tidy@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAXXZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %_Al = alloca %"class.std::allocator.10"*, align 8
  %_My_data = alloca %"class.std::_Vector_val.12"*, align 8
  %_Myfirst = alloca %"class.std::shared_ptr.13"**, align 8
  %_Mylast = alloca %"class.std::shared_ptr.13"**, align 8
  %_Myend = alloca %"class.std::shared_ptr.13"**, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  store %"class.std::allocator.10"* %call, %"class.std::allocator.10"** %_Al, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val.12"* %_Myval2, %"class.std::_Vector_val.12"** %_My_data, align 8
  %0 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Myfirst2 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %0, i32 0, i32 0
  store %"class.std::shared_ptr.13"** %_Myfirst2, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %1 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Mylast3 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %1, i32 0, i32 1
  store %"class.std::shared_ptr.13"** %_Mylast3, %"class.std::shared_ptr.13"*** %_Mylast, align 8
  %2 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Myend4 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %2, i32 0, i32 2
  store %"class.std::shared_ptr.13"** %_Myend4, %"class.std::shared_ptr.13"*** %_Myend, align 8
  %3 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %4 = bitcast %"class.std::_Vector_val.12"* %3 to %"struct.std::_Container_base0"*
  call void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %4) #15
  %5 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %6 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %5, align 8
  %tobool = icmp ne %"class.std::shared_ptr.13"* %6, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al, align 8
  %8 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Mylast, align 8
  %9 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %8, align 8
  %10 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %11 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %10, align 8
  call void @"??$_Destroy_range@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@YAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@QEAV10@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %11, %"class.std::shared_ptr.13"* noundef %9, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %7) #15
  %12 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al, align 8
  %13 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myend, align 8
  %14 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %13, align 8
  %15 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %16 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %15, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::shared_ptr.13"* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::shared_ptr.13"* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %17 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %18 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %17, align 8
  invoke void @"?deallocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAXQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %12, %"class.std::shared_ptr.13"* noundef %18, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  %19 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %19, align 8
  %20 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Mylast, align 8
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %20, align 8
  %21 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myend, align 8
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %21, align 8
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate:                                        ; preds = %if.then
  %22 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %22) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %_Mypair) #15
  ret %"class.std::allocator.10"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Container_base0"*, align 8
  store %"struct.std::_Container_base0"* %this, %"struct.std::_Container_base0"** %this.addr, align 8
  %this1 = load %"struct.std::_Container_base0"*, %"struct.std::_Container_base0"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Destroy_range@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@YAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@QEAV10@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %_First, %"class.std::shared_ptr.13"* noundef %_Last, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Al) #2 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Al.addr = alloca %"class.std::allocator.10"*, align 8
  %_Last.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_First.addr = alloca %"class.std::shared_ptr.13"*, align 8
  store %"class.std::allocator.10"* %_Al, %"class.std::allocator.10"** %_Al.addr, align 8
  store %"class.std::shared_ptr.13"* %_Last, %"class.std::shared_ptr.13"** %_Last.addr, align 8
  store %"class.std::shared_ptr.13"* %_First, %"class.std::shared_ptr.13"** %_First.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_First.addr, align 8
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last.addr, align 8
  %cmp = icmp ne %"class.std::shared_ptr.13"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_First.addr, align 8
  %call = call noundef %"class.std::shared_ptr.13"* @"??$_Unfancy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@@Z"(%"class.std::shared_ptr.13"* noundef %2) #15
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al.addr, align 8
  invoke void @"??$destroy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %3, %"class.std::shared_ptr.13"* noundef %call)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_First.addr, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::shared_ptr.13", %"class.std::shared_ptr.13"* %4, i32 1
  store %"class.std::shared_ptr.13"* %incdec.ptr, %"class.std::shared_ptr.13"** %_First.addr, align 8
  br label %for.cond, !llvm.loop !15

for.end:                                          ; preds = %for.cond
  ret void

terminate:                                        ; preds = %for.body
  %5 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %5) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?deallocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAXQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %this, %"class.std::shared_ptr.13"* noundef %_Ptr, i64 noundef %_Count) #2 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_Ptr.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::allocator.10"*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store %"class.std::shared_ptr.13"* %_Ptr, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  store %"class.std::allocator.10"* %this, %"class.std::allocator.10"** %this.addr, align 8
  %this1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 16, %0
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  %2 = bitcast %"class.std::shared_ptr.13"* %1 to i8*
  call void @"??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z"(i8* noundef %2, i64 noundef %mul) #15
  ret void
}

declare dso_local void @__std_terminate()

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.9"*, align 8
  store %"class.std::_Compressed_pair.9"* %this, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.9"*, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.9"* %this1 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$destroy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %0, %"class.std::shared_ptr.13"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %.addr = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::shared_ptr.13"* %_Ptr, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %.addr, align 8
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  call void @"??1?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"??$_Unfancy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@@Z"(%"class.std::shared_ptr.13"* noundef %_Ptr) #2 comdat {
entry:
  %_Ptr.addr = alloca %"class.std::shared_ptr.13"*, align 8
  store %"class.std::shared_ptr.13"* %_Ptr, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  ret %"class.std::shared_ptr.13"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.13"*, align 8
  store %"class.std::shared_ptr.13"* %this, %"class.std::shared_ptr.13"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.13"* %this1 to %"class.std::_Ptr_base.14"*
  call void @"?_Decref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Decref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.14"*, align 8
  store %"class.std::_Ptr_base.14"* %this, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.14"*, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Decref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Decref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  %_Uses = getelementptr inbounds %"class.std::_Ref_count_base", %"class.std::_Ref_count_base"* %this1, i32 0, i32 1
  %0 = atomicrmw sub i32* %_Uses, i32 1 seq_cst, align 4
  %1 = sub i32 %0, 1
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast %"class.std::_Ref_count_base"* %this1 to void (%"class.std::_Ref_count_base"*)***
  %vtable = load void (%"class.std::_Ref_count_base"*)**, void (%"class.std::_Ref_count_base"*)*** %2, align 8
  %vfn = getelementptr inbounds void (%"class.std::_Ref_count_base"*)*, void (%"class.std::_Ref_count_base"*)** %vtable, i64 0
  %3 = load void (%"class.std::_Ref_count_base"*)*, void (%"class.std::_Ref_count_base"*)** %vfn, align 8
  call void %3(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this1) #15
  call void @"?_Decwref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Decwref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  %_Weaks = getelementptr inbounds %"class.std::_Ref_count_base", %"class.std::_Ref_count_base"* %this1, i32 0, i32 2
  %0 = atomicrmw sub i32* %_Weaks, i32 1 seq_cst, align 4
  %1 = sub i32 %0, 1
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = bitcast %"class.std::_Ref_count_base"* %this1 to void (%"class.std::_Ref_count_base"*)***
  %vtable = load void (%"class.std::_Ref_count_base"*)**, void (%"class.std::_Ref_count_base"*)*** %2, align 8
  %vfn = getelementptr inbounds void (%"class.std::_Ref_count_base"*)*, void (%"class.std::_Ref_count_base"*)** %vtable, i64 1
  %3 = load void (%"class.std::_Ref_count_base"*)*, void (%"class.std::_Ref_count_base"*)** %vfn, align 8
  call void %3(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z"(i8* noundef %_Ptr, i64 noundef %_Bytes) #2 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Bytes.addr = alloca i64, align 8
  %_Ptr.addr = alloca i8*, align 8
  store i64 %_Bytes, i64* %_Bytes.addr, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  %0 = load i64, i64* %_Bytes.addr, align 8
  %cmp = icmp uge i64 %0, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  invoke void @"?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr.addr, i64* noundef nonnull align 8 dereferenceable(8) %_Bytes.addr)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %1 = load i64, i64* %_Bytes.addr, align 8
  %2 = load i8*, i8** %_Ptr.addr, align 8
  call void @"??3@YAXPEAX_K@Z"(i8* noundef %2, i64 noundef %1) #15
  ret void

terminate:                                        ; preds = %if.then
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr, i64* noundef nonnull align 8 dereferenceable(8) %_Bytes) #4 comdat {
entry:
  %_Bytes.addr = alloca i64*, align 8
  %_Ptr.addr = alloca i8**, align 8
  %_Ptr_user = alloca i64*, align 8
  %_Ptr_container = alloca i64, align 8
  %_Min_back_shift = alloca i64, align 8
  %_Back_shift = alloca i64, align 8
  store i64* %_Bytes, i64** %_Bytes.addr, align 8
  store i8** %_Ptr, i8*** %_Ptr.addr, align 8
  %0 = load i64*, i64** %_Bytes.addr, align 8
  %1 = load i64, i64* %0, align 8
  %add = add i64 %1, 39
  store i64 %add, i64* %0, align 8
  %2 = load i8**, i8*** %_Ptr.addr, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to i64*
  store i64* %4, i64** %_Ptr_user, align 8
  %5 = load i64*, i64** %_Ptr_user, align 8
  %arrayidx = getelementptr inbounds i64, i64* %5, i64 -1
  %6 = load i64, i64* %arrayidx, align 8
  store i64 %6, i64* %_Ptr_container, align 8
  store i64 8, i64* %_Min_back_shift, align 8
  %7 = load i8**, i8*** %_Ptr.addr, align 8
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = load i64, i64* %_Ptr_container, align 8
  %sub = sub i64 %9, %10
  store i64 %sub, i64* %_Back_shift, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %11 = load i64, i64* %_Back_shift, align 8
  %cmp = icmp uge i64 %11, 8
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %do.body
  %12 = load i64, i64* %_Back_shift, align 8
  %cmp1 = icmp ule i64 %12, 39
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %do.body
  br label %do.body2

do.body2:                                         ; preds = %if.else
  call void @_invalid_parameter_noinfo_noreturn() #17
  unreachable

do.end:                                           ; No predecessors!
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then
  br label %do.end3

do.end3:                                          ; preds = %if.end
  %13 = load i64, i64* %_Ptr_container, align 8
  %14 = inttoptr i64 %13 to i8*
  %15 = load i8**, i8*** %_Ptr.addr, align 8
  store i8* %14, i8** %15, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @"??3@YAXPEAX_K@Z"(i8* noundef, i64 noundef) #3

; Function Attrs: noreturn
declare dllimport void @_invalid_parameter_noinfo_noreturn() #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  call void @"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  call void @"?_Decref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Decref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Decref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  call void @"?_Decref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Decref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Decref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %_My_data = alloca %"class.std::_String_val"*, align 8
  %_Ptr = alloca i8*, align 8
  %_Al = alloca %"class.std::allocator.1"*, align 8
  %ref.tmp = alloca i8, align 1
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  store %"class.std::_String_val"* %_Myval2, %"class.std::_String_val"** %_My_data, align 8
  %0 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %1 = bitcast %"class.std::_String_val"* %0 to %"struct.std::_Container_base0"*
  call void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %1) #15
  %2 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %call = call noundef zeroext i1 @"?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %2) #15
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %3, i32 0, i32 0
  %_Ptr2 = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx to i8**
  %4 = load i8*, i8** %_Ptr2, align 8
  store i8* %4, i8** %_Ptr, align 8
  %call3 = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  store %"class.std::allocator.1"* %call3, %"class.std::allocator.1"** %_Al, align 8
  %5 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Bx4 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %5, i32 0, i32 0
  %_Ptr5 = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx4 to i8**
  call void @"??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr5) #15
  %6 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  call void @"?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %6) #15
  %7 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %_Al, align 8
  %8 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %8, i32 0, i32 2
  %9 = load i64, i64* %_Myres, align 8
  %add = add i64 %9, 1
  %10 = load i8*, i8** %_Ptr, align 8
  invoke void @"?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %7, i8* noundef %10, i64 noundef %add)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %11 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %11, i32 0, i32 1
  store i64 0, i64* %_Mysize, align 8
  %12 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Myres6 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %12, i32 0, i32 2
  store i64 15, i64* %_Myres6, align 8
  store i8 0, i8* %ref.tmp, align 1
  %13 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Bx7 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %13, i32 0, i32 0
  %_Buf = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx7 to [16 x i8]*
  %arrayidx = getelementptr inbounds [16 x i8], [16 x i8]* %_Buf, i64 0, i64 0
  call void @"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z"(i8* noundef nonnull align 1 dereferenceable(1) %arrayidx, i8* noundef nonnull align 1 dereferenceable(1) %ref.tmp) #15
  ret void

terminate:                                        ; preds = %if.then
  %14 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %14) ]
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.0"*, align 8
  store %"class.std::_Compressed_pair.0"* %this, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.0"*, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %this1, i32 0, i32 0
  call void @"??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %_Myval2) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 2
  %0 = load i64, i64* %_Myres, align 8
  %cmp = icmp ule i64 16, %0
  ret i1 %cmp
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %_Mypair) #15
  ret %"class.std::allocator.1"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Obj) #2 comdat {
entry:
  %_Obj.addr = alloca i8**, align 8
  store i8** %_Obj, i8*** %_Obj.addr, align 8
  %0 = load i8**, i8*** %_Obj.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Activate_SSO_buffer@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAXXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %this, i8* noundef %_Ptr, i64 noundef %_Count) #2 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::allocator.1"*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store %"class.std::allocator.1"* %this, %"class.std::allocator.1"** %this.addr, align 8
  %this1 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 1, %0
  %1 = load i8*, i8** %_Ptr.addr, align 8
  call void @"??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z"(i8* noundef %1, i64 noundef %mul) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z"(i8* noundef nonnull align 1 dereferenceable(1) %_Left, i8* noundef nonnull align 1 dereferenceable(1) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca i8*, align 8
  %_Left.addr = alloca i8*, align 8
  store i8* %_Right, i8** %_Right.addr, align 8
  store i8* %_Left, i8** %_Left.addr, align 8
  %0 = load i8*, i8** %_Right.addr, align 8
  %1 = load i8, i8* %0, align 1
  %2 = load i8*, i8** %_Left.addr, align 8
  store i8 %1, i8* %2, align 1
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.0"*, align 8
  store %"class.std::_Compressed_pair.0"* %this, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.0"*, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.0"* %this1 to %"class.std::allocator.1"*
  ret %"class.std::allocator.1"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  call void @"??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* noundef nonnull align 8 dereferenceable(16) %_Bx) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"*, align 8
  store %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %this, %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"** %this.addr, align 8
  %this1 = load %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"*, %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z"(i8* noundef %_First) #2 comdat align 2 {
entry:
  %_First.addr = alloca i8*, align 8
  store i8* %_First, i8** %_First.addr, align 8
  %0 = load i8*, i8** %_First.addr, align 8
  %call = call i64 @strlen(i8* noundef %0) #15
  ret i64 %call
}

declare dllimport noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72)) #1

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::basic_ostream<char>::sentry"* @"??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %retval = alloca %"class.std::basic_ostream<char>::sentry"*, align 8
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  %this.addr = alloca %"class.std::basic_ostream<char>::sentry"*, align 8
  %_Tied = alloca %"class.std::basic_ostream"*, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  store %"class.std::basic_ostream<char>::sentry"* %this, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  %this1 = load %"class.std::basic_ostream<char>::sentry"*, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  store %"class.std::basic_ostream<char>::sentry"* %this1, %"class.std::basic_ostream<char>::sentry"** %retval, align 8
  %0 = bitcast %"class.std::basic_ostream<char>::sentry"* %this1 to %"class.std::basic_ostream<char>::_Sentry_base"*
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %call = call noundef %"class.std::basic_ostream<char>::_Sentry_base"* @"??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z"(%"class.std::basic_ostream<char>::_Sentry_base"* noundef nonnull align 8 dereferenceable(8) %0, %"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %1)
  %2 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %3 = bitcast %"class.std::basic_ostream"* %2 to i8*
  %vbptr = getelementptr inbounds i8, i8* %3, i64 0
  %4 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %4, align 8
  %5 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %5, align 4
  %6 = sext i32 %vbase_offs to i64
  %7 = add nsw i64 0, %6
  %8 = bitcast %"class.std::basic_ostream"* %2 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %7
  %9 = bitcast i8* %add.ptr to %"class.std::ios_base"*
  %call2 = invoke noundef zeroext i1 @"?good@ios_base@std@@QEBA_NXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %9)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %invoke.cont
  %_Ok = getelementptr inbounds %"class.std::basic_ostream<char>::sentry", %"class.std::basic_ostream<char>::sentry"* %this1, i32 0, i32 1
  store i8 0, i8* %_Ok, align 8
  br label %return

if.end:                                           ; preds = %invoke.cont
  %10 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %11 = bitcast %"class.std::basic_ostream"* %10 to i8*
  %vbptr3 = getelementptr inbounds i8, i8* %11, i64 0
  %12 = bitcast i8* %vbptr3 to i32**
  %vbtable4 = load i32*, i32** %12, align 8
  %13 = getelementptr inbounds i32, i32* %vbtable4, i32 1
  %vbase_offs5 = load i32, i32* %13, align 4
  %14 = sext i32 %vbase_offs5 to i64
  %15 = add nsw i64 0, %14
  %16 = bitcast %"class.std::basic_ostream"* %10 to i8*
  %add.ptr6 = getelementptr inbounds i8, i8* %16, i64 %15
  %17 = bitcast i8* %add.ptr6 to %"class.std::basic_ios"*
  %call8 = invoke noundef %"class.std::basic_ostream"* @"?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %17)
          to label %invoke.cont7 unwind label %ehcleanup

invoke.cont7:                                     ; preds = %if.end
  store %"class.std::basic_ostream"* %call8, %"class.std::basic_ostream"** %_Tied, align 8
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Tied, align 8
  %tobool = icmp ne %"class.std::basic_ostream"* %18, null
  br i1 %tobool, label %lor.lhs.false, label %if.then9

lor.lhs.false:                                    ; preds = %invoke.cont7
  %19 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Tied, align 8
  %20 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %cmp = icmp eq %"class.std::basic_ostream"* %19, %20
  br i1 %cmp, label %if.then9, label %if.end11

if.then9:                                         ; preds = %lor.lhs.false, %invoke.cont7
  %_Ok10 = getelementptr inbounds %"class.std::basic_ostream<char>::sentry", %"class.std::basic_ostream<char>::sentry"* %this1, i32 0, i32 1
  store i8 1, i8* %_Ok10, align 8
  br label %return

if.end11:                                         ; preds = %lor.lhs.false
  %21 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Tied, align 8
  %call13 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %21)
          to label %invoke.cont12 unwind label %ehcleanup

invoke.cont12:                                    ; preds = %if.end11
  %22 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %23 = bitcast %"class.std::basic_ostream"* %22 to i8*
  %vbptr14 = getelementptr inbounds i8, i8* %23, i64 0
  %24 = bitcast i8* %vbptr14 to i32**
  %vbtable15 = load i32*, i32** %24, align 8
  %25 = getelementptr inbounds i32, i32* %vbtable15, i32 1
  %vbase_offs16 = load i32, i32* %25, align 4
  %26 = sext i32 %vbase_offs16 to i64
  %27 = add nsw i64 0, %26
  %28 = bitcast %"class.std::basic_ostream"* %22 to i8*
  %add.ptr17 = getelementptr inbounds i8, i8* %28, i64 %27
  %29 = bitcast i8* %add.ptr17 to %"class.std::ios_base"*
  %call19 = invoke noundef zeroext i1 @"?good@ios_base@std@@QEBA_NXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %29)
          to label %invoke.cont18 unwind label %ehcleanup

invoke.cont18:                                    ; preds = %invoke.cont12
  %_Ok20 = getelementptr inbounds %"class.std::basic_ostream<char>::sentry", %"class.std::basic_ostream<char>::sentry"* %this1, i32 0, i32 1
  %frombool = zext i1 %call19 to i8
  store i8 %frombool, i8* %_Ok20, align 8
  br label %return

return:                                           ; preds = %invoke.cont18, %if.then9, %if.then
  %30 = load %"class.std::basic_ostream<char>::sentry"*, %"class.std::basic_ostream<char>::sentry"** %retval, align 8
  ret %"class.std::basic_ostream<char>::sentry"* %30

ehcleanup:                                        ; preds = %invoke.cont12, %if.end11, %if.end, %entry
  %31 = cleanuppad within none []
  %32 = bitcast %"class.std::basic_ostream<char>::sentry"* %this1 to %"class.std::basic_ostream<char>::_Sentry_base"*
  call void @"??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::_Sentry_base"* noundef nonnull align 8 dereferenceable(8) %32) #15 [ "funclet"(token %31) ]
  cleanupret from %31 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream<char>::sentry"*, align 8
  store %"class.std::basic_ostream<char>::sentry"* %this, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  %this1 = load %"class.std::basic_ostream<char>::sentry"*, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  %_Ok = getelementptr inbounds %"class.std::basic_ostream<char>::sentry", %"class.std::basic_ostream<char>::sentry"* %this1, i32 0, i32 1
  %0 = load i8, i8* %_Ok, align 8
  %tobool = trunc i8 %0 to i1
  ret i1 %tobool
}

declare dllimport noundef i32 @"?flags@ios_base@std@@QEBAHXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72)) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z"(i32* noundef nonnull align 4 dereferenceable(4) %_Left, i32* noundef nonnull align 4 dereferenceable(4) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca i32*, align 8
  %_Left.addr = alloca i32*, align 8
  store i32* %_Right, i32** %_Right.addr, align 8
  store i32* %_Left, i32** %_Left.addr, align 8
  %0 = load i32*, i32** %_Left.addr, align 8
  %1 = load i32, i32* %0, align 4
  %2 = load i32*, i32** %_Right.addr, align 8
  %3 = load i32, i32* %2, align 4
  %cmp = icmp eq i32 %1, %3
  ret i1 %cmp
}

declare dllimport noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96)) #1

declare dllimport noundef i32 @"?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104), i8 noundef) #1

declare dllimport noundef i8 @"?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96)) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i32 @"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ"() #2 comdat align 2 {
entry:
  ret i32 -1
}

declare dllimport noundef i64 @"?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104), i8* noundef, i64 noundef) #1

declare dllimport noundef i64 @"?width@ios_base@std@@QEAA_J_J@Z"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72), i64 noundef) #1

declare dllimport void @"?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96), i32 noundef, i1 noundef zeroext) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::basic_ostream<char>::sentry"*, align 8
  %_Zero_uncaught_exceptions = alloca i8, align 1
  store %"class.std::basic_ostream<char>::sentry"* %this, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  %this1 = load %"class.std::basic_ostream<char>::sentry"*, %"class.std::basic_ostream<char>::sentry"** %this.addr, align 8
  %call = call noundef zeroext i1 @"?uncaught_exception@std@@YA_NXZ"() #15
  %lnot = xor i1 %call, true
  %frombool = zext i1 %lnot to i8
  store i8 %frombool, i8* %_Zero_uncaught_exceptions, align 1
  %0 = load i8, i8* %_Zero_uncaught_exceptions, align 1
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::basic_ostream<char>::sentry"* %this1 to %"class.std::basic_ostream<char>::_Sentry_base"*
  %_Myostr = getelementptr inbounds %"class.std::basic_ostream<char>::_Sentry_base", %"class.std::basic_ostream<char>::_Sentry_base"* %1, i32 0, i32 0
  %2 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Myostr, align 8
  invoke void @"?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %2)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %3 = bitcast %"class.std::basic_ostream<char>::sentry"* %this1 to %"class.std::basic_ostream<char>::_Sentry_base"*
  call void @"??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::_Sentry_base"* noundef nonnull align 8 dereferenceable(8) %3) #15
  ret void

terminate:                                        ; preds = %if.then
  %4 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %4) ]
  unreachable
}

; Function Attrs: nounwind
declare dso_local i64 @strlen(i8* noundef) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::basic_ostream<char>::_Sentry_base"* @"??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z"(%"class.std::basic_ostream<char>::_Sentry_base"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr) unnamed_addr #6 comdat align 2 {
entry:
  %retval = alloca %"class.std::basic_ostream<char>::_Sentry_base"*, align 8
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  %this.addr = alloca %"class.std::basic_ostream<char>::_Sentry_base"*, align 8
  %_Rdbuf = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  store %"class.std::basic_ostream<char>::_Sentry_base"* %this, %"class.std::basic_ostream<char>::_Sentry_base"** %this.addr, align 8
  %this1 = load %"class.std::basic_ostream<char>::_Sentry_base"*, %"class.std::basic_ostream<char>::_Sentry_base"** %this.addr, align 8
  store %"class.std::basic_ostream<char>::_Sentry_base"* %this1, %"class.std::basic_ostream<char>::_Sentry_base"** %retval, align 8
  %_Myostr = getelementptr inbounds %"class.std::basic_ostream<char>::_Sentry_base", %"class.std::basic_ostream<char>::_Sentry_base"* %this1, i32 0, i32 0
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  store %"class.std::basic_ostream"* %0, %"class.std::basic_ostream"** %_Myostr, align 8
  %_Myostr2 = getelementptr inbounds %"class.std::basic_ostream<char>::_Sentry_base", %"class.std::basic_ostream<char>::_Sentry_base"* %this1, i32 0, i32 0
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Myostr2, align 8
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %vbptr = getelementptr inbounds i8, i8* %2, i64 0
  %3 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %3, align 8
  %4 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %4, align 4
  %5 = sext i32 %vbase_offs to i64
  %6 = add nsw i64 0, %5
  %7 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %6
  %8 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call = call noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %8)
  store %"class.std::basic_streambuf"* %call, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %9 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %tobool = icmp ne %"class.std::basic_streambuf"* %9, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %11 = bitcast %"class.std::basic_streambuf"* %10 to void (%"class.std::basic_streambuf"*)***
  %vtable = load void (%"class.std::basic_streambuf"*)**, void (%"class.std::basic_streambuf"*)*** %11, align 8
  %vfn = getelementptr inbounds void (%"class.std::basic_streambuf"*)*, void (%"class.std::basic_streambuf"*)** %vtable, i64 1
  %12 = load void (%"class.std::basic_streambuf"*)*, void (%"class.std::basic_streambuf"*)** %vfn, align 8
  call void %12(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %10)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %13 = load %"class.std::basic_ostream<char>::_Sentry_base"*, %"class.std::basic_ostream<char>::_Sentry_base"** %retval, align 8
  ret %"class.std::basic_ostream<char>::_Sentry_base"* %13
}

declare dllimport noundef zeroext i1 @"?good@ios_base@std@@QEBA_NXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72)) #1

declare dllimport noundef %"class.std::basic_ostream"* @"?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96)) #1

declare dllimport noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8)) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::_Sentry_base"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::basic_ostream<char>::_Sentry_base"*, align 8
  %_Rdbuf = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_ostream<char>::_Sentry_base"* %this, %"class.std::basic_ostream<char>::_Sentry_base"** %this.addr, align 8
  %this1 = load %"class.std::basic_ostream<char>::_Sentry_base"*, %"class.std::basic_ostream<char>::_Sentry_base"** %this.addr, align 8
  %_Myostr = getelementptr inbounds %"class.std::basic_ostream<char>::_Sentry_base", %"class.std::basic_ostream<char>::_Sentry_base"* %this1, i32 0, i32 0
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Myostr, align 8
  %1 = bitcast %"class.std::basic_ostream"* %0 to i8*
  %vbptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %2, align 8
  %3 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %3, align 4
  %4 = sext i32 %vbase_offs to i64
  %5 = add nsw i64 0, %4
  %6 = bitcast %"class.std::basic_ostream"* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5
  %7 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  %call = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %7)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  store %"class.std::basic_streambuf"* %call, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %8 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %tobool = icmp ne %"class.std::basic_streambuf"* %8, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  %9 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %_Rdbuf, align 8
  %10 = bitcast %"class.std::basic_streambuf"* %9 to void (%"class.std::basic_streambuf"*)***
  %vtable = load void (%"class.std::basic_streambuf"*)**, void (%"class.std::basic_streambuf"*)*** %10, align 8
  %vfn = getelementptr inbounds void (%"class.std::basic_streambuf"*)*, void (%"class.std::basic_streambuf"*)** %vtable, i64 2
  %11 = load void (%"class.std::basic_streambuf"*)*, void (%"class.std::basic_streambuf"*)** %vfn, align 8
  invoke void %11(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %9)
          to label %invoke.cont2 unwind label %terminate

invoke.cont2:                                     ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont2, %invoke.cont
  ret void

terminate:                                        ; preds = %if.then, %entry
  %12 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %12) ]
  unreachable
}

; Function Attrs: nounwind
declare dso_local noundef zeroext i1 @"?uncaught_exception@std@@YA_NXZ"() #3

declare dllimport void @"?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8)) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::array"* @"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::detail::array"* noundef nonnull returned align 8 dereferenceable(8) %this, i64 noundef %dim0) unnamed_addr #5 comdat align 2 {
entry:
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::array"*, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::detail::array"* %this, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %this1, i32 0, i32 0
  %arrayinit.begin = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 0
  %0 = load i64, i64* %dim0.addr, align 8
  store i64 %0, i64* %arrayinit.begin, align 8
  ret %"class.cl::sycl::detail::array"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Tidy@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAXXZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %_Al = alloca %"class.std::allocator"*, align 8
  %_My_data = alloca %"class.std::_Vector_val"*, align 8
  %_Myfirst = alloca %"class.cl::sycl::device"**, align 8
  %_Mylast = alloca %"class.cl::sycl::device"**, align 8
  %_Myend = alloca %"class.cl::sycl::device"**, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator"* @"?_Getal@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  store %"class.std::allocator"* %call, %"class.std::allocator"** %_Al, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair", %"class.std::_Compressed_pair"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val"* %_Myval2, %"class.std::_Vector_val"** %_My_data, align 8
  %0 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %_Myfirst2 = getelementptr inbounds %"class.std::_Vector_val", %"class.std::_Vector_val"* %0, i32 0, i32 0
  store %"class.cl::sycl::device"** %_Myfirst2, %"class.cl::sycl::device"*** %_Myfirst, align 8
  %1 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %_Mylast3 = getelementptr inbounds %"class.std::_Vector_val", %"class.std::_Vector_val"* %1, i32 0, i32 1
  store %"class.cl::sycl::device"** %_Mylast3, %"class.cl::sycl::device"*** %_Mylast, align 8
  %2 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %_Myend4 = getelementptr inbounds %"class.std::_Vector_val", %"class.std::_Vector_val"* %2, i32 0, i32 2
  store %"class.cl::sycl::device"** %_Myend4, %"class.cl::sycl::device"*** %_Myend, align 8
  %3 = load %"class.std::_Vector_val"*, %"class.std::_Vector_val"** %_My_data, align 8
  %4 = bitcast %"class.std::_Vector_val"* %3 to %"struct.std::_Container_base0"*
  call void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %4) #15
  %5 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myfirst, align 8
  %6 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %5, align 8
  %tobool = icmp ne %"class.cl::sycl::device"* %6, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %_Al, align 8
  %8 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Mylast, align 8
  %9 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %8, align 8
  %10 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myfirst, align 8
  %11 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %10, align 8
  call void @"??$_Destroy_range@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@YAXPEAVdevice@sycl@cl@@QEAV123@AEAV?$allocator@Vdevice@sycl@cl@@@0@@Z"(%"class.cl::sycl::device"* noundef %11, %"class.cl::sycl::device"* noundef %9, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %7) #15
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %_Al, align 8
  %13 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myend, align 8
  %14 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %13, align 8
  %15 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myfirst, align 8
  %16 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %15, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.cl::sycl::device"* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.cl::sycl::device"* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  %17 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myfirst, align 8
  %18 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %17, align 8
  invoke void @"?deallocate@?$allocator@Vdevice@sycl@cl@@@std@@QEAAXQEAVdevice@sycl@cl@@_K@Z"(%"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %12, %"class.cl::sycl::device"* noundef %18, i64 noundef %sub.ptr.div)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  %19 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myfirst, align 8
  store %"class.cl::sycl::device"* null, %"class.cl::sycl::device"** %19, align 8
  %20 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Mylast, align 8
  store %"class.cl::sycl::device"* null, %"class.cl::sycl::device"** %20, align 8
  %21 = load %"class.cl::sycl::device"**, %"class.cl::sycl::device"*** %_Myend, align 8
  store %"class.cl::sycl::device"* null, %"class.cl::sycl::device"** %21, align 8
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate:                                        ; preds = %if.then
  %22 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %22) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator"* @"?_Getal@?$vector@Vdevice@sycl@cl@@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ"(%"class.std::vector"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator"* @"?_Get_first@?$_Compressed_pair@V?$allocator@Vdevice@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair"* noundef nonnull align 8 dereferenceable(24) %_Mypair) #15
  ret %"class.std::allocator"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Destroy_range@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@YAXPEAVdevice@sycl@cl@@QEAV123@AEAV?$allocator@Vdevice@sycl@cl@@@0@@Z"(%"class.cl::sycl::device"* noundef %_First, %"class.cl::sycl::device"* noundef %_Last, %"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %_Al) #2 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Al.addr = alloca %"class.std::allocator"*, align 8
  %_Last.addr = alloca %"class.cl::sycl::device"*, align 8
  %_First.addr = alloca %"class.cl::sycl::device"*, align 8
  store %"class.std::allocator"* %_Al, %"class.std::allocator"** %_Al.addr, align 8
  store %"class.cl::sycl::device"* %_Last, %"class.cl::sycl::device"** %_Last.addr, align 8
  store %"class.cl::sycl::device"* %_First, %"class.cl::sycl::device"** %_First.addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_First.addr, align 8
  %1 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Last.addr, align 8
  %cmp = icmp ne %"class.cl::sycl::device"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_First.addr, align 8
  %call = call noundef %"class.cl::sycl::device"* @"??$_Unfancy@Vdevice@sycl@cl@@@std@@YAPEAVdevice@sycl@cl@@PEAV123@@Z"(%"class.cl::sycl::device"* noundef %2) #15
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %_Al.addr, align 8
  invoke void @"??$destroy@Vdevice@sycl@cl@@@?$_Default_allocator_traits@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@SAXAEAV?$allocator@Vdevice@sycl@cl@@@1@QEAVdevice@sycl@cl@@@Z"(%"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %3, %"class.cl::sycl::device"* noundef %call)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %4 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_First.addr, align 8
  %incdec.ptr = getelementptr inbounds %"class.cl::sycl::device", %"class.cl::sycl::device"* %4, i32 1
  store %"class.cl::sycl::device"* %incdec.ptr, %"class.cl::sycl::device"** %_First.addr, align 8
  br label %for.cond, !llvm.loop !16

for.end:                                          ; preds = %for.cond
  ret void

terminate:                                        ; preds = %for.body
  %5 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %5) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?deallocate@?$allocator@Vdevice@sycl@cl@@@std@@QEAAXQEAVdevice@sycl@cl@@_K@Z"(%"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %this, %"class.cl::sycl::device"* noundef %_Ptr, i64 noundef %_Count) #2 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_Ptr.addr = alloca %"class.cl::sycl::device"*, align 8
  %this.addr = alloca %"class.std::allocator"*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store %"class.cl::sycl::device"* %_Ptr, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 16, %0
  %1 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  %2 = bitcast %"class.cl::sycl::device"* %1 to i8*
  call void @"??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z"(i8* noundef %2, i64 noundef %mul) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator"* @"?_Get_first@?$_Compressed_pair@V?$allocator@Vdevice@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vdevice@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair"*, align 8
  store %"class.std::_Compressed_pair"* %this, %"class.std::_Compressed_pair"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair"*, %"class.std::_Compressed_pair"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair"* %this1 to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$destroy@Vdevice@sycl@cl@@@?$_Default_allocator_traits@V?$allocator@Vdevice@sycl@cl@@@std@@@std@@SAXAEAV?$allocator@Vdevice@sycl@cl@@@1@QEAVdevice@sycl@cl@@@Z"(%"class.std::allocator"* noundef nonnull align 1 dereferenceable(1) %0, %"class.cl::sycl::device"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::device"*, align 8
  %.addr = alloca %"class.std::allocator"*, align 8
  store %"class.cl::sycl::device"* %_Ptr, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %.addr, align 8
  %1 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  call void @"??1device@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::device"* noundef nonnull align 8 dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::device"* @"??$_Unfancy@Vdevice@sycl@cl@@@std@@YAPEAVdevice@sycl@cl@@PEAV123@@Z"(%"class.cl::sycl::device"* noundef %_Ptr) #2 comdat {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::device"*, align 8
  store %"class.cl::sycl::device"* %_Ptr, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  %0 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr.addr, align 8
  ret %"class.cl::sycl::device"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Vector_iterator"* @"??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z"(%"class.std::_Vector_iterator"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.cl::sycl::device"* noundef %0, %"struct.std::_Container_base0"* noundef %1) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"struct.std::_Container_base0"*, align 8
  %.addr1 = alloca %"class.cl::sycl::device"*, align 8
  %this.addr = alloca %"class.std::_Vector_iterator"*, align 8
  store %"struct.std::_Container_base0"* %1, %"struct.std::_Container_base0"** %.addr, align 8
  store %"class.cl::sycl::device"* %0, %"class.cl::sycl::device"** %.addr1, align 8
  store %"class.std::_Vector_iterator"* %this, %"class.std::_Vector_iterator"** %this.addr, align 8
  %this2 = load %"class.std::_Vector_iterator"*, %"class.std::_Vector_iterator"** %this.addr, align 8
  %2 = bitcast %"class.std::_Vector_iterator"* %this2 to %"class.std::_Vector_const_iterator"*
  %3 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %.addr1, align 8
  %4 = load %"struct.std::_Container_base0"*, %"struct.std::_Container_base0"** %.addr, align 8
  %call = call noundef %"class.std::_Vector_const_iterator"* @"??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %2, %"class.cl::sycl::device"* noundef %3, %"struct.std::_Container_base0"* noundef %4) #15
  ret %"class.std::_Vector_iterator"* %this2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Vector_const_iterator"* @"??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAA@PEAVdevice@sycl@cl@@PEBU_Container_base0@1@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.cl::sycl::device"* noundef %_Parg, %"struct.std::_Container_base0"* noundef %_Pvector) unnamed_addr #5 comdat align 2 {
entry:
  %_Pvector.addr = alloca %"struct.std::_Container_base0"*, align 8
  %_Parg.addr = alloca %"class.cl::sycl::device"*, align 8
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"struct.std::_Container_base0"* %_Pvector, %"struct.std::_Container_base0"** %_Pvector.addr, align 8
  store %"class.cl::sycl::device"* %_Parg, %"class.cl::sycl::device"** %_Parg.addr, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %0 = bitcast %"class.std::_Vector_const_iterator"* %this1 to %"struct.std::_Iterator_base0"*
  %_Ptr = getelementptr inbounds %"class.std::_Vector_const_iterator", %"class.std::_Vector_const_iterator"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Parg.addr, align 8
  store %"class.cl::sycl::device"* %1, %"class.cl::sycl::device"** %_Ptr, align 8
  %2 = bitcast %"class.std::_Vector_const_iterator"* %this1 to %"struct.std::_Iterator_base0"*
  %3 = load %"struct.std::_Container_base0"*, %"struct.std::_Container_base0"** %_Pvector.addr, align 8
  %4 = bitcast %"struct.std::_Container_base0"* %3 to i8*
  call void @"?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z"(%"struct.std::_Iterator_base0"* noundef nonnull align 1 dereferenceable(1) %2, i8* noundef %4) #15
  ret %"class.std::_Vector_const_iterator"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z"(%"struct.std::_Iterator_base0"* noundef nonnull align 1 dereferenceable(1) %this, i8* noundef %0) #2 comdat align 2 {
entry:
  %.addr = alloca i8*, align 8
  %this.addr = alloca %"struct.std::_Iterator_base0"*, align 8
  store i8* %0, i8** %.addr, align 8
  store %"struct.std::_Iterator_base0"* %this, %"struct.std::_Iterator_base0"** %this.addr, align 8
  %this1 = load %"struct.std::_Iterator_base0"*, %"struct.std::_Iterator_base0"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBA_NAEBV01@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"class.std::_Vector_const_iterator"* %_Right, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %0 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  call void @"?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAXAEBV12@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this1, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %_Ptr = getelementptr inbounds %"class.std::_Vector_const_iterator", %"class.std::_Vector_const_iterator"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr, align 8
  %2 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Vector_const_iterator", %"class.std::_Vector_const_iterator"* %2, i32 0, i32 0
  %3 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr2, align 8
  %cmp = icmp eq %"class.cl::sycl::device"* %1, %3
  ret i1 %cmp
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAXAEBV12@@Z"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this, %"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"class.std::_Vector_const_iterator"* %_Right, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %0 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %_Right.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::_Vector_const_iterator"* @"??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEAAAEAV01@XZ"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Vector_const_iterator", %"class.std::_Vector_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr, align 8
  %incdec.ptr = getelementptr inbounds %"class.cl::sycl::device", %"class.cl::sycl::device"* %0, i32 1
  store %"class.cl::sycl::device"* %incdec.ptr, %"class.cl::sycl::device"** %_Ptr, align 8
  ret %"class.std::_Vector_const_iterator"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(16) %"class.cl::sycl::device"* @"??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@Vdevice@sycl@cl@@@std@@@std@@@std@@QEBAAEBVdevice@sycl@cl@@XZ"(%"class.std::_Vector_const_iterator"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Vector_const_iterator"*, align 8
  store %"class.std::_Vector_const_iterator"* %this, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_const_iterator"*, %"class.std::_Vector_const_iterator"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Vector_const_iterator", %"class.std::_Vector_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::device"*, %"class.cl::sycl::device"** %_Ptr, align 8
  ret %"class.cl::sycl::device"* %0
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %_Ostr, i8* noundef %_Data, i64 noundef %_Size) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Size.addr = alloca i64, align 8
  %_Data.addr = alloca i8*, align 8
  %_Ostr.addr = alloca %"class.std::basic_ostream"*, align 8
  %_State = alloca i32, align 4
  %_Pad = alloca i64, align 8
  %_Ok = alloca %"class.std::basic_ostream<char>::sentry", align 8
  %ref.tmp = alloca i32, align 4
  %ref.tmp38 = alloca i32, align 4
  %ref.tmp61 = alloca i32, align 4
  %ref.tmp76 = alloca i32, align 4
  store i64 %_Size, i64* %_Size.addr, align 8
  store i8* %_Data, i8** %_Data.addr, align 8
  store %"class.std::basic_ostream"* %_Ostr, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  store i32 0, i32* %_State, align 4
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %1 = bitcast %"class.std::basic_ostream"* %0 to i8*
  %vbptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %vbptr to i32**
  %vbtable = load i32*, i32** %2, align 8
  %3 = getelementptr inbounds i32, i32* %vbtable, i32 1
  %vbase_offs = load i32, i32* %3, align 4
  %4 = sext i32 %vbase_offs to i64
  %5 = add nsw i64 0, %4
  %6 = bitcast %"class.std::basic_ostream"* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5
  %7 = bitcast i8* %add.ptr to %"class.std::ios_base"*
  %call = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %7)
  %cmp = icmp sle i64 %call, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %8 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %9 = bitcast %"class.std::basic_ostream"* %8 to i8*
  %vbptr1 = getelementptr inbounds i8, i8* %9, i64 0
  %10 = bitcast i8* %vbptr1 to i32**
  %vbtable2 = load i32*, i32** %10, align 8
  %11 = getelementptr inbounds i32, i32* %vbtable2, i32 1
  %vbase_offs3 = load i32, i32* %11, align 4
  %12 = sext i32 %vbase_offs3 to i64
  %13 = add nsw i64 0, %12
  %14 = bitcast %"class.std::basic_ostream"* %8 to i8*
  %add.ptr4 = getelementptr inbounds i8, i8* %14, i64 %13
  %15 = bitcast i8* %add.ptr4 to %"class.std::ios_base"*
  %call5 = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %15)
  %16 = load i64, i64* %_Size.addr, align 8
  %cmp6 = icmp ule i64 %call5, %16
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i64 0, i64* %_Pad, align 8
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %18 = bitcast %"class.std::basic_ostream"* %17 to i8*
  %vbptr7 = getelementptr inbounds i8, i8* %18, i64 0
  %19 = bitcast i8* %vbptr7 to i32**
  %vbtable8 = load i32*, i32** %19, align 8
  %20 = getelementptr inbounds i32, i32* %vbtable8, i32 1
  %vbase_offs9 = load i32, i32* %20, align 4
  %21 = sext i32 %vbase_offs9 to i64
  %22 = add nsw i64 0, %21
  %23 = bitcast %"class.std::basic_ostream"* %17 to i8*
  %add.ptr10 = getelementptr inbounds i8, i8* %23, i64 %22
  %24 = bitcast i8* %add.ptr10 to %"class.std::ios_base"*
  %call11 = call noundef i64 @"?width@ios_base@std@@QEBA_JXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %24)
  %25 = load i64, i64* %_Size.addr, align 8
  %sub = sub i64 %call11, %25
  store i64 %sub, i64* %_Pad, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %26 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %call12 = call noundef %"class.std::basic_ostream<char>::sentry"* @"??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok, %"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %26)
  %call13 = call noundef zeroext i1 @"??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok)
  br i1 %call13, label %if.else15, label %if.then14

if.then14:                                        ; preds = %if.end
  %27 = load i32, i32* %_State, align 4
  %or = or i32 %27, 4
  store i32 %or, i32* %_State, align 4
  br label %if.end97

if.else15:                                        ; preds = %if.end
  %28 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %29 = bitcast %"class.std::basic_ostream"* %28 to i8*
  %vbptr16 = getelementptr inbounds i8, i8* %29, i64 0
  %30 = bitcast i8* %vbptr16 to i32**
  %vbtable17 = load i32*, i32** %30, align 8
  %31 = getelementptr inbounds i32, i32* %vbtable17, i32 1
  %vbase_offs18 = load i32, i32* %31, align 4
  %32 = sext i32 %vbase_offs18 to i64
  %33 = add nsw i64 0, %32
  %34 = bitcast %"class.std::basic_ostream"* %28 to i8*
  %add.ptr19 = getelementptr inbounds i8, i8* %34, i64 %33
  %35 = bitcast i8* %add.ptr19 to %"class.std::ios_base"*
  %call20 = invoke noundef i32 @"?flags@ios_base@std@@QEBAHXZ"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %35)
          to label %invoke.cont unwind label %catch.dispatch

invoke.cont:                                      ; preds = %if.else15
  %and = and i32 %call20, 448
  %cmp21 = icmp ne i32 %and, 64
  br i1 %cmp21, label %if.then22, label %if.end44

if.then22:                                        ; preds = %invoke.cont
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then22
  %36 = load i64, i64* %_Pad, align 8
  %cmp23 = icmp ult i64 0, %36
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %37 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %38 = bitcast %"class.std::basic_ostream"* %37 to i8*
  %vbptr24 = getelementptr inbounds i8, i8* %38, i64 0
  %39 = bitcast i8* %vbptr24 to i32**
  %vbtable25 = load i32*, i32** %39, align 8
  %40 = getelementptr inbounds i32, i32* %vbtable25, i32 1
  %vbase_offs26 = load i32, i32* %40, align 4
  %41 = sext i32 %vbase_offs26 to i64
  %42 = add nsw i64 0, %41
  %43 = bitcast %"class.std::basic_ostream"* %37 to i8*
  %add.ptr27 = getelementptr inbounds i8, i8* %43, i64 %42
  %44 = bitcast i8* %add.ptr27 to %"class.std::basic_ios"*
  %call29 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %44)
          to label %invoke.cont28 unwind label %catch.dispatch

invoke.cont28:                                    ; preds = %for.body
  %45 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %46 = bitcast %"class.std::basic_ostream"* %45 to i8*
  %vbptr30 = getelementptr inbounds i8, i8* %46, i64 0
  %47 = bitcast i8* %vbptr30 to i32**
  %vbtable31 = load i32*, i32** %47, align 8
  %48 = getelementptr inbounds i32, i32* %vbtable31, i32 1
  %vbase_offs32 = load i32, i32* %48, align 4
  %49 = sext i32 %vbase_offs32 to i64
  %50 = add nsw i64 0, %49
  %51 = bitcast %"class.std::basic_ostream"* %45 to i8*
  %add.ptr33 = getelementptr inbounds i8, i8* %51, i64 %50
  %52 = bitcast i8* %add.ptr33 to %"class.std::basic_ios"*
  %call35 = invoke noundef i8 @"?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %52)
          to label %invoke.cont34 unwind label %catch.dispatch

invoke.cont34:                                    ; preds = %invoke.cont28
  %call37 = invoke noundef i32 @"?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call29, i8 noundef %call35)
          to label %invoke.cont36 unwind label %catch.dispatch

invoke.cont36:                                    ; preds = %invoke.cont34
  store i32 %call37, i32* %ref.tmp, align 4
  %call39 = call noundef i32 @"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ"() #15
  store i32 %call39, i32* %ref.tmp38, align 4
  %call40 = call noundef zeroext i1 @"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z"(i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp38, i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp) #15
  br i1 %call40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %invoke.cont36
  %53 = load i32, i32* %_State, align 4
  %or42 = or i32 %53, 4
  store i32 %or42, i32* %_State, align 4
  br label %for.end

if.end43:                                         ; preds = %invoke.cont36
  br label %for.inc

for.inc:                                          ; preds = %if.end43
  %54 = load i64, i64* %_Pad, align 8
  %dec = add i64 %54, -1
  store i64 %dec, i64* %_Pad, align 8
  br label %for.cond, !llvm.loop !17

for.end:                                          ; preds = %if.then41, %for.cond
  br label %if.end44

if.end44:                                         ; preds = %for.end, %invoke.cont
  %55 = load i32, i32* %_State, align 4
  %cmp45 = icmp eq i32 %55, 0
  br i1 %cmp45, label %land.lhs.true, label %if.else57

land.lhs.true:                                    ; preds = %if.end44
  %56 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %57 = bitcast %"class.std::basic_ostream"* %56 to i8*
  %vbptr46 = getelementptr inbounds i8, i8* %57, i64 0
  %58 = bitcast i8* %vbptr46 to i32**
  %vbtable47 = load i32*, i32** %58, align 8
  %59 = getelementptr inbounds i32, i32* %vbtable47, i32 1
  %vbase_offs48 = load i32, i32* %59, align 4
  %60 = sext i32 %vbase_offs48 to i64
  %61 = add nsw i64 0, %60
  %62 = bitcast %"class.std::basic_ostream"* %56 to i8*
  %add.ptr49 = getelementptr inbounds i8, i8* %62, i64 %61
  %63 = bitcast i8* %add.ptr49 to %"class.std::basic_ios"*
  %call51 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %63)
          to label %invoke.cont50 unwind label %catch.dispatch

invoke.cont50:                                    ; preds = %land.lhs.true
  %64 = load i64, i64* %_Size.addr, align 8
  %65 = load i8*, i8** %_Data.addr, align 8
  %call53 = invoke noundef i64 @"?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call51, i8* noundef %65, i64 noundef %64)
          to label %invoke.cont52 unwind label %catch.dispatch

invoke.cont52:                                    ; preds = %invoke.cont50
  %66 = load i64, i64* %_Size.addr, align 8
  %cmp54 = icmp ne i64 %call53, %66
  br i1 %cmp54, label %if.then55, label %if.else57

if.then55:                                        ; preds = %invoke.cont52
  %67 = load i32, i32* %_State, align 4
  %or56 = or i32 %67, 4
  store i32 %or56, i32* %_State, align 4
  br label %if.end85

if.else57:                                        ; preds = %invoke.cont52, %if.end44
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc82, %if.else57
  %68 = load i64, i64* %_Pad, align 8
  %cmp59 = icmp ult i64 0, %68
  br i1 %cmp59, label %for.body60, label %for.end84

for.body60:                                       ; preds = %for.cond58
  %69 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %70 = bitcast %"class.std::basic_ostream"* %69 to i8*
  %vbptr62 = getelementptr inbounds i8, i8* %70, i64 0
  %71 = bitcast i8* %vbptr62 to i32**
  %vbtable63 = load i32*, i32** %71, align 8
  %72 = getelementptr inbounds i32, i32* %vbtable63, i32 1
  %vbase_offs64 = load i32, i32* %72, align 4
  %73 = sext i32 %vbase_offs64 to i64
  %74 = add nsw i64 0, %73
  %75 = bitcast %"class.std::basic_ostream"* %69 to i8*
  %add.ptr65 = getelementptr inbounds i8, i8* %75, i64 %74
  %76 = bitcast i8* %add.ptr65 to %"class.std::basic_ios"*
  %call67 = invoke noundef %"class.std::basic_streambuf"* @"?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %76)
          to label %invoke.cont66 unwind label %catch.dispatch

invoke.cont66:                                    ; preds = %for.body60
  %77 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %78 = bitcast %"class.std::basic_ostream"* %77 to i8*
  %vbptr68 = getelementptr inbounds i8, i8* %78, i64 0
  %79 = bitcast i8* %vbptr68 to i32**
  %vbtable69 = load i32*, i32** %79, align 8
  %80 = getelementptr inbounds i32, i32* %vbtable69, i32 1
  %vbase_offs70 = load i32, i32* %80, align 4
  %81 = sext i32 %vbase_offs70 to i64
  %82 = add nsw i64 0, %81
  %83 = bitcast %"class.std::basic_ostream"* %77 to i8*
  %add.ptr71 = getelementptr inbounds i8, i8* %83, i64 %82
  %84 = bitcast i8* %add.ptr71 to %"class.std::basic_ios"*
  %call73 = invoke noundef i8 @"?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %84)
          to label %invoke.cont72 unwind label %catch.dispatch

invoke.cont72:                                    ; preds = %invoke.cont66
  %call75 = invoke noundef i32 @"?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z"(%"class.std::basic_streambuf"* noundef nonnull align 8 dereferenceable(104) %call67, i8 noundef %call73)
          to label %invoke.cont74 unwind label %catch.dispatch

invoke.cont74:                                    ; preds = %invoke.cont72
  store i32 %call75, i32* %ref.tmp61, align 4
  %call77 = call noundef i32 @"?eof@?$_Narrow_char_traits@DH@std@@SAHXZ"() #15
  store i32 %call77, i32* %ref.tmp76, align 4
  %call78 = call noundef zeroext i1 @"?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z"(i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp76, i32* noundef nonnull align 4 dereferenceable(4) %ref.tmp61) #15
  br i1 %call78, label %if.then79, label %if.end81

if.then79:                                        ; preds = %invoke.cont74
  %85 = load i32, i32* %_State, align 4
  %or80 = or i32 %85, 4
  store i32 %or80, i32* %_State, align 4
  br label %for.end84

if.end81:                                         ; preds = %invoke.cont74
  br label %for.inc82

for.inc82:                                        ; preds = %if.end81
  %86 = load i64, i64* %_Pad, align 8
  %dec83 = add i64 %86, -1
  store i64 %dec83, i64* %_Pad, align 8
  br label %for.cond58, !llvm.loop !18

for.end84:                                        ; preds = %if.then79, %for.cond58
  br label %if.end85

if.end85:                                         ; preds = %for.end84, %if.then55
  %87 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %88 = bitcast %"class.std::basic_ostream"* %87 to i8*
  %vbptr86 = getelementptr inbounds i8, i8* %88, i64 0
  %89 = bitcast i8* %vbptr86 to i32**
  %vbtable87 = load i32*, i32** %89, align 8
  %90 = getelementptr inbounds i32, i32* %vbtable87, i32 1
  %vbase_offs88 = load i32, i32* %90, align 4
  %91 = sext i32 %vbase_offs88 to i64
  %92 = add nsw i64 0, %91
  %93 = bitcast %"class.std::basic_ostream"* %87 to i8*
  %add.ptr89 = getelementptr inbounds i8, i8* %93, i64 %92
  %94 = bitcast i8* %add.ptr89 to %"class.std::ios_base"*
  %call91 = invoke noundef i64 @"?width@ios_base@std@@QEAA_J_J@Z"(%"class.std::ios_base"* noundef nonnull align 8 dereferenceable(72) %94, i64 noundef 0)
          to label %invoke.cont90 unwind label %catch.dispatch

catch.dispatch:                                   ; preds = %if.end85, %invoke.cont72, %invoke.cont66, %for.body60, %invoke.cont50, %land.lhs.true, %invoke.cont34, %invoke.cont28, %for.body, %if.else15
  %95 = catchswitch within none [label %catch] unwind label %ehcleanup

catch:                                            ; preds = %catch.dispatch
  %96 = catchpad within %95 [i8* null, i32 64, i8* null]
  %97 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %98 = bitcast %"class.std::basic_ostream"* %97 to i8*
  %vbptr92 = getelementptr inbounds i8, i8* %98, i64 0
  %99 = bitcast i8* %vbptr92 to i32**
  %vbtable93 = load i32*, i32** %99, align 8
  %100 = getelementptr inbounds i32, i32* %vbtable93, i32 1
  %vbase_offs94 = load i32, i32* %100, align 4
  %101 = sext i32 %vbase_offs94 to i64
  %102 = add nsw i64 0, %101
  %103 = bitcast %"class.std::basic_ostream"* %97 to i8*
  %add.ptr95 = getelementptr inbounds i8, i8* %103, i64 %102
  %104 = bitcast i8* %add.ptr95 to %"class.std::basic_ios"*
  invoke void @"?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %104, i32 noundef 4, i1 noundef zeroext true) [ "funclet"(token %96) ]
          to label %invoke.cont96 unwind label %ehcleanup

invoke.cont96:                                    ; preds = %catch
  catchret from %96 to label %catchret.dest

catchret.dest:                                    ; preds = %invoke.cont96
  br label %try.cont

try.cont:                                         ; preds = %catchret.dest, %invoke.cont90
  br label %if.end97

invoke.cont90:                                    ; preds = %if.end85
  br label %try.cont

if.end97:                                         ; preds = %try.cont, %if.then14
  %105 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  %106 = bitcast %"class.std::basic_ostream"* %105 to i8*
  %vbptr98 = getelementptr inbounds i8, i8* %106, i64 0
  %107 = bitcast i8* %vbptr98 to i32**
  %vbtable99 = load i32*, i32** %107, align 8
  %108 = getelementptr inbounds i32, i32* %vbtable99, i32 1
  %vbase_offs100 = load i32, i32* %108, align 4
  %109 = sext i32 %vbase_offs100 to i64
  %110 = add nsw i64 0, %109
  %111 = bitcast %"class.std::basic_ostream"* %105 to i8*
  %add.ptr101 = getelementptr inbounds i8, i8* %111, i64 %110
  %112 = bitcast i8* %add.ptr101 to %"class.std::basic_ios"*
  %113 = load i32, i32* %_State, align 4
  invoke void @"?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96) %112, i32 noundef %113, i1 noundef zeroext false)
          to label %invoke.cont102 unwind label %ehcleanup

invoke.cont102:                                   ; preds = %if.end97
  %114 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %_Ostr.addr, align 8
  call void @"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok) #15
  ret %"class.std::basic_ostream"* %114

ehcleanup:                                        ; preds = %if.end97, %catch, %catch.dispatch
  %115 = cleanuppad within none []
  call void @"??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ"(%"class.std::basic_ostream<char>::sentry"* noundef nonnull align 8 dereferenceable(16) %_Ok) #15 [ "funclet"(token %115) ]
  cleanupret from %115 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval2, i32 0, i32 1
  %0 = load i64, i64* %_Mysize, align 8
  ret i64 %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  %call = call noundef i8* @"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %_Myval2) #15
  ret i8* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  %_Result = alloca i8*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  %_Buf = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_Buf, i64 0, i64 0
  store i8* %arraydecay, i8** %_Result, align 8
  %call = call noundef zeroext i1 @"?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Bx2 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  %_Ptr = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx2 to i8**
  %0 = load i8*, i8** %_Ptr, align 8
  %call3 = call noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %0) #15
  store i8* %call3, i8** %_Result, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %_Result, align 8
  ret i8* %1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %_Ptr) #2 comdat {
entry:
  %_Ptr.addr = alloca i8*, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  %0 = load i8*, i8** %_Ptr.addr, align 8
  ret i8* %0
}

declare dllimport noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8), i8 noundef) #1

declare dllimport noundef i8 @"?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z"(%"class.std::basic_ios"* noundef nonnull align 8 dereferenceable(96), i8 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bitset"* @"??0?$bitset@$0CA@@std@@QEAA@_K@Z"(%"class.std::bitset"* noundef nonnull returned align 4 dereferenceable(4) %this, i64 noundef %_Val) unnamed_addr #5 comdat align 2 {
entry:
  %_Val.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::bitset"*, align 8
  store i64 %_Val, i64* %_Val.addr, align 8
  store %"class.std::bitset"* %this, %"class.std::bitset"** %this.addr, align 8
  %this1 = load %"class.std::bitset"*, %"class.std::bitset"** %this.addr, align 8
  %_Array = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %this1, i32 0, i32 0
  %arrayinit.begin = getelementptr inbounds [1 x i32], [1 x i32]* %_Array, i64 0, i64 0
  %0 = load i64, i64* %_Val.addr, align 8
  %and = and i64 %0, 4294967295
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %arrayinit.begin, align 4
  ret %"class.std::bitset"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::PropertyListBase"* @"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@@Z"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull returned align 8 dereferenceable(32) %this, i32 %DataLessProps.coerce) unnamed_addr #5 comdat align 2 {
entry:
  %DataLessProps = alloca %"class.std::bitset", align 4
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  %coerce.dive = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %DataLessProps, i32 0, i32 0
  %0 = bitcast [1 x i32]* %coerce.dive to i32*
  store i32 %DataLessProps.coerce, i32* %0, align 4
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %MDataLessProps = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 0
  %1 = bitcast %"class.std::bitset"* %MDataLessProps to i8*
  %2 = bitcast %"class.std::bitset"* %DataLessProps to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 4 %2, i64 4, i1 false)
  %MPropsWithData = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 1
  %call = call noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %MPropsWithData) #15
  ret %"class.cl::sycl::detail::PropertyListBase"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?ctorHelper@PropertyListBase@detail@sycl@cl@@IEAAXXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ"(%"class.std::vector.8"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %agg.tmp = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %0 = load i8, i8* %coerce.dive, align 1
  %call = call noundef %"class.std::_Compressed_pair.9"* @"??$?0$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %_Mypair, i8 %0) #15
  %_Mypair2 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair2, i32 0, i32 0
  %1 = bitcast %"class.std::_Vector_val.12"* %_Myval2 to %"struct.std::_Container_base0"*
  call void @"?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %1, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) @"?_Fake_alloc@std@@3U_Fake_allocator@1@B") #15
  ret %"class.std::vector.8"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.9"* @"??$?0$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull returned align 8 dereferenceable(24) %this, i8 %.coerce) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  %this.addr = alloca %"class.std::_Compressed_pair.9"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.std::_Compressed_pair.9"* %this, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.9"*, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.9"* %this1 to %"class.std::allocator.10"*
  %call = call noundef %"class.std::allocator.10"* @"??0?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %1) #15
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %this1, i32 0, i32 0
  %call2 = call noundef %"class.std::_Vector_val.12"* @"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Vector_val.12"* noundef nonnull align 8 dereferenceable(24) %_Myval2) #15
  ret %"class.std::_Compressed_pair.9"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %this, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) %0) #2 comdat align 2 {
entry:
  %.addr = alloca %"struct.std::_Fake_allocator"*, align 8
  %this.addr = alloca %"struct.std::_Container_base0"*, align 8
  store %"struct.std::_Fake_allocator"* %0, %"struct.std::_Fake_allocator"** %.addr, align 8
  store %"struct.std::_Container_base0"* %this, %"struct.std::_Container_base0"** %this.addr, align 8
  %this1 = load %"struct.std::_Container_base0"*, %"struct.std::_Container_base0"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::allocator.10"* @"??0?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::allocator.10"* noundef nonnull returned align 1 dereferenceable(1) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %this, %"class.std::allocator.10"** %this.addr, align 8
  %this1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %this.addr, align 8
  ret %"class.std::allocator.10"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Vector_val.12"* @"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Vector_val.12"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Vector_val.12"*, align 8
  store %"class.std::_Vector_val.12"* %this, %"class.std::_Vector_val.12"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %this.addr, align 8
  %0 = bitcast %"class.std::_Vector_val.12"* %this1 to %"struct.std::_Container_base0"*
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 0
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %_Myfirst, align 8
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 1
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %_Mylast, align 8
  %_Myend = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 2
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %_Myend, align 8
  ret %"class.std::_Vector_val.12"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.std::_Ptr_base.4"* @"??0?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret %"class.std::shared_ptr.3"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$make_shared@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@0@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.3"* noalias sret(%"class.std::shared_ptr.3") align 8 %agg.result, i64* noundef nonnull align 8 dereferenceable(8) %_Args5, i64* noundef nonnull align 8 dereferenceable(8) %_Args3, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %_Args1, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %_Args) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %_Args.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %_Args.addr2 = alloca %"class.cl::sycl::property_list"*, align 8
  %_Args.addr4 = alloca i64*, align 8
  %_Args.addr6 = alloca i64*, align 8
  %_Rx = alloca %"class.std::_Ref_count_obj2"*, align 8
  %nrvo = alloca i1, align 1
  %0 = bitcast %"class.std::shared_ptr.3"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::unique_ptr.28"* %_Args, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  store %"class.cl::sycl::property_list"* %_Args1, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  store i64* %_Args3, i64** %_Args.addr4, align 8
  store i64* %_Args5, i64** %_Args.addr6, align 8
  %call = call noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 232) #18
  %1 = bitcast i8* %call to %"class.std::_Ref_count_obj2"*
  %2 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  %3 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  %4 = load i64*, i64** %_Args.addr4, align 8
  %5 = load i64*, i64** %_Args.addr6, align 8
  %call7 = invoke noundef %"class.std::_Ref_count_obj2"* @"??$?0_K_KAEBVproperty_list@sycl@cl@@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %1, i64* noundef nonnull align 8 dereferenceable(8) %5, i64* noundef nonnull align 8 dereferenceable(8) %4, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %3, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %2)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  store %"class.std::_Ref_count_obj2"* %1, %"class.std::_Ref_count_obj2"** %_Rx, align 8
  store i1 false, i1* %nrvo, align 1
  %call8 = call noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %agg.result) #15
  %6 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %_Rx, align 8
  %7 = bitcast %"class.std::_Ref_count_obj2"* %6 to %"class.std::_Ref_count_base"*
  %8 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %_Rx, align 8
  %9 = getelementptr inbounds %"class.std::_Ref_count_obj2", %"class.std::_Ref_count_obj2"* %8, i32 0, i32 1
  %_Storage = bitcast %union.anon* %9 to %"struct.std::_Wrap"*
  %_Value = getelementptr inbounds %"struct.std::_Wrap", %"struct.std::_Wrap"* %_Storage, i32 0, i32 0
  call void @"??$_Set_ptr_rep_and_enable_shared@Vbuffer_impl@detail@sycl@cl@@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEAAXQEAVbuffer_impl@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %agg.result, %"class.cl::sycl::detail::buffer_impl"* noundef %_Value, %"class.std::_Ref_count_base"* noundef %7) #15
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

ehcleanup:                                        ; preds = %entry
  %10 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call) #19 [ "funclet"(token %10) ]
  cleanupret from %10 unwind to caller

nrvo.unused:                                      ; preds = %invoke.cont
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %agg.result) #15
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$make_unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$V@sycl@cl@@YA?AV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@XZ"(%"class.std::unique_ptr.28"* noalias sret(%"class.std::unique_ptr.28") align 8 %agg.result) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %0 = bitcast %"class.std::unique_ptr.28"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %call = call noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 24) #18
  %1 = bitcast i8* %call to %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*
  %call1 = invoke noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"??0?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %1)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  %call2 = call noundef %"class.std::unique_ptr.28"* @"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %agg.result, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef %1) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call) #19 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"?getNextPowerOfTwo@detail@sycl@cl@@YA_K_K@Z"(i64 noundef %Var) #4 comdat {
entry:
  %Var.addr = alloca i64, align 8
  store i64 %Var, i64* %Var.addr, align 8
  %0 = load i64, i64* %Var.addr, align 8
  %sub = sub i64 %0, 1
  %call = call noundef i64 @"?getNextPowerOfTwoHelper@detail@sycl@cl@@YA_K_K0@Z"(i64 noundef %sub, i64 noundef 1)
  %add = add i64 %call, 1
  ret i64 %add
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(16) %"class.std::shared_ptr.3"* @"??4?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.3", align 8
  store %"class.std::shared_ptr.3"* %_Right, %"class.std::shared_ptr.3"** %_Right.addr, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Right.addr, align 8
  %call = call noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %0) #15
  call void @"?swap@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this1) #15
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  ret %"class.std::shared_ptr.3"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.28"*, align 8
  store %"class.std::unique_ptr.28"* %this, %"class.std::unique_ptr.28"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.29", %"class.std::_Compressed_pair.29"* %_Mypair, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Myval2, align 8
  %tobool = icmp ne %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Mypair2 = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.30"* @"?_Get_first@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.29"* noundef nonnull align 8 dereferenceable(8) %_Mypair2) #15
  %_Mypair3 = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %_Myval24 = getelementptr inbounds %"class.std::_Compressed_pair.29", %"class.std::_Compressed_pair.29"* %_Mypair3, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Myval24, align 8
  call void @"??R?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@QEBAXPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %call, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::buffer_impl"* @"??$?CVbuffer_impl@detail@sycl@cl@@$0A@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret %"class.cl::sycl::detail::buffer_impl"* %call
}

declare dllimport void @"?constructorNotification@buffer_impl@detail@sycl@cl@@QEAAXAEBUcode_location@234@PEAXPEBX2IIQEA_K@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216), %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24), i8* noundef, i8* noundef, i8* noundef, i32 noundef, i32 noundef, i64* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?rangeToArray@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$array@_K$02@std@@AEAV?$range@$00@23@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this, %"class.std::array"* noalias sret(%"class.std::array") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %r) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %r.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %0 = bitcast %"class.std::array"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::range"* %r, %"class.cl::sycl::range"** %r.addr, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %_Elems = getelementptr inbounds %"class.std::array", %"class.std::array"* %agg.result, i32 0, i32 0
  %arrayinit.begin = getelementptr inbounds [3 x i64], [3 x i64]* %_Elems, i64 0, i64 0
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %r.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %1 to %"class.cl::sycl::detail::array"*
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %2, i32 noundef 0)
  %3 = load i64, i64* %call, align 8
  store i64 %3, i64* %arrayinit.begin, align 8
  %arrayinit.element = getelementptr inbounds i64, i64* %arrayinit.begin, i64 1
  store i64 0, i64* %arrayinit.element, align 8
  %arrayinit.element2 = getelementptr inbounds i64, i64* %arrayinit.element, i64 1
  store i64 0, i64* %arrayinit.element2, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64* @"?data@?$array@_K$02@std@@QEAAPEA_KXZ"(%"class.std::array"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::array"*, align 8
  store %"class.std::array"* %this, %"class.std::array"** %this.addr, align 8
  %this1 = load %"class.std::array"*, %"class.std::array"** %this.addr, align 8
  %_Elems = getelementptr inbounds %"class.std::array", %"class.std::array"* %this1, i32 0, i32 0
  %arraydecay = getelementptr inbounds [3 x i64], [3 x i64]* %_Elems, i64 0, i64 0
  ret i64* %arraydecay
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?name@type_info@@QEBAPEBDXZ"(%class.type_info* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %class.type_info*, align 8
  store %class.type_info* %this, %class.type_info** %this.addr, align 8
  %this1 = load %class.type_info*, %class.type_info** %this.addr, align 8
  %_Data = getelementptr inbounds %class.type_info, %class.type_info* %this1, i32 0, i32 1
  %call = invoke i8* @__std_type_info_name(%struct.__std_type_info_data* noundef %_Data, %struct.__type_info_node* noundef @"?__type_info_root_node@@3U__type_info_node@@A")
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  ret i8* %call

terminate:                                        ; preds = %entry
  %0 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %0) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Ptr, align 8
  ret %"class.cl::sycl::detail::buffer_impl"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ptr_base.4"* @"??0?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::buffer_impl"* null, %"class.cl::sycl::detail::buffer_impl"** %_Ptr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret %"class.std::_Ptr_base.4"* %this1
}

; Function Attrs: nobuiltin allocsize(0)
declare dso_local noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef) #9

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ref_count_obj2"* @"??$?0_K_KAEBVproperty_list@sycl@cl@@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEA_K0AEBVproperty_list@sycl@cl@@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Ref_count_obj2"* noundef nonnull returned align 8 dereferenceable(232) %this, i64* noundef nonnull align 8 dereferenceable(8) %_Args5, i64* noundef nonnull align 8 dereferenceable(8) %_Args3, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %_Args1, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %_Args) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Args.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %_Args.addr2 = alloca %"class.cl::sycl::property_list"*, align 8
  %_Args.addr4 = alloca i64*, align 8
  %_Args.addr6 = alloca i64*, align 8
  %this.addr = alloca %"class.std::_Ref_count_obj2"*, align 8
  store %"class.std::unique_ptr.28"* %_Args, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  store %"class.cl::sycl::property_list"* %_Args1, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  store i64* %_Args3, i64** %_Args.addr4, align 8
  store i64* %_Args5, i64** %_Args.addr6, align 8
  store %"class.std::_Ref_count_obj2"* %this, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %this7 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count_obj2"* %this7 to %"class.std::_Ref_count_base"*
  %1 = bitcast %"class.std::_Ref_count_base"* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  %call = call noundef %"class.std::_Ref_count_base"* @"??0_Ref_count_base@std@@IEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %3 = bitcast %"class.std::_Ref_count_obj2"* %this7 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  %4 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  %5 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  %6 = load i64*, i64** %_Args.addr4, align 8
  %7 = load i64*, i64** %_Args.addr6, align 8
  %8 = getelementptr inbounds %"class.std::_Ref_count_obj2", %"class.std::_Ref_count_obj2"* %this7, i32 0, i32 1
  %_Storage = bitcast %union.anon* %8 to %"struct.std::_Wrap"*
  %_Value = getelementptr inbounds %"struct.std::_Wrap", %"struct.std::_Wrap"* %_Storage, i32 0, i32 0
  invoke void @"??$_Construct_in_place@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@$$QEA_K1AEBVproperty_list@34@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %_Value, i64* noundef nonnull align 8 dereferenceable(8) %7, i64* noundef nonnull align 8 dereferenceable(8) %6, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %5, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %4)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::_Ref_count_obj2"* %this7

ehcleanup:                                        ; preds = %entry
  %9 = cleanuppad within none []
  %10 = bitcast %"class.std::_Ref_count_obj2"* %this7 to %"class.std::_Ref_count_base"*
  call void @"??1_Ref_count_base@std@@UEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %10) #15 [ "funclet"(token %9) ]
  cleanupret from %9 unwind to caller
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @"??3@YAXPEAX@Z"(i8* noundef) #10

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Set_ptr_rep_and_enable_shared@Vbuffer_impl@detail@sycl@cl@@@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEAAXQEAVbuffer_impl@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this, %"class.cl::sycl::detail::buffer_impl"* noundef %_Px, %"class.std::_Ref_count_base"* noundef %_Rx) #2 comdat align 2 {
entry:
  %_Rx.addr = alloca %"class.std::_Ref_count_base"*, align 8
  %_Px.addr = alloca %"class.cl::sycl::detail::buffer_impl"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::_Ref_count_base"* %_Rx, %"class.std::_Ref_count_base"** %_Rx.addr, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %_Px, %"class.cl::sycl::detail::buffer_impl"** %_Px.addr, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Px.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %1, i32 0, i32 0
  store %"class.cl::sycl::detail::buffer_impl"* %0, %"class.cl::sycl::detail::buffer_impl"** %_Ptr, align 8
  %2 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rx.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %3, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %2, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret void
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #11

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ref_count_base"* @"??0_Ref_count_base@std@@IEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  %_Uses = getelementptr inbounds %"class.std::_Ref_count_base", %"class.std::_Ref_count_base"* %this1, i32 0, i32 1
  store i32 1, i32* %_Uses, align 8
  %_Weaks = getelementptr inbounds %"class.std::_Ref_count_base", %"class.std::_Ref_count_base"* %this1, i32 0, i32 2
  store i32 1, i32* %_Weaks, align 4
  ret %"class.std::_Ref_count_base"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$_Construct_in_place@Vbuffer_impl@detail@sycl@cl@@_K_KAEBVproperty_list@34@V?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@$$QEA_K1AEBVproperty_list@34@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@0@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %_Obj, i64* noundef nonnull align 8 dereferenceable(8) %_Args5, i64* noundef nonnull align 8 dereferenceable(8) %_Args3, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %_Args1, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %_Args) #4 comdat {
entry:
  %_Args.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %_Args.addr2 = alloca %"class.cl::sycl::property_list"*, align 8
  %_Args.addr4 = alloca i64*, align 8
  %_Args.addr6 = alloca i64*, align 8
  %_Obj.addr = alloca %"class.cl::sycl::detail::buffer_impl"*, align 8
  %agg.tmp = alloca %"class.std::unique_ptr", align 8
  store %"class.std::unique_ptr.28"* %_Args, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  store %"class.cl::sycl::property_list"* %_Args1, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  store i64* %_Args3, i64** %_Args.addr4, align 8
  store i64* %_Args5, i64** %_Args.addr6, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %_Obj, %"class.cl::sycl::detail::buffer_impl"** %_Obj.addr, align 8
  %0 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Obj.addr, align 8
  %call = call noundef i8* @"??$_Voidify_iter@PEAVbuffer_impl@detail@sycl@cl@@@std@@YAPEAXPEAVbuffer_impl@detail@sycl@cl@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef %0) #15
  %1 = bitcast i8* %call to %"class.cl::sycl::detail::buffer_impl"*
  %2 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %_Args.addr, align 8
  %call7 = call noundef %"class.std::unique_ptr"* @"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@VSYCLMemObjAllocator@detail@sycl@cl@@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::unique_ptr"* noundef nonnull align 8 dereferenceable(8) %agg.tmp, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %2) #15
  %3 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %_Args.addr2, align 8
  %4 = load i64*, i64** %_Args.addr4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = load i64*, i64** %_Args.addr6, align 8
  %7 = load i64, i64* %6, align 8
  %call8 = call noundef %"class.cl::sycl::detail::buffer_impl"* @"??0buffer_impl@detail@sycl@cl@@QEAA@_K0AEBVproperty_list@23@V?$unique_ptr@VSYCLMemObjAllocator@detail@sycl@cl@@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@@std@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %1, i64 noundef %7, i64 noundef %5, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %3, %"class.std::unique_ptr"* noundef %agg.tmp)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1_Ref_count_base@std@@UEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Destroy@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_obj2"*, align 8
  store %"class.std::_Ref_count_obj2"* %this, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %0 = getelementptr inbounds %"class.std::_Ref_count_obj2", %"class.std::_Ref_count_obj2"* %this1, i32 0, i32 1
  %_Storage = bitcast %union.anon* %0 to %"struct.std::_Wrap"*
  %_Value = getelementptr inbounds %"struct.std::_Wrap", %"struct.std::_Wrap"* %_Storage, i32 0, i32 0
  call void @"??$_Destroy_in_place@Vbuffer_impl@detail@sycl@cl@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %_Value) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Delete_this@?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@EEAAXXZ"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_obj2"*, align 8
  store %"class.std::_Ref_count_obj2"* %this, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %isnull = icmp eq %"class.std::_Ref_count_obj2"* %this1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %0 = bitcast %"class.std::_Ref_count_obj2"* %this1 to i8* (%"class.std::_Ref_count_obj2"*, i32)***
  %vtable = load i8* (%"class.std::_Ref_count_obj2"*, i32)**, i8* (%"class.std::_Ref_count_obj2"*, i32)*** %0, align 8
  %vfn = getelementptr inbounds i8* (%"class.std::_Ref_count_obj2"*, i32)*, i8* (%"class.std::_Ref_count_obj2"*, i32)** %vtable, i64 2
  %1 = load i8* (%"class.std::_Ref_count_obj2"*, i32)*, i8* (%"class.std::_Ref_count_obj2"*, i32)** %vfn, align 8
  %call = call noundef i8* %1(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this1, i32 noundef 1) #15
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_G?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAAPEAXI@Z"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.std::_Ref_count_obj2"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.std::_Ref_count_obj2"* %this, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count_obj2"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAA@XZ"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.std::_Ref_count_obj2"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this, %class.type_info* noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #2 comdat align 2 {
entry:
  %.addr = alloca %class.type_info*, align 8
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %class.type_info* %0, %class.type_info** %.addr, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  ret i8* null
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Voidify_iter@PEAVbuffer_impl@detail@sycl@cl@@@std@@YAPEAXPEAVbuffer_impl@detail@sycl@cl@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef %_It) #2 comdat {
entry:
  %_It.addr = alloca %"class.cl::sycl::detail::buffer_impl"*, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %_It, %"class.cl::sycl::detail::buffer_impl"** %_It.addr, align 8
  %0 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_It.addr, align 8
  %1 = bitcast %"class.cl::sycl::detail::buffer_impl"* %0 to i8*
  ret i8* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::unique_ptr"* @"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@VSYCLMemObjAllocator@detail@sycl@cl@@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@@std@@QEAA@$$QEAV?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::unique_ptr"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %_Right) unnamed_addr #5 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %this.addr = alloca %"class.std::unique_ptr"*, align 8
  %ref.tmp = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  %agg.tmp = alloca %"struct.std::_One_then_variadic_args_t", align 1
  store %"class.std::unique_ptr.28"* %_Right, %"class.std::unique_ptr.28"** %_Right.addr, align 8
  store %"class.std::unique_ptr"* %this, %"class.std::unique_ptr"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr"*, %"class.std::unique_ptr"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %this1, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %_Right.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"?release@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %0) #15
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %call, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %ref.tmp, align 8
  %1 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %_Right.addr, align 8
  %call2 = call noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.30"* @"?get_deleter@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %1) #15
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %2 = load i8, i8* %coerce.dive, align 1
  %call3 = call noundef %"class.std::_Compressed_pair.7"* @"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@PEAVSYCLMemObjAllocator@detail@sycl@cl@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@$$QEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::_Compressed_pair.7"* noundef nonnull align 8 dereferenceable(8) %_Mypair, i8 %2, %"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %call2, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  ret %"class.std::unique_ptr"* %this1
}

declare dllimport noundef %"class.cl::sycl::detail::buffer_impl"* @"??0buffer_impl@detail@sycl@cl@@QEAA@_K0AEBVproperty_list@23@V?$unique_ptr@VSYCLMemObjAllocator@detail@sycl@cl@@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@@std@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull returned align 8 dereferenceable(216), i64 noundef, i64 noundef, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32), %"class.std::unique_ptr"* noundef) unnamed_addr #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"?release@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %ref.tmp = alloca i8*, align 8
  store %"class.std::unique_ptr.28"* %this, %"class.std::unique_ptr.28"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %this.addr, align 8
  store i8* null, i8** %ref.tmp, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.29", %"class.std::_Compressed_pair.29"* %_Mypair, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"??$exchange@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$T@std@@YAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAPEAV1234@$$QEA$$T@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %_Myval2, i8** noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  ret %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.30"* @"?get_deleter@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ"(%"class.std::unique_ptr.28"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::unique_ptr.28"*, align 8
  store %"class.std::unique_ptr.28"* %this, %"class.std::unique_ptr.28"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.30"* @"?_Get_first@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.29"* noundef nonnull align 8 dereferenceable(8) %_Mypair) #15
  ret %"struct.std::default_delete.30"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.7"* @"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@PEAVSYCLMemObjAllocator@detail@sycl@cl@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@$$QEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::_Compressed_pair.7"* noundef nonnull returned align 8 dereferenceable(8) %this, i8 %.coerce, %"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %_Val1, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %_Val2) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_One_then_variadic_args_t", align 1
  %_Val2.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, align 8
  %_Val1.addr = alloca %"struct.std::default_delete.30"*, align 8
  %this.addr = alloca %"class.std::_Compressed_pair.7"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Val2, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val2.addr, align 8
  store %"struct.std::default_delete.30"* %_Val1, %"struct.std::default_delete.30"** %_Val1.addr, align 8
  store %"class.std::_Compressed_pair.7"* %this, %"class.std::_Compressed_pair.7"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.7"*, %"class.std::_Compressed_pair.7"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.7"* %this1 to %"struct.std::default_delete"*
  %2 = load %"struct.std::default_delete.30"*, %"struct.std::default_delete.30"** %_Val1.addr, align 8
  %call = call noundef %"struct.std::default_delete"* @"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$0A@@?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@QEAA@AEBU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@@Z"(%"struct.std::default_delete"* noundef nonnull align 1 dereferenceable(1) %1, %"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %2) #15
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.7", %"class.std::_Compressed_pair.7"* %this1, i32 0, i32 0
  %3 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val2.addr, align 8
  %4 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %3, align 8
  %5 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %4 to %"class.cl::sycl::detail::SYCLMemObjAllocator"*
  store %"class.cl::sycl::detail::SYCLMemObjAllocator"* %5, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %_Myval2, align 8
  ret %"class.std::_Compressed_pair.7"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"??$exchange@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$$T@std@@YAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAPEAV1234@$$QEA$$T@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %_Val, i8** noundef nonnull align 8 dereferenceable(8) %_New_val) #2 comdat {
entry:
  %_New_val.addr = alloca i8**, align 8
  %_Val.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, align 8
  %_Old_val = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i8** %_New_val, i8*** %_New_val.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Val, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val.addr, align 8
  %0 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val.addr, align 8
  %1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %0, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %1, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Old_val, align 8
  %2 = load i8**, i8*** %_New_val.addr, align 8
  %3 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* null, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %3, align 8
  %4 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Old_val, align 8
  ret %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %4
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.30"* @"?_Get_first@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.29"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.29"*, align 8
  store %"class.std::_Compressed_pair.29"* %this, %"class.std::_Compressed_pair.29"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.29"*, %"class.std::_Compressed_pair.29"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.29"* %this1 to %"struct.std::default_delete.30"*
  ret %"struct.std::default_delete.30"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"struct.std::default_delete"* @"??$?0V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$0A@@?$default_delete@VSYCLMemObjAllocator@detail@sycl@cl@@@std@@QEAA@AEBU?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@1@@Z"(%"struct.std::default_delete"* noundef nonnull returned align 1 dereferenceable(1) %this, %"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"struct.std::default_delete.30"*, align 8
  %this.addr = alloca %"struct.std::default_delete"*, align 8
  store %"struct.std::default_delete.30"* %0, %"struct.std::default_delete.30"** %.addr, align 8
  store %"struct.std::default_delete"* %this, %"struct.std::default_delete"** %this.addr, align 8
  %this1 = load %"struct.std::default_delete"*, %"struct.std::default_delete"** %this.addr, align 8
  ret %"struct.std::default_delete"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Destroy_in_place@Vbuffer_impl@detail@sycl@cl@@@std@@YAXAEAVbuffer_impl@detail@sycl@cl@@@Z"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %_Obj) #2 comdat {
entry:
  %_Obj.addr = alloca %"class.cl::sycl::detail::buffer_impl"*, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %_Obj, %"class.cl::sycl::detail::buffer_impl"** %_Obj.addr, align 8
  %0 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Obj.addr, align 8
  call void @"??1buffer_impl@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216) %0) #15
  ret void
}

; Function Attrs: nounwind
declare dllimport void @"??1buffer_impl@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::buffer_impl"* noundef nonnull align 8 dereferenceable(216)) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@UEAA@XZ"(%"class.std::_Ref_count_obj2"* noundef nonnull align 8 dereferenceable(232) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_obj2"*, align 8
  store %"class.std::_Ref_count_obj2"* %this, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_obj2"*, %"class.std::_Ref_count_obj2"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count_obj2"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Ref_count_obj2@Vbuffer_impl@detail@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  %1 = bitcast %"class.std::_Ref_count_obj2"* %this1 to %"class.std::_Ref_count_base"*
  call void @"??1_Ref_count_base@std@@UEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* @"??0?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1 to %"class.cl::sycl::detail::SYCLMemObjAllocator"*
  %call = call noundef %"class.cl::sycl::detail::SYCLMemObjAllocator"* @"??0SYCLMemObjAllocator@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %MAllocator = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 1
  %2 = bitcast %"class.cl::sycl::detail::aligned_allocator"* %MAllocator to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 8, i1 false)
  %call2 = call noundef %"class.cl::sycl::detail::aligned_allocator"* @"??0?$aligned_allocator@D@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull align 8 dereferenceable(8) %MAllocator) #15
  %MValueSize = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 2
  store i64 1, i64* %MValueSize, align 8
  ret %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::unique_ptr.28"* @"??$?0U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@$0A@@?$unique_ptr@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@@std@@QEAA@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::unique_ptr.28"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef %_Ptr) unnamed_addr #5 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  %this.addr = alloca %"class.std::unique_ptr.28"*, align 8
  %agg.tmp = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %_Ptr, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Ptr.addr, align 8
  store %"class.std::unique_ptr.28"* %this, %"class.std::unique_ptr.28"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.28"*, %"class.std::unique_ptr.28"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr.28", %"class.std::unique_ptr.28"* %this1, i32 0, i32 0
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %0 = load i8, i8* %coerce.dive, align 1
  %call = call noundef %"class.std::_Compressed_pair.29"* @"??$?0AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::_Compressed_pair.29"* noundef nonnull align 8 dereferenceable(8) %_Mypair, i8 %0, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %_Ptr.addr) #15
  ret %"class.std::unique_ptr.28"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::SYCLMemObjAllocator"* @"??0SYCLMemObjAllocator@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocator"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocator"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocator"*, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7SYCLMemObjAllocator@detail@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  ret %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::aligned_allocator"* @"??0?$aligned_allocator@D@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::aligned_allocator"*, align 8
  store %"class.cl::sycl::detail::aligned_allocator"* %this, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::aligned_allocator"*, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %MAlignment = getelementptr inbounds %"class.cl::sycl::detail::aligned_allocator", %"class.cl::sycl::detail::aligned_allocator"* %this1, i32 0, i32 0
  store i64 128, i64* %MAlignment, align 8
  ret %"class.cl::sycl::detail::aligned_allocator"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?getAllocatorImpl@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@MEAAPEAXXZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %MAllocator = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 1
  %0 = bitcast %"class.cl::sycl::detail::aligned_allocator"* %MAllocator to i8*
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_G?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"?allocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAPEAX_K@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %Count) unnamed_addr #4 comdat align 2 {
entry:
  %Count.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i64 %Count, i64* %Count.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %MAllocator = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 1
  %0 = load i64, i64* %Count.addr, align 8
  %call = call noundef i8* @"?allocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAPEAD_K@Z"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull align 8 dereferenceable(8) %MAllocator, i64 noundef %0)
  ret i8* %call
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?deallocate@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAXPEAX_K@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this, i8* noundef %Ptr, i64 noundef %Count) unnamed_addr #4 comdat align 2 {
entry:
  %Count.addr = alloca i64, align 8
  %Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i64 %Count, i64* %Count.addr, align 8
  store i8* %Ptr, i8** %Ptr.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %MAllocator = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 1
  %0 = load i64, i64* %Count.addr, align 8
  %1 = load i8*, i8** %Ptr.addr, align 8
  call void @"?deallocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAXPEAD_K@Z"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull align 8 dereferenceable(8) %MAllocator, i8* noundef %1, i64 noundef %0)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?getValueSize@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEBA_KXZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %MValueSize = getelementptr inbounds %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder", %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1, i32 0, i32 2
  %0 = load i64, i64* %MValueSize, align 8
  ret i64 %0
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?setAlignment@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAAX_K@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %RequiredAlign) unnamed_addr #4 comdat align 2 {
entry:
  %RequiredAlign.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i64 %RequiredAlign, i64* %RequiredAlign.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %0 = load i64, i64* %RequiredAlign.addr, align 8
  call void @"??$setAlignImpl@V?$aligned_allocator@D@detail@sycl@cl@@@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAAX_K@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %0)
  ret void
}

declare dso_local void @_purecall() unnamed_addr

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_GSYCLMemObjAllocator@detail@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocator"* noundef nonnull align 8 dereferenceable(8) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocator"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocator"*, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this1 to %"class.cl::sycl::detail::SYCLMemObjAllocator"*
  call void @"??1SYCLMemObjAllocator@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocator"* noundef nonnull align 8 dereferenceable(8) %0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1SYCLMemObjAllocator@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::SYCLMemObjAllocator"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocator"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocator"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocator"*, %"class.cl::sycl::detail::SYCLMemObjAllocator"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"?allocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAPEAD_K@Z"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %Size) #4 comdat align 2 {
entry:
  %Size.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::aligned_allocator"*, align 8
  %NumBytes = alloca i64, align 8
  %tmp = alloca %"class.std::bad_alloc", align 8
  %Result = alloca i8*, align 8
  %tmp6 = alloca %"class.std::bad_alloc", align 8
  store i64 %Size, i64* %Size.addr, align 8
  store %"class.cl::sycl::detail::aligned_allocator"* %this, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::aligned_allocator"*, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %0 = load i64, i64* %Size.addr, align 8
  %mul = mul i64 %0, 1
  store i64 %mul, i64* %NumBytes, align 8
  %1 = load i64, i64* %NumBytes, align 8
  %sub = sub i64 %1, 1
  %MAlignment = getelementptr inbounds %"class.cl::sycl::detail::aligned_allocator", %"class.cl::sycl::detail::aligned_allocator"* %this1, i32 0, i32 0
  %2 = load i64, i64* %MAlignment, align 8
  %sub2 = sub i64 %2, 1
  %or = or i64 %sub, %sub2
  %add = add i64 %or, 1
  store i64 %add, i64* %NumBytes, align 8
  %3 = load i64, i64* %Size.addr, align 8
  %4 = load i64, i64* %NumBytes, align 8
  %cmp = icmp ugt i64 %3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@QEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %tmp) #15
  %5 = bitcast %"class.std::bad_alloc"* %tmp to i8*
  call void @_CxxThrowException(i8* %5, %eh.ThrowInfo* @"_TI2?AVbad_alloc@std@@") #17
  unreachable

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %NumBytes, align 8
  %MAlignment3 = getelementptr inbounds %"class.cl::sycl::detail::aligned_allocator", %"class.cl::sycl::detail::aligned_allocator"* %this1, i32 0, i32 0
  %7 = load i64, i64* %MAlignment3, align 8
  %call4 = call noundef i8* @"?alignedAlloc@OSUtil@detail@sycl@cl@@SAPEAX_K0@Z"(i64 noundef %7, i64 noundef %6)
  store i8* %call4, i8** %Result, align 8
  %8 = load i8*, i8** %Result, align 8
  %tobool = icmp ne i8* %8, null
  br i1 %tobool, label %if.end8, label %if.then5

if.then5:                                         ; preds = %if.end
  %call7 = call noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@QEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %tmp6) #15
  %9 = bitcast %"class.std::bad_alloc"* %tmp6 to i8*
  call void @_CxxThrowException(i8* %9, %eh.ThrowInfo* @"_TI2?AVbad_alloc@std@@") #17
  unreachable

if.end8:                                          ; preds = %if.end
  %10 = load i8*, i8** %Result, align 8
  ret i8* %10
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@QEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  %call = call noundef %"class.std::exception"* @"??0exception@std@@QEAA@QEBDH@Z"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @"??_C@_0P@GHFPNOJB@bad?5allocation?$AA@", i64 0, i64 0), i32 noundef 1) #15
  %1 = bitcast %"class.std::bad_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7bad_alloc@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  ret %"class.std::bad_alloc"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@QEAA@AEBV01@@Z"(%"class.std::bad_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.std::bad_alloc"*, align 8
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store %"class.std::bad_alloc"* %0, %"class.std::bad_alloc"** %.addr, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %1 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  %2 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %.addr, align 8
  %3 = bitcast %"class.std::bad_alloc"* %2 to %"class.std::exception"*
  %call = call noundef %"class.std::exception"* @"??0exception@std@@QEAA@AEBV01@@Z"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %1, %"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %3) #15
  %4 = bitcast %"class.std::bad_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7bad_alloc@std@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.std::bad_alloc"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::exception"* @"??0exception@std@@QEAA@AEBV01@@Z"(%"class.std::exception"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %_Other) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Other.addr = alloca %"class.std::exception"*, align 8
  %this.addr = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %_Other, %"class.std::exception"** %_Other.addr, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %0 = bitcast %"class.std::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7exception@std@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  %_Data = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %1 = bitcast %struct.__std_exception_data* %_Data to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false)
  %_Data2 = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %2 = load %"class.std::exception"*, %"class.std::exception"** %_Other.addr, align 8
  %_Data3 = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %2, i32 0, i32 1
  invoke void @__std_exception_copy(%struct.__std_exception_data* noundef %_Data3, %struct.__std_exception_data* noundef %_Data2)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  ret %"class.std::exception"* %this1

terminate:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1bad_alloc@std@@UEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  call void @"??1exception@std@@UEAA@XZ"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %0) #15
  ret void
}

declare dso_local void @_CxxThrowException(i8*, %eh.ThrowInfo*)

declare dllimport noundef i8* @"?alignedAlloc@OSUtil@detail@sycl@cl@@SAPEAX_K0@Z"(i64 noundef, i64 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::exception"* @"??0exception@std@@QEAA@QEBDH@Z"(%"class.std::exception"* noundef nonnull returned align 8 dereferenceable(24) %this, i8* noundef %_Message, i32 noundef %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca i32, align 4
  %_Message.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::exception"*, align 8
  store i32 %0, i32* %.addr, align 4
  store i8* %_Message, i8** %_Message.addr, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %1 = bitcast %"class.std::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7exception@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Data = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %2 = bitcast %struct.__std_exception_data* %_Data to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  %3 = load i8*, i8** %_Message.addr, align 8
  %_Data2 = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %_What = getelementptr inbounds %struct.__std_exception_data, %struct.__std_exception_data* %_Data2, i32 0, i32 0
  store i8* %3, i8** %_What, align 8
  ret %"class.std::exception"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gbad_alloc@std@@UEAAPEAXI@Z"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_alloc"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1bad_alloc@std@@UEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.std::bad_alloc"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?what@exception@std@@UEBAPEBDXZ"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %_Data = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %_What = getelementptr inbounds %struct.__std_exception_data, %struct.__std_exception_data* %_Data, i32 0, i32 0
  %0 = load i8*, i8** %_What, align 8
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_Data2 = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  %_What3 = getelementptr inbounds %struct.__std_exception_data, %struct.__std_exception_data* %_Data2, i32 0, i32 0
  %1 = load i8*, i8** %_What3, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ getelementptr inbounds ([18 x i8], [18 x i8]* @"??_C@_0BC@EOODALEL@Unknown?5exception?$AA@", i64 0, i64 0), %cond.false ]
  ret i8* %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gexception@std@@UEAAPEAXI@Z"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.std::exception"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %0 = bitcast %"class.std::exception"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1exception@std@@UEAA@XZ"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.std::exception"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1exception@std@@UEAA@XZ"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %0 = bitcast %"class.std::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7exception@std@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  %_Data = getelementptr inbounds %"class.std::exception", %"class.std::exception"* %this1, i32 0, i32 1
  invoke void @__std_exception_destroy(%struct.__std_exception_data* noundef %_Data)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  ret void

terminate:                                        ; preds = %entry
  %1 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %1) ]
  unreachable
}

declare dso_local void @__std_exception_destroy(%struct.__std_exception_data* noundef) #1

declare dso_local void @__std_exception_copy(%struct.__std_exception_data* noundef, %struct.__std_exception_data* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?deallocate@?$aligned_allocator@D@detail@sycl@cl@@QEAAXPEAD_K@Z"(%"class.cl::sycl::detail::aligned_allocator"* noundef nonnull align 8 dereferenceable(8) %this, i8* noundef %Ptr, i64 noundef %0) #4 comdat align 2 {
entry:
  %.addr = alloca i64, align 8
  %Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::aligned_allocator"*, align 8
  store i64 %0, i64* %.addr, align 8
  store i8* %Ptr, i8** %Ptr.addr, align 8
  store %"class.cl::sycl::detail::aligned_allocator"* %this, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::aligned_allocator"*, %"class.cl::sycl::detail::aligned_allocator"** %this.addr, align 8
  %1 = load i8*, i8** %Ptr.addr, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %Ptr.addr, align 8
  call void @"?alignedFree@OSUtil@detail@sycl@cl@@SAXPEAX@Z"(i8* noundef %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare dllimport void @"?alignedFree@OSUtil@detail@sycl@cl@@SAXPEAX@Z"(i8* noundef) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$setAlignImpl@V?$aligned_allocator@D@detail@sycl@cl@@@?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@AEAAX_K@Z"(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %0) #2 comdat align 2 {
entry:
  %.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  store i64 %0, i64* %.addr, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.29"* @"??$?0AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@?$_Compressed_pair@U?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@PEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"class.std::_Compressed_pair.29"* noundef nonnull returned align 8 dereferenceable(8) %this, i8 %.coerce, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** noundef nonnull align 8 dereferenceable(8) %_Val2) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  %_Val2.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, align 8
  %this.addr = alloca %"class.std::_Compressed_pair.29"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Val2, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val2.addr, align 8
  store %"class.std::_Compressed_pair.29"* %this, %"class.std::_Compressed_pair.29"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.29"*, %"class.std::_Compressed_pair.29"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.29"* %this1 to %"struct.std::default_delete.30"*
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.29", %"class.std::_Compressed_pair.29"* %this1, i32 0, i32 0
  %2 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"**, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*** %_Val2.addr, align 8
  %3 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %2, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %3, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Myval2, align 8
  ret %"class.std::_Compressed_pair.29"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"?getNextPowerOfTwoHelper@detail@sycl@cl@@YA_K_K0@Z"(i64 noundef %Var, i64 noundef %Offset) #4 comdat {
entry:
  %Offset.addr = alloca i64, align 8
  %Var.addr = alloca i64, align 8
  store i64 %Offset, i64* %Offset.addr, align 8
  store i64 %Var, i64* %Var.addr, align 8
  %0 = load i64, i64* %Offset.addr, align 8
  %cmp = icmp ne i64 %0, 64
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i64, i64* %Offset.addr, align 8
  %mul = mul i64 %1, 2
  %2 = load i64, i64* %Var.addr, align 8
  %3 = load i64, i64* %Var.addr, align 8
  %4 = load i64, i64* %Offset.addr, align 8
  %shr = lshr i64 %3, %4
  %or = or i64 %2, %shr
  %call = call noundef i64 @"?getNextPowerOfTwoHelper@detail@sycl@cl@@YA_K_K0@Z"(i64 noundef %or, i64 noundef %mul)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* %Var.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %_Right) unnamed_addr #5 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %_Right, %"class.std::shared_ptr.3"** %_Right.addr, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.std::_Ptr_base.4"* @"??0?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %2 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Right.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.3"* %2 to %"class.std::_Ptr_base.4"*
  call void @"??$_Move_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %1, %"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %3) #15
  ret %"class.std::shared_ptr.3"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?swap@?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %_Other) #2 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %_Other, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  %2 = bitcast %"class.std::shared_ptr.3"* %1 to %"class.std::_Ptr_base.4"*
  call void @"?_Swap@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0, %"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %2) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Move_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %_Right, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %0 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %0, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Ptr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::buffer_impl"* %1, %"class.cl::sycl::detail::buffer_impl"** %_Ptr2, align 8
  %2 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %2, i32 0, i32 1
  %3 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %3, %"class.std::_Ref_count_base"** %_Rep3, align 8
  %4 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Ptr4 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %4, i32 0, i32 0
  store %"class.cl::sycl::detail::buffer_impl"* null, %"class.cl::sycl::detail::buffer_impl"** %_Ptr4, align 8
  %5 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Rep5 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %5, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep5, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Swap@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %_Right, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %0 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %0, i32 0, i32 0
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 0
  call void @"??$swap@PEAVbuffer_impl@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVbuffer_impl@detail@sycl@cl@@0@Z"(%"class.cl::sycl::detail::buffer_impl"** noundef nonnull align 8 dereferenceable(8) %_Ptr2, %"class.cl::sycl::detail::buffer_impl"** noundef nonnull align 8 dereferenceable(8) %_Ptr) #15
  %1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %_Right.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %1, i32 0, i32 1
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  call void @"??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z"(%"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Rep3, %"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Rep) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$swap@PEAVbuffer_impl@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVbuffer_impl@detail@sycl@cl@@0@Z"(%"class.cl::sycl::detail::buffer_impl"** noundef nonnull align 8 dereferenceable(8) %_Left, %"class.cl::sycl::detail::buffer_impl"** noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat {
entry:
  %_Right.addr = alloca %"class.cl::sycl::detail::buffer_impl"**, align 8
  %_Left.addr = alloca %"class.cl::sycl::detail::buffer_impl"**, align 8
  %_Tmp = alloca %"class.cl::sycl::detail::buffer_impl"*, align 8
  store %"class.cl::sycl::detail::buffer_impl"** %_Right, %"class.cl::sycl::detail::buffer_impl"*** %_Right.addr, align 8
  store %"class.cl::sycl::detail::buffer_impl"** %_Left, %"class.cl::sycl::detail::buffer_impl"*** %_Left.addr, align 8
  %0 = load %"class.cl::sycl::detail::buffer_impl"**, %"class.cl::sycl::detail::buffer_impl"*** %_Left.addr, align 8
  %1 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %0, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %1, %"class.cl::sycl::detail::buffer_impl"** %_Tmp, align 8
  %2 = load %"class.cl::sycl::detail::buffer_impl"**, %"class.cl::sycl::detail::buffer_impl"*** %_Right.addr, align 8
  %3 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %2, align 8
  %4 = load %"class.cl::sycl::detail::buffer_impl"**, %"class.cl::sycl::detail::buffer_impl"*** %_Left.addr, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %3, %"class.cl::sycl::detail::buffer_impl"** %4, align 8
  %5 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Tmp, align 8
  %6 = load %"class.cl::sycl::detail::buffer_impl"**, %"class.cl::sycl::detail::buffer_impl"*** %_Right.addr, align 8
  store %"class.cl::sycl::detail::buffer_impl"* %5, %"class.cl::sycl::detail::buffer_impl"** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z"(%"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Left, %"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat {
entry:
  %_Right.addr = alloca %"class.std::_Ref_count_base"**, align 8
  %_Left.addr = alloca %"class.std::_Ref_count_base"**, align 8
  %_Tmp = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"** %_Right, %"class.std::_Ref_count_base"*** %_Right.addr, align 8
  store %"class.std::_Ref_count_base"** %_Left, %"class.std::_Ref_count_base"*** %_Left.addr, align 8
  %0 = load %"class.std::_Ref_count_base"**, %"class.std::_Ref_count_base"*** %_Left.addr, align 8
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %0, align 8
  store %"class.std::_Ref_count_base"* %1, %"class.std::_Ref_count_base"** %_Tmp, align 8
  %2 = load %"class.std::_Ref_count_base"**, %"class.std::_Ref_count_base"*** %_Right.addr, align 8
  %3 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %2, align 8
  %4 = load %"class.std::_Ref_count_base"**, %"class.std::_Ref_count_base"*** %_Left.addr, align 8
  store %"class.std::_Ref_count_base"* %3, %"class.std::_Ref_count_base"** %4, align 8
  %5 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Tmp, align 8
  %6 = load %"class.std::_Ref_count_base"**, %"class.std::_Ref_count_base"*** %_Right.addr, align 8
  store %"class.std::_Ref_count_base"* %5, %"class.std::_Ref_count_base"** %6, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??R?$default_delete@V?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@std@@QEBAXPEAV?$SYCLMemObjAllocatorHolder@V?$aligned_allocator@D@detail@sycl@cl@@H@detail@sycl@cl@@@Z"(%"struct.std::default_delete.30"* noundef nonnull align 1 dereferenceable(1) %this, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, align 8
  %this.addr = alloca %"struct.std::default_delete.30"*, align 8
  store %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %_Ptr, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Ptr.addr, align 8
  store %"struct.std::default_delete.30"* %this, %"struct.std::default_delete.30"** %this.addr, align 8
  %this1 = load %"struct.std::default_delete.30"*, %"struct.std::default_delete.30"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"** %_Ptr.addr, align 8
  %isnull = icmp eq %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* %0 to i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)***
  %vtable = load i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)**, i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)*** %1, align 8
  %vfn = getelementptr inbounds i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)*, i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)** %vtable, i64 1
  %2 = load i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)*, i8* (%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"*, i32)** %vfn, align 8
  %call = call noundef i8* %2(%"class.cl::sycl::detail::SYCLMemObjAllocatorHolder"* noundef nonnull align 8 dereferenceable(24) %0, i32 noundef 1) #15
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %this, i32 noundef %dimension) #4 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::detail::array"*, align 8
  %tmp.i = alloca %"class.cl::sycl::invalid_parameter_error", align 8
  %dimension.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::array"*, align 8
  store i32 %dimension, i32* %dimension.addr, align 4
  store %"class.cl::sycl::detail::array"* %this, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %0 = load i32, i32* %dimension.addr, align 4
  store i32 %0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::detail::array"* %this1, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %1 = load i32, i32* %dimension.addr.i, align 4
  %cmp.i = icmp sge i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %2 = load i32, i32* %dimension.addr.i, align 4
  %cmp2.i = icmp slt i32 %2, 0
  br i1 %cmp2.i, label %if.then.i, label %"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit"

if.then.i:                                        ; preds = %lor.lhs.false.i, %entry
  %call.i = call noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %tmp.i, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %tmp.i to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_parameter_error@sycl@cl@@") #17
  unreachable

"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit": ; preds = %lor.lhs.false.i
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %this1, i32 0, i32 0
  %4 = load i32, i32* %dimension.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  ret i64* %arrayidx
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull returned align 8 dereferenceable(80) %this, i8* noundef %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store i8* %Msg, i8** %Msg.addr, align 8
  store %"class.cl::sycl::invalid_parameter_error"* %this, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %0 = load i32, i32* %Err.addr, align 4
  %1 = load i8*, i8** %Msg.addr, align 8
  %call = call noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8* noundef %1)
  %call2 = invoke noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %this1, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i32 noundef %0)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret %"class.cl::sycl::invalid_parameter_error"* %this1

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  store %"class.cl::sycl::invalid_parameter_error"* %0, %"class.cl::sycl::invalid_parameter_error"** %.addr, align 8
  store %"class.cl::sycl::invalid_parameter_error"* %this, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to %"class.cl::sycl::runtime_error"*
  %2 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %2 to %"class.cl::sycl::runtime_error"*
  %call = call noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %1, %"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %3)
  %4 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7invalid_parameter_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.cl::sycl::invalid_parameter_error"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  store %"class.cl::sycl::runtime_error"* %0, %"class.cl::sycl::runtime_error"** %.addr, align 8
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::runtime_error"* %this1 to %"class.cl::sycl::exception"*
  %2 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::runtime_error"* %2 to %"class.cl::sycl::exception"*
  %call = call noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %1, %"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %3)
  %4 = bitcast %"class.cl::sycl::runtime_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7runtime_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.cl::sycl::runtime_error"* %this1
}

declare dllimport noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::exception"* noundef nonnull returned align 8 dereferenceable(80), %"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80)) unnamed_addr #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1invalid_parameter_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  store %"class.cl::sycl::invalid_parameter_error"* %this, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to %"class.cl::sycl::runtime_error"*
  call void @"??1runtime_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %0) #15
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull returned align 8 dereferenceable(32) %this, i8* noundef %_Ptr) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %agg.tmp = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %0 = load i8, i8* %coerce.dive, align 1
  %call = call noundef %"class.std::_Compressed_pair.0"* @"??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %_Mypair, i8 %0) #15
  %1 = load i8*, i8** %_Ptr.addr, align 8
  %call2 = call noundef i64 @"?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z"(i8* noundef %1) #15
  %call3 = call noundef i64 @"??$_Convert_size@_K_K@std@@YA_K_K@Z"(i64 noundef %call2) #15
  %2 = load i8*, i8** %_Ptr.addr, align 8
  invoke void @"??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i8* noundef %2, i64 noundef %call3)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::basic_string"* %this1

ehcleanup:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @"??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %_Mypair) #15 [ "funclet"(token %3) ]
  cleanupret from %3 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  %agg.tmp = alloca %"class.std::error_code", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::invalid_parameter_error"* %this, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to %"class.cl::sycl::runtime_error"*
  %1 = load i32, i32* %Err.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  call void @"?make_error_code@sycl@cl@@YA?AVerror_code@std@@W4errc@12@@Z"(%"class.std::error_code"* sret(%"class.std::error_code") align 8 %agg.tmp, i32 noundef 6) #15
  %call = call noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7invalid_parameter_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.cl::sycl::invalid_parameter_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.0"* @"??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z"(%"class.std::_Compressed_pair.0"* noundef nonnull returned align 8 dereferenceable(32) %this, i8 %.coerce) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_Zero_then_variadic_args_t", align 1
  %this.addr = alloca %"class.std::_Compressed_pair.0"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_Zero_then_variadic_args_t", %"struct.std::_Zero_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.std::_Compressed_pair.0"* %this, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.0"*, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.0"* %this1 to %"class.std::allocator.1"*
  %call = call noundef %"class.std::allocator.1"* @"??0?$allocator@D@std@@QEAA@XZ"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %1) #15
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %this1, i32 0, i32 0
  %call2 = call noundef %"class.std::_String_val"* @"??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %_Myval2) #15
  ret %"class.std::_Compressed_pair.0"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i8* noundef %_Arg, i64 noundef %_Count) #4 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_Arg.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %_My_data = alloca %"class.std::_String_val"*, align 8
  %_Al = alloca %"class.std::allocator.1"*, align 8
  %_Alproxy = alloca %"struct.std::_Fake_allocator"*, align 8
  %_Proxy = alloca %"struct.std::_Fake_proxy_ptr_impl", align 1
  %_New_capacity = alloca i64, align 8
  %_New_ptr = alloca i8*, align 8
  %ref.tmp = alloca i8, align 1
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_Arg, i8** %_Arg.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  store %"class.std::_String_val"* %_Myval2, %"class.std::_String_val"** %_My_data, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %call = call noundef i64 @"?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Xlen_string@std@@YAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  store %"class.std::allocator.1"* %call2, %"class.std::allocator.1"** %_Al, align 8
  store %"struct.std::_Fake_allocator"* @"?_Fake_alloc@std@@3U_Fake_allocator@1@B", %"struct.std::_Fake_allocator"** %_Alproxy, align 8
  %1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %2 = bitcast %"class.std::_String_val"* %1 to %"struct.std::_Container_base0"*
  %call3 = call noundef %"struct.std::_Fake_proxy_ptr_impl"* @"??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %_Proxy, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) @"?_Fake_alloc@std@@3U_Fake_allocator@1@B", %"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %2) #15
  %3 = load i64, i64* %_Count.addr, align 8
  %cmp4 = icmp ult i64 %3, 16
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %4 = load i64, i64* %_Count.addr, align 8
  %5 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %5, i32 0, i32 1
  store i64 %4, i64* %_Mysize, align 8
  %6 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %6, i32 0, i32 2
  store i64 15, i64* %_Myres, align 8
  %7 = load i64, i64* %_Count.addr, align 8
  %8 = load i8*, i8** %_Arg.addr, align 8
  %9 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %9, i32 0, i32 0
  %_Buf = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_Buf, i64 0, i64 0
  %call6 = call noundef i8* @"?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %arraydecay, i8* noundef %8, i64 noundef %7) #15
  call void @"?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %_Proxy) #15
  br label %return

if.end7:                                          ; preds = %if.end
  %10 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Myres8 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %10, i32 0, i32 2
  store i64 15, i64* %_Myres8, align 8
  %11 = load i64, i64* %_Count.addr, align 8
  %call9 = call noundef i64 @"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %11) #15
  store i64 %call9, i64* %_New_capacity, align 8
  %12 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %_Al, align 8
  %13 = load i64, i64* %_New_capacity, align 8
  %add = add i64 %13, 1
  %call10 = call noundef i8* @"?allocate@?$allocator@D@std@@QEAAPEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %12, i64 noundef %add)
  store i8* %call10, i8** %_New_ptr, align 8
  %14 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Bx11 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %14, i32 0, i32 0
  %_Ptr = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx11 to i8**
  call void @"??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr, i8** noundef nonnull align 8 dereferenceable(8) %_New_ptr) #15
  %15 = load i64, i64* %_Count.addr, align 8
  %16 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Mysize12 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %16, i32 0, i32 1
  store i64 %15, i64* %_Mysize12, align 8
  %17 = load i64, i64* %_New_capacity, align 8
  %18 = load %"class.std::_String_val"*, %"class.std::_String_val"** %_My_data, align 8
  %_Myres13 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %18, i32 0, i32 2
  store i64 %17, i64* %_Myres13, align 8
  %19 = load i64, i64* %_Count.addr, align 8
  %20 = load i8*, i8** %_Arg.addr, align 8
  %21 = load i8*, i8** %_New_ptr, align 8
  %call14 = call noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %21) #15
  %call15 = call noundef i8* @"?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %call14, i8* noundef %20, i64 noundef %19) #15
  store i8 0, i8* %ref.tmp, align 1
  %22 = load i8*, i8** %_New_ptr, align 8
  %call16 = call noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %22) #15
  %23 = load i64, i64* %_Count.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %call16, i64 %23
  call void @"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z"(i8* noundef nonnull align 1 dereferenceable(1) %arrayidx, i8* noundef nonnull align 1 dereferenceable(1) %ref.tmp) #15
  call void @"?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %_Proxy) #15
  br label %return

return:                                           ; preds = %if.end7, %if.then5
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"??$_Convert_size@_K_K@std@@YA_K_K@Z"(i64 noundef %_Len) #2 comdat {
entry:
  %_Len.addr = alloca i64, align 8
  store i64 %_Len, i64* %_Len.addr, align 8
  %0 = load i64, i64* %_Len.addr, align 8
  ret i64 %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::allocator.1"* @"??0?$allocator@D@std@@QEAA@XZ"(%"class.std::allocator.1"* noundef nonnull returned align 1 dereferenceable(1) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.1"*, align 8
  store %"class.std::allocator.1"* %this, %"class.std::allocator.1"** %this.addr, align 8
  %this1 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %this.addr, align 8
  ret %"class.std::allocator.1"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_String_val"* @"??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"class.std::_String_val"* noundef nonnull returned align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  %0 = bitcast %"class.std::_String_val"* %this1 to %"struct.std::_Container_base0"*
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  %call = call noundef %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* @"??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* noundef nonnull align 8 dereferenceable(16) %_Bx) #15
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 1
  store i64 0, i64* %_Mysize, align 8
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 2
  store i64 0, i64* %_Myres, align 8
  ret %"class.std::_String_val"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* @"??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ"(%"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"*, align 8
  store %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %this, %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"** %this.addr, align 8
  %this1 = load %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"*, %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"** %this.addr, align 8
  %_Buf = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %this1 to [16 x i8]*
  %0 = bitcast [16 x i8]* %_Buf to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false)
  ret %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %_Alloc_max = alloca i64, align 8
  %_Storage_max = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  %ref.tmp4 = alloca i64, align 8
  %ref.tmp5 = alloca i64, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  %call2 = call noundef i64 @"?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %call) #15
  store i64 %call2, i64* %_Alloc_max, align 8
  store i64 16, i64* %ref.tmp, align 8
  %call3 = call noundef nonnull align 8 dereferenceable(8) i64* @"??$max@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %_Alloc_max, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  %0 = load i64, i64* %call3, align 8
  store i64 %0, i64* %_Storage_max, align 8
  %1 = load i64, i64* %_Storage_max, align 8
  %sub = sub i64 %1, 1
  store i64 %sub, i64* %ref.tmp4, align 8
  %call6 = call noundef i64 @"?max@?$numeric_limits@_J@std@@SA_JXZ"() #15
  store i64 %call6, i64* %ref.tmp5, align 8
  %call7 = call noundef nonnull align 8 dereferenceable(8) i64* @"??$min@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp5, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp4) #15
  %2 = load i64, i64* %call7, align 8
  ret i64 %2
}

; Function Attrs: mustprogress noinline noreturn optnone uwtable
define linkonce_odr dso_local void @"?_Xlen_string@std@@YAXXZ"() #13 comdat {
entry:
  call void @"?_Xlength_error@std@@YAXPEBD@Z"(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @"??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@", i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"struct.std::_Fake_proxy_ptr_impl"* @"??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull returned align 1 dereferenceable(1) %this, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) %0, %"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %1) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"struct.std::_Container_base0"*, align 8
  %.addr1 = alloca %"struct.std::_Fake_allocator"*, align 8
  %this.addr = alloca %"struct.std::_Fake_proxy_ptr_impl"*, align 8
  store %"struct.std::_Container_base0"* %1, %"struct.std::_Container_base0"** %.addr, align 8
  store %"struct.std::_Fake_allocator"* %0, %"struct.std::_Fake_allocator"** %.addr1, align 8
  store %"struct.std::_Fake_proxy_ptr_impl"* %this, %"struct.std::_Fake_proxy_ptr_impl"** %this.addr, align 8
  %this2 = load %"struct.std::_Fake_proxy_ptr_impl"*, %"struct.std::_Fake_proxy_ptr_impl"** %this.addr, align 8
  ret %"struct.std::_Fake_proxy_ptr_impl"* %this2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %_First1, i8* noundef %_First2, i64 noundef %_Count) #2 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_First2.addr = alloca i8*, align 8
  %_First1.addr = alloca i8*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_First2, i8** %_First2.addr, align 8
  store i8* %_First1, i8** %_First1.addr, align 8
  %0 = load i8*, i8** %_First1.addr, align 8
  %1 = load i8*, i8** %_First2.addr, align 8
  %2 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 %2, 1
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %mul, i1 false)
  %3 = load i8*, i8** %_First1.addr, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Fake_proxy_ptr_impl"*, align 8
  store %"struct.std::_Fake_proxy_ptr_impl"* %this, %"struct.std::_Fake_proxy_ptr_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Fake_proxy_ptr_impl"*, %"struct.std::_Fake_proxy_ptr_impl"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %_Requested) #2 comdat align 2 {
entry:
  %_Requested.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store i64 %_Requested, i64* %_Requested.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %call = call noundef i64 @"?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval2, i32 0, i32 2
  %0 = load i64, i64* %_Myres, align 8
  %1 = load i64, i64* %_Requested.addr, align 8
  %call2 = call noundef i64 @"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z"(i64 noundef %1, i64 noundef %0, i64 noundef %call) #15
  ret i64 %call2
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"?allocate@?$allocator@D@std@@QEAAPEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %_Count) #4 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::allocator.1"*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store %"class.std::allocator.1"* %this, %"class.std::allocator.1"** %this.addr, align 8
  %this1 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %call = call noundef i64 @"??$_Get_size_of_n@$00@std@@YA_K_K@Z"(i64 noundef %0)
  %call2 = call noundef i8* @"??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z"(i64 noundef %call)
  ret i8* %call2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Obj, i8** noundef nonnull align 8 dereferenceable(8) %_Args) #2 comdat {
entry:
  %_Args.addr = alloca i8**, align 8
  %_Obj.addr = alloca i8**, align 8
  store i8** %_Args, i8*** %_Args.addr, align 8
  store i8** %_Obj, i8*** %_Obj.addr, align 8
  %0 = load i8**, i8*** %_Obj.addr, align 8
  %call = call noundef i8* @"??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z"(i8** noundef %0) #15
  %1 = bitcast i8* %call to i8**
  %2 = load i8**, i8*** %_Args.addr, align 8
  %3 = load i8*, i8** %2, align 8
  store i8* %3, i8** %1, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %_First1, i8* noundef %_First2, i64 noundef %_Count) #2 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %_First2.addr = alloca i8*, align 8
  %_First1.addr = alloca i8*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_First2, i8** %_First2.addr, align 8
  store i8* %_First1, i8** %_First1.addr, align 8
  %0 = load i8*, i8** %_First1.addr, align 8
  %1 = load i8*, i8** %_First2.addr, align 8
  %2 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 %2, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %mul, i1 false)
  %3 = load i8*, i8** %_First1.addr, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %0) #2 comdat align 2 {
entry:
  %.addr = alloca %"class.std::allocator.1"*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %.addr, align 8
  ret i64 -1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %_Mypair) #15
  ret %"class.std::allocator.1"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) i64* @"??$max@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %_Left, i64* noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat {
entry:
  %_Right.addr = alloca i64*, align 8
  %_Left.addr = alloca i64*, align 8
  store i64* %_Right, i64** %_Right.addr, align 8
  store i64* %_Left, i64** %_Left.addr, align 8
  %0 = load i64*, i64** %_Left.addr, align 8
  %1 = load i64, i64* %0, align 8
  %2 = load i64*, i64** %_Right.addr, align 8
  %3 = load i64, i64* %2, align 8
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load i64*, i64** %_Right.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load i64*, i64** %_Left.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond-lvalue = phi i64* [ %4, %cond.true ], [ %5, %cond.false ]
  ret i64* %cond-lvalue
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) i64* @"??$min@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %_Left, i64* noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat {
entry:
  %_Right.addr = alloca i64*, align 8
  %_Left.addr = alloca i64*, align 8
  store i64* %_Right, i64** %_Right.addr, align 8
  store i64* %_Left, i64** %_Left.addr, align 8
  %0 = load i64*, i64** %_Right.addr, align 8
  %1 = load i64, i64* %0, align 8
  %2 = load i64*, i64** %_Left.addr, align 8
  %3 = load i64, i64* %2, align 8
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load i64*, i64** %_Right.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load i64*, i64** %_Left.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond-lvalue = phi i64* [ %4, %cond.true ], [ %5, %cond.false ]
  ret i64* %cond-lvalue
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?max@?$numeric_limits@_J@std@@SA_JXZ"() #2 comdat align 2 {
entry:
  ret i64 9223372036854775807
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ"(%"class.std::_Compressed_pair.0"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.0"*, align 8
  store %"class.std::_Compressed_pair.0"* %this, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.0"*, %"class.std::_Compressed_pair.0"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.0"* %this1 to %"class.std::allocator.1"*
  ret %"class.std::allocator.1"* %0
}

; Function Attrs: noreturn
declare dso_local void @"?_Xlength_error@std@@YAXPEBD@Z"(i8* noundef) #7

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z"(i64 noundef %_Requested, i64 noundef %_Old, i64 noundef %_Max) #2 comdat align 2 {
entry:
  %retval = alloca i64, align 8
  %_Max.addr = alloca i64, align 8
  %_Old.addr = alloca i64, align 8
  %_Requested.addr = alloca i64, align 8
  %_Masked = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store i64 %_Max, i64* %_Max.addr, align 8
  store i64 %_Old, i64* %_Old.addr, align 8
  store i64 %_Requested, i64* %_Requested.addr, align 8
  %0 = load i64, i64* %_Requested.addr, align 8
  %or = or i64 %0, 15
  store i64 %or, i64* %_Masked, align 8
  %1 = load i64, i64* %_Masked, align 8
  %2 = load i64, i64* %_Max.addr, align 8
  %cmp = icmp ugt i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %_Max.addr, align 8
  store i64 %3, i64* %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %_Old.addr, align 8
  %5 = load i64, i64* %_Max.addr, align 8
  %6 = load i64, i64* %_Old.addr, align 8
  %div = udiv i64 %6, 2
  %sub = sub i64 %5, %div
  %cmp1 = icmp ugt i64 %4, %sub
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %7 = load i64, i64* %_Max.addr, align 8
  store i64 %7, i64* %retval, align 8
  br label %return

if.end3:                                          ; preds = %if.end
  %8 = load i64, i64* %_Old.addr, align 8
  %9 = load i64, i64* %_Old.addr, align 8
  %div4 = udiv i64 %9, 2
  %add = add i64 %8, %div4
  store i64 %add, i64* %ref.tmp, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??$max@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %_Masked, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  %10 = load i64, i64* %call, align 8
  store i64 %10, i64* %retval, align 8
  br label %return

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %11 = load i64, i64* %retval, align 8
  ret i64 %11
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z"(i64 noundef %_Bytes) #4 comdat {
entry:
  %retval = alloca i8*, align 8
  %_Bytes.addr = alloca i64, align 8
  store i64 %_Bytes, i64* %_Bytes.addr, align 8
  %0 = load i64, i64* %_Bytes.addr, align 8
  %cmp = icmp uge i64 %0, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %_Bytes.addr, align 8
  %call = call noundef i8* @"??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z"(i64 noundef %1)
  store i8* %call, i8** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %_Bytes.addr, align 8
  %cmp1 = icmp ne i64 %2, 0
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %3 = load i64, i64* %_Bytes.addr, align 8
  %call3 = call noundef i8* @"?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z"(i64 noundef %3)
  store i8* %call3, i8** %retval, align 8
  br label %return

if.end4:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %4 = load i8*, i8** %retval, align 8
  ret i8* %4
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"??$_Get_size_of_n@$00@std@@YA_K_K@Z"(i64 noundef %_Count) #2 comdat {
entry:
  %_Count.addr = alloca i64, align 8
  %_Overflow_is_possible = alloca i8, align 1
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8 0, i8* %_Overflow_is_possible, align 1
  %0 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 %0, 1
  ret i64 %mul
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z"(i64 noundef %_Bytes) #4 comdat {
entry:
  %_Bytes.addr = alloca i64, align 8
  %_Block_size = alloca i64, align 8
  %_Ptr_container = alloca i64, align 8
  %_Ptr = alloca i8*, align 8
  store i64 %_Bytes, i64* %_Bytes.addr, align 8
  %0 = load i64, i64* %_Bytes.addr, align 8
  %add = add i64 39, %0
  store i64 %add, i64* %_Block_size, align 8
  %1 = load i64, i64* %_Block_size, align 8
  %2 = load i64, i64* %_Bytes.addr, align 8
  %cmp = icmp ule i64 %1, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Throw_bad_array_new_length@std@@YAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %_Block_size, align 8
  %call = call noundef i8* @"?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z"(i64 noundef %3)
  %4 = ptrtoint i8* %call to i64
  store i64 %4, i64* %_Ptr_container, align 8
  br label %do.body

do.body:                                          ; preds = %if.end
  %5 = load i64, i64* %_Ptr_container, align 8
  %cmp1 = icmp ne i64 %5, 0
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %do.body
  br label %if.end4

if.else:                                          ; preds = %do.body
  br label %do.body3

do.body3:                                         ; preds = %if.else
  call void @_invalid_parameter_noinfo_noreturn() #17
  unreachable

do.end:                                           ; No predecessors!
  br label %if.end4

if.end4:                                          ; preds = %do.end, %if.then2
  br label %do.end5

do.end5:                                          ; preds = %if.end4
  %6 = load i64, i64* %_Ptr_container, align 8
  %add6 = add i64 %6, 39
  %and = and i64 %add6, -32
  %7 = inttoptr i64 %and to i8*
  store i8* %7, i8** %_Ptr, align 8
  %8 = load i64, i64* %_Ptr_container, align 8
  %9 = load i8*, i8** %_Ptr, align 8
  %10 = bitcast i8* %9 to i64*
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 -1
  store i64 %8, i64* %arrayidx, align 8
  %11 = load i8*, i8** %_Ptr, align 8
  ret i8* %11
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z"(i64 noundef %_Bytes) #4 comdat align 2 {
entry:
  %_Bytes.addr = alloca i64, align 8
  store i64 %_Bytes, i64* %_Bytes.addr, align 8
  %0 = load i64, i64* %_Bytes.addr, align 8
  %call = call noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef %0) #20
  ret i8* %call
}

; Function Attrs: mustprogress noinline noreturn optnone uwtable
define linkonce_odr dso_local void @"?_Throw_bad_array_new_length@std@@YAXXZ"() #13 comdat {
entry:
  %tmp = alloca %"class.std::bad_array_new_length", align 8
  %call = call noundef %"class.std::bad_array_new_length"* @"??0bad_array_new_length@std@@QEAA@XZ"(%"class.std::bad_array_new_length"* noundef nonnull align 8 dereferenceable(24) %tmp) #15
  %0 = bitcast %"class.std::bad_array_new_length"* %tmp to i8*
  call void @_CxxThrowException(i8* %0, %eh.ThrowInfo* @"_TI3?AVbad_array_new_length@std@@") #17
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bad_array_new_length"* @"??0bad_array_new_length@std@@QEAA@XZ"(%"class.std::bad_array_new_length"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_array_new_length"*, align 8
  store %"class.std::bad_array_new_length"* %this, %"class.std::bad_array_new_length"** %this.addr, align 8
  %this1 = load %"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_array_new_length"* %this1 to %"class.std::bad_alloc"*
  %call = call noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@AEAA@QEBD@Z"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @"??_C@_0BF@KINCDENJ@bad?5array?5new?5length?$AA@", i64 0, i64 0)) #15
  %1 = bitcast %"class.std::bad_array_new_length"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7bad_array_new_length@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  ret %"class.std::bad_array_new_length"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bad_array_new_length"* @"??0bad_array_new_length@std@@QEAA@AEBV01@@Z"(%"class.std::bad_array_new_length"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::bad_array_new_length"* noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.std::bad_array_new_length"*, align 8
  %this.addr = alloca %"class.std::bad_array_new_length"*, align 8
  store %"class.std::bad_array_new_length"* %0, %"class.std::bad_array_new_length"** %.addr, align 8
  store %"class.std::bad_array_new_length"* %this, %"class.std::bad_array_new_length"** %this.addr, align 8
  %this1 = load %"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"** %this.addr, align 8
  %1 = bitcast %"class.std::bad_array_new_length"* %this1 to %"class.std::bad_alloc"*
  %2 = load %"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"** %.addr, align 8
  %3 = bitcast %"class.std::bad_array_new_length"* %2 to %"class.std::bad_alloc"*
  %call = call noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@QEAA@AEBV01@@Z"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %1, %"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %3) #15
  %4 = bitcast %"class.std::bad_array_new_length"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7bad_array_new_length@std@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.std::bad_array_new_length"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1bad_array_new_length@std@@UEAA@XZ"(%"class.std::bad_array_new_length"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_array_new_length"*, align 8
  store %"class.std::bad_array_new_length"* %this, %"class.std::bad_array_new_length"** %this.addr, align 8
  %this1 = load %"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_array_new_length"* %this1 to %"class.std::bad_alloc"*
  call void @"??1bad_alloc@std@@UEAA@XZ"(%"class.std::bad_alloc"* noundef nonnull align 8 dereferenceable(24) %0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::bad_alloc"* @"??0bad_alloc@std@@AEAA@QEBD@Z"(%"class.std::bad_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this, i8* noundef %_Message) unnamed_addr #5 comdat align 2 {
entry:
  %_Message.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store i8* %_Message, i8** %_Message.addr, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  %1 = load i8*, i8** %_Message.addr, align 8
  %call = call noundef %"class.std::exception"* @"??0exception@std@@QEAA@QEBDH@Z"(%"class.std::exception"* noundef nonnull align 8 dereferenceable(24) %0, i8* noundef %1, i32 noundef 1) #15
  %2 = bitcast %"class.std::bad_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7bad_alloc@std@@6B@" to i32 (...)**), i32 (...)*** %2, align 8
  ret %"class.std::bad_alloc"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gbad_array_new_length@std@@UEAAPEAXI@Z"(%"class.std::bad_array_new_length"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.std::bad_array_new_length"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.std::bad_array_new_length"* %this, %"class.std::bad_array_new_length"** %this.addr, align 8
  %this1 = load %"class.std::bad_array_new_length"*, %"class.std::bad_array_new_length"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_array_new_length"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1bad_array_new_length@std@@UEAA@XZ"(%"class.std::bad_array_new_length"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.std::bad_array_new_length"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Voidify_iter@PEAPEAD@std@@YAPEAXPEAPEAD@Z"(i8** noundef %_It) #2 comdat {
entry:
  %_It.addr = alloca i8**, align 8
  store i8** %_It, i8*** %_It.addr, align 8
  %0 = load i8**, i8*** %_It.addr, align 8
  %1 = bitcast i8** %0 to i8*
  ret i8* %1
}

; Function Attrs: nounwind
declare dllimport void @"?make_error_code@sycl@cl@@YA?AVerror_code@std@@W4errc@12@@Z"(%"class.std::error_code"* sret(%"class.std::error_code") align 8, i32 noundef) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::error_code"* noundef %ec, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %CLErr) unnamed_addr #6 comdat align 2 {
entry:
  %CLErr.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  %agg.tmp = alloca %"class.std::shared_ptr.32", align 8
  %agg.tmp2 = alloca %"class.std::error_code", align 8
  store i32 %CLErr, i32* %CLErr.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::runtime_error"* %this1 to %"class.cl::sycl::exception"*
  %call = call noundef %"class.std::shared_ptr.32"* @"??0?$shared_ptr@Vcontext@sycl@cl@@@std@@QEAA@$$T@Z"(%"class.std::shared_ptr.32"* noundef nonnull align 8 dereferenceable(16) %agg.tmp, i8* null) #15
  %1 = load i32, i32* %CLErr.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  %3 = bitcast %"class.std::error_code"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::error_code"* %ec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %call3 = call noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@HV?$shared_ptr@Vcontext@sycl@cl@@@4@@Z"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp2, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1, %"class.std::shared_ptr.32"* noundef %agg.tmp)
  %5 = bitcast %"class.cl::sycl::runtime_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7runtime_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %5, align 8
  ret %"class.cl::sycl::runtime_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Ginvalid_parameter_error@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::invalid_parameter_error"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::invalid_parameter_error"* %this, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_parameter_error"*, %"class.cl::sycl::invalid_parameter_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1invalid_parameter_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::invalid_parameter_error"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: nounwind
declare dllimport noundef i8* @"?what@exception@sycl@cl@@UEBAPEBDXZ"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80)) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.32"* @"??0?$shared_ptr@Vcontext@sycl@cl@@@std@@QEAA@$$T@Z"(%"class.std::shared_ptr.32"* noundef nonnull returned align 8 dereferenceable(16) %this, i8* %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::shared_ptr.32"*, align 8
  store i8* %0, i8** %.addr, align 8
  store %"class.std::shared_ptr.32"* %this, %"class.std::shared_ptr.32"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.32"*, %"class.std::shared_ptr.32"** %this.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.32"* %this1 to %"class.std::_Ptr_base.33"*
  %call = call noundef %"class.std::_Ptr_base.33"* @"??0?$_Ptr_base@Vcontext@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.33"* noundef nonnull align 8 dereferenceable(16) %1) #15
  ret %"class.std::shared_ptr.32"* %this1
}

declare dllimport noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@HV?$shared_ptr@Vcontext@sycl@cl@@@4@@Z"(%"class.cl::sycl::exception"* noundef nonnull returned align 8 dereferenceable(80), %"class.std::error_code"* noundef, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32), i32 noundef, %"class.std::shared_ptr.32"* noundef) unnamed_addr #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gruntime_error@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::runtime_error"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1runtime_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::runtime_error"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ptr_base.33"* @"??0?$_Ptr_base@Vcontext@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.33"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.33"*, align 8
  store %"class.std::_Ptr_base.33"* %this, %"class.std::_Ptr_base.33"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.33"*, %"class.std::_Ptr_base.33"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.33", %"class.std::_Ptr_base.33"* %this1, i32 0, i32 0
  store %"class.cl::sycl::context"* null, %"class.cl::sycl::context"** %_Ptr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.33", %"class.std::_Ptr_base.33"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret %"class.std::_Ptr_base.33"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1runtime_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::runtime_error"* %this1 to %"class.cl::sycl::exception"*
  call void @"??1exception@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %0) #15
  ret void
}

; Function Attrs: nounwind
declare dllimport void @"??1exception@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80)) unnamed_addr #3

declare dso_local i8* @__std_type_info_name(%struct.__std_type_info_data* noundef, %struct.__type_info_node* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"?size@?$range@$00@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::range"*, align 8
  %size = alloca i64, align 8
  %i = alloca i32, align 4
  store %"class.cl::sycl::range"* %this, %"class.cl::sycl::range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %this.addr, align 8
  store i64 1, i64* %size, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = bitcast %"class.cl::sycl::range"* %this1 to %"class.cl::sycl::detail::array"*
  %2 = load i32, i32* %i, align 4
  %call = call noundef i64 @"?get@?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %1, i32 noundef %2)
  %3 = load i64, i64* %size, align 8
  %mul = mul i64 %3, %call
  store i64 %mul, i64* %size, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !19

for.end:                                          ; preds = %for.cond
  %5 = load i64, i64* %size, align 8
  ret i64 %5
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"?get@?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %this, i32 noundef %dimension) #4 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::detail::array"*, align 8
  %tmp.i = alloca %"class.cl::sycl::invalid_parameter_error", align 8
  %dimension.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::array"*, align 8
  store i32 %dimension, i32* %dimension.addr, align 4
  store %"class.cl::sycl::detail::array"* %this, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %0 = load i32, i32* %dimension.addr, align 4
  store i32 %0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::detail::array"* %this1, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %1 = load i32, i32* %dimension.addr.i, align 4
  %cmp.i = icmp sge i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %2 = load i32, i32* %dimension.addr.i, align 4
  %cmp2.i = icmp slt i32 %2, 0
  br i1 %cmp2.i, label %if.then.i, label %"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit"

if.then.i:                                        ; preds = %lor.lhs.false.i, %entry
  %call.i = call noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %tmp.i, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %tmp.i to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_parameter_error@sycl@cl@@") #17
  unreachable

"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit": ; preds = %lor.lhs.false.i
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %this1, i32 0, i32 0
  %4 = load i32, i32* %dimension.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  ret i64 %5
}

declare dllimport void @"?submit_impl@queue@sycl@cl@@AEAA?AVevent@23@V?$function@$$A6AXAEAVhandler@sycl@cl@@@Z@std@@AEBUcode_location@detail@23@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16), %"class.cl::sycl::event"* sret(%"class.cl::sycl::event") align 8, %"class.std::function.34"* noundef, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24)) #1

; Function Attrs: noinline optnone uwtable
define internal noundef %"class.std::function.34"* @"??$?0AEAV<lambda_1>@?0??main@@9@$0A@@?$function@$$A6AXAEAVhandler@sycl@cl@@@Z@std@@QEAA@AEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::function.34"* noundef nonnull returned align 8 dereferenceable(64) %this, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Func) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Func.addr = alloca %class.anon*, align 8
  %this.addr = alloca %"class.std::function.34"*, align 8
  store %class.anon* %_Func, %class.anon** %_Func.addr, align 8
  store %"class.std::function.34"* %this, %"class.std::function.34"** %this.addr, align 8
  %this1 = load %"class.std::function.34"*, %"class.std::function.34"** %this.addr, align 8
  %0 = bitcast %"class.std::function.34"* %this1 to %"class.std::_Func_class.35"*
  %call = call noundef %"class.std::_Func_class.35"* @"??0?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %0) #15
  %1 = bitcast %"class.std::function.34"* %this1 to %"class.std::_Func_class.35"*
  %2 = load %class.anon*, %class.anon** %_Func.addr, align 8
  invoke void @"??$_Reset@AEAV<lambda_1>@?0??main@@9@@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEAAXAEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %1, %class.anon* noundef nonnull align 8 dereferenceable(16) %2)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::function.34"* %this1

ehcleanup:                                        ; preds = %entry
  %3 = cleanuppad within none []
  %4 = bitcast %"class.std::function.34"* %this1 to %"class.std::_Func_class.35"*
  call void @"??1?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %4) #15 [ "funclet"(token %3) ]
  cleanupret from %3 unwind to caller
}

declare dllimport void @"?discard_or_return@queue@sycl@cl@@AEAA?AVevent@23@AEBV423@@Z"(%"class.cl::sycl::queue"* noundef nonnull align 8 dereferenceable(16), %"class.cl::sycl::event"* sret(%"class.cl::sycl::event") align 8, %"class.cl::sycl::event"* noundef nonnull align 8 dereferenceable(16)) #1

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_class.35"* @"??0?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.35"* noundef nonnull returned align 8 dereferenceable(64) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_class.35"* %this1 to %"struct.std::_Arg_types.36"*
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.35", %"class.std::_Func_class.35"* %this1, i32 0, i32 0
  call void @"?_Set@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.38"* noundef null) #15
  ret %"class.std::_Func_class.35"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Reset@AEAV<lambda_1>@?0??main@@9@@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEAAXAEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Val) #4 align 2 {
entry:
  %_Val.addr = alloca %class.anon*, align 8
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %class.anon* %_Val, %class.anon** %_Val.addr, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %0 = load %class.anon*, %class.anon** %_Val.addr, align 8
  %call = call noundef zeroext i1 @"??$_Test_callable@V<lambda_1>@?0??main@@9@@std@@YA_NAEBV<lambda_1>@?0??main@@9@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %0) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.35", %"class.std::_Func_class.35"* %this1, i32 0, i32 0
  %1 = bitcast %"union.std::_Func_class<void, cl::sycl::handler &>::_Storage"* %_Mystorage to i8*
  %2 = bitcast i8* %1 to %"class.std::_Func_impl_no_alloc"*
  %3 = load %class.anon*, %class.anon** %_Val.addr, align 8
  %call2 = call noundef %"class.std::_Func_impl_no_alloc"* @"??$?0AEAV<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@AEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %2, %class.anon* noundef nonnull align 8 dereferenceable(16) %3)
  %4 = bitcast %"class.std::_Func_impl_no_alloc"* %2 to %"class.std::_Func_base.38"*
  call void @"?_Set@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.38"* noundef %4) #15
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Func_class@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  call void @"?_Tidy@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Set@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this, %"class.std::_Func_base.38"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.std::_Func_base.38"*, align 8
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_base.38"* %_Ptr, %"class.std::_Func_base.38"** %_Ptr.addr, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %0 = load %"class.std::_Func_base.38"*, %"class.std::_Func_base.38"** %_Ptr.addr, align 8
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.35", %"class.std::_Func_class.35"* %this1, i32 0, i32 0
  %_Ptrs = bitcast %"union.std::_Func_class<void, cl::sycl::handler &>::_Storage"* %_Mystorage to [8 x %"class.std::_Func_base.38"*]*
  %arrayidx = getelementptr inbounds [8 x %"class.std::_Func_base.38"*], [8 x %"class.std::_Func_base.38"*]* %_Ptrs, i64 0, i64 7
  store %"class.std::_Func_base.38"* %0, %"class.std::_Func_base.38"** %arrayidx, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef zeroext i1 @"??$_Test_callable@V<lambda_1>@?0??main@@9@@std@@YA_NAEBV<lambda_1>@?0??main@@9@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %_Arg) #2 {
entry:
  %_Arg.addr = alloca %class.anon*, align 8
  store %class.anon* %_Arg, %class.anon** %_Arg.addr, align 8
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc"* @"??$?0AEAV<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@AEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %class.anon*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %class.anon* %_Val, %class.anon** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to %"class.std::_Func_base.38"*
  %call = call noundef %"class.std::_Func_base.38"* @"??0?$_Func_base@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.38"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %2 = load %class.anon*, %class.anon** %_Val.addr, align 8
  %3 = bitcast %class.anon* %_Callee to i8*
  %4 = bitcast %class.anon* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.std::_Func_impl_no_alloc"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_base.38"* @"??0?$_Func_base@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.38"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_base.38"*, align 8
  store %"class.std::_Func_base.38"* %this, %"class.std::_Func_base.38"** %this.addr, align 8
  %this1 = load %"class.std::_Func_base.38"*, %"class.std::_Func_base.38"** %this.addr, align 8
  ret %"class.std::_Func_base.38"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %"class.std::_Func_base.38"* @"?_Copy@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this, i8* noundef %_Where) unnamed_addr #4 align 2 {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %call = call noundef %"class.std::_Func_impl_no_alloc"* @"??$?0AEBV<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@AEBV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %1, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Callee)
  %2 = bitcast %"class.std::_Func_impl_no_alloc"* %1 to %"class.std::_Func_base.38"*
  ret %"class.std::_Func_base.38"* %2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_base.38"* @"?_Move@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this, i8* noundef %_Where) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %call = invoke noundef %"class.std::_Func_impl_no_alloc"* @"??$?0V<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@$$QEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %1, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Callee)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  %2 = bitcast %"class.std::_Func_impl_no_alloc"* %1 to %"class.std::_Func_base.38"*
  ret %"class.std::_Func_base.38"* %2

terminate:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"?_Do_call@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAXAEAVhandler@sycl@cl@@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %_Args) unnamed_addr #4 align 2 {
entry:
  %_Args.addr = alloca %"class.cl::sycl::handler"*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %"class.cl::sycl::handler"* %_Args, %"class.cl::sycl::handler"** %_Args.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %_Args.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  call void @"??$_Call@AEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@?$_Invoker_ret@X@std@@SAXAEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %_Callee, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %0)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef nonnull align 8 dereferenceable(24) %class.type_info* @"?_Target_type@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAAEBVtype_info@@XZ"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  ret %class.type_info* bitcast (%rtti.TypeDescriptor27* @"??_R0?AV<lambda_1>@?0??main@@9@@8" to %class.type_info*)
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal void @"?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEAAX_N@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this, i1 noundef zeroext %_Dealloc) unnamed_addr #2 align 2 {
entry:
  %_Dealloc.addr = alloca i8, align 1
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  %frombool = zext i1 %_Dealloc to i8
  store i8 %frombool, i8* %_Dealloc.addr, align 1
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = load i8, i8* %_Dealloc.addr, align 1
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to i8*
  call void @"??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z"(i8* noundef %1, i64 noundef 24) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef i8* @"?_Get@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@EEBAPEBXXZ"(%"class.std::_Func_impl_no_alloc"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %0 = bitcast %class.anon* %_Callee to i8*
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc"* @"??$?0AEBV<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@AEBV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %class.anon*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %class.anon* %_Val, %class.anon** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to %"class.std::_Func_base.38"*
  %call = call noundef %"class.std::_Func_base.38"* @"??0?$_Func_base@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.38"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %2 = load %class.anon*, %class.anon** %_Val.addr, align 8
  %3 = bitcast %class.anon* %_Callee to i8*
  %4 = bitcast %class.anon* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.std::_Func_impl_no_alloc"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc"* @"??$?0V<lambda_1>@?0??main@@9@$0A@@?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@QEAA@$$QEAV<lambda_1>@?0??main@@9@@Z"(%"class.std::_Func_impl_no_alloc"* noundef nonnull returned align 8 dereferenceable(24) %this, %class.anon* noundef nonnull align 8 dereferenceable(16) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %class.anon*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc"*, align 8
  store %class.anon* %_Val, %class.anon** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc"* %this, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc"*, %"class.std::_Func_impl_no_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to %"class.std::_Func_base.38"*
  %call = call noundef %"class.std::_Func_base.38"* @"??0?$_Func_base@XAEAVhandler@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.38"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@V<lambda_1>@?0??main@@9@XAEAVhandler@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc", %"class.std::_Func_impl_no_alloc"* %this1, i32 0, i32 1
  %2 = load %class.anon*, %class.anon** %_Val.addr, align 8
  %3 = bitcast %class.anon* %_Callee to i8*
  %4 = bitcast %class.anon* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret %"class.std::_Func_impl_no_alloc"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Call@AEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@?$_Invoker_ret@X@std@@SAXAEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %_Func, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %_Vals) #4 align 2 {
entry:
  %_Vals.addr = alloca %"class.cl::sycl::handler"*, align 8
  %_Func.addr = alloca %class.anon*, align 8
  store %"class.cl::sycl::handler"* %_Vals, %"class.cl::sycl::handler"** %_Vals.addr, align 8
  store %class.anon* %_Func, %class.anon** %_Func.addr, align 8
  %0 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %_Vals.addr, align 8
  %1 = load %class.anon*, %class.anon** %_Func.addr, align 8
  call void @"??$invoke@AEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@$$V@std@@YAXAEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %1, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$invoke@AEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@$$V@std@@YAXAEAV<lambda_1>@?0??main@@9@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %_Obj, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %_Arg1) #4 {
entry:
  %_Arg1.addr = alloca %"class.cl::sycl::handler"*, align 8
  %_Obj.addr = alloca %class.anon*, align 8
  store %"class.cl::sycl::handler"* %_Arg1, %"class.cl::sycl::handler"** %_Arg1.addr, align 8
  store %class.anon* %_Obj, %class.anon** %_Obj.addr, align 8
  %0 = load %class.anon*, %class.anon** %_Obj.addr, align 8
  %1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %_Arg1.addr, align 8
  call void @"??R<lambda_1>@?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %0, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??R<lambda_1>@?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z"(%class.anon* noundef nonnull align 8 dereferenceable(16) %this, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %cgh) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %cgh.addr = alloca %"class.cl::sycl::handler"*, align 8
  %this.addr = alloca %class.anon*, align 8
  %Accessor = alloca %"class.cl::sycl::accessor.110", align 8
  %agg.tmp = alloca %"struct.cl::sycl::detail::code_location", align 8
  %ref.tmp = alloca %class.anon.113, align 8
  %agg.tmp3 = alloca %"class.cl::sycl::range", align 8
  store %"class.cl::sycl::handler"* %cgh, %"class.cl::sycl::handler"** %cgh.addr, align 8
  store %class.anon* %this, %class.anon** %this.addr, align 8
  %this1 = load %class.anon*, %class.anon** %this.addr, align 8
  %Buffer = getelementptr inbounds %class.anon, %class.anon* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %Buffer, align 8
  call void @"?current@code_location@detail@sycl@cl@@SA?AU1234@PEBD0KK@Z"(%"struct.cl::sycl::detail::code_location"* sret(%"struct.cl::sycl::detail::code_location") align 8 %agg.tmp, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @"??_C@_09IENDANKA@main1?4cpp?$AA@", i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @"??_C@_0L@EMKCPDMN@operator?$CI?$CJ?$AA@", i32 0, i32 0), i32 noundef 40, i32 noundef 25) #15
  %1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %cgh.addr, align 8
  call void @"??$get_access@$0EAB@$0HNO@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@AEAVhandler@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %0, %"class.cl::sycl::accessor.110"* sret(%"class.cl::sycl::accessor.110") align 8 %Accessor, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %1, %"struct.cl::sycl::detail::code_location"* noundef %agg.tmp)
  %2 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %cgh.addr, align 8
  %Accessor2 = getelementptr inbounds %class.anon.113, %class.anon.113* %ref.tmp, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::accessor.110"* @"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor2, %"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor) #15
  %NumOfWorkItems = getelementptr inbounds %class.anon, %class.anon* %this1, i32 0, i32 1
  %3 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %NumOfWorkItems, align 8
  %4 = bitcast %"class.cl::sycl::range"* %agg.tmp3 to i8*
  %5 = bitcast %"class.cl::sycl::range"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp3, i32 0, i32 0
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %6 = bitcast [1 x i64]* %coerce.dive4 to i64*
  %7 = load i64, i64* %6, align 8
  invoke void @"??$parallel_for@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@@handler@sycl@cl@@QEAAXV?$range@$00@12@AEBV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %2, i64 %7, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  call void @"??1?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %8 = cleanuppad within none []
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %8) ]
  cleanupret from %8 unwind label %ehcleanup5

ehcleanup5:                                       ; preds = %ehcleanup
  %9 = cleanuppad within none []
  call void @"??1?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor) #15 [ "funclet"(token %9) ]
  cleanupret from %9 unwind to caller
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$get_access@$0EAB@$0HNO@@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEAA?AV?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@12@AEAVhandler@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::accessor.110"* noalias sret(%"class.cl::sycl::accessor.110") align 8 %agg.result, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %CommandGroupHandler, %"struct.cl::sycl::detail::code_location"* noundef %CodeLoc) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %CommandGroupHandler.addr = alloca %"class.cl::sycl::handler"*, align 8
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %agg.tmp = alloca %"struct.cl::sycl::detail::code_location", align 8
  %ref.tmp = alloca %"class.cl::sycl::property_list", align 8
  %0 = bitcast %"class.cl::sycl::accessor.110"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::handler"* %CommandGroupHandler, %"class.cl::sycl::handler"** %CommandGroupHandler.addr, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %1 = bitcast %"struct.cl::sycl::detail::code_location"* %agg.tmp to i8*
  %2 = bitcast %"struct.cl::sycl::detail::code_location"* %CodeLoc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %call = call noundef %"class.cl::sycl::property_list"* @"??$?0$$VX@property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp)
  %3 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %CommandGroupHandler.addr, align 8
  %call2 = invoke noundef %"class.cl::sycl::accessor.110"* @"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEAVhandler@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %agg.result, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this1, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %3, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, %"struct.cl::sycl::detail::code_location"* noundef %agg.tmp)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %4 = cleanuppad within none []
  call void @"??1property_list@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %4) ]
  cleanupret from %4 unwind to caller
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$parallel_for@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@@handler@sycl@cl@@QEAAXV?$range@$00@12@AEBV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, i64 %NumWorkItems.coerce, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #4 align 2 {
entry:
  %NumWorkItems = alloca %"class.cl::sycl::range", align 8
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %agg.tmp = alloca %class.anon.113, align 8
  %agg.tmp3 = alloca %"class.cl::sycl::range", align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %NumWorkItems, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %NumWorkItems.coerce, i64* %0, align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %1 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %agg.tmp, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %1) #15
  %2 = bitcast %"class.cl::sycl::range"* %agg.tmp3 to i8*
  %3 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp3, i32 0, i32 0
  %coerce.dive5 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive4, i32 0, i32 0
  %4 = bitcast [1 x i64]* %coerce.dive5 to i64*
  %5 = load i64, i64* %4, align 8
  call void @"??$parallel_for_lambda_impl@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@$00@handler@sycl@cl@@AEAAXV?$range@$00@12@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, i64 %5, %class.anon.113* noundef %agg.tmp)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::accessor.110"* @"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  store %"class.cl::sycl::accessor.110"* %0, %"class.cl::sycl::accessor.110"** %.addr, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %2 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::accessor.110"* %2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %1, %"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %3) #15
  %4 = bitcast %"class.cl::sycl::accessor.110"* %this1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %"class.cl::sycl::detail::accessor_common.111"*
  %7 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %8 = bitcast %"class.cl::sycl::accessor.110"* %7 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 16
  %9 = bitcast i8* %add.ptr to %"class.cl::sycl::detail::accessor_common.111"*
  %padding = getelementptr inbounds %"class.cl::sycl::accessor.110", %"class.cl::sycl::accessor.110"* %this1, i32 0, i32 1
  %10 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %padding2 = getelementptr inbounds %"class.cl::sycl::accessor.110", %"class.cl::sycl::accessor.110"* %10, i32 0, i32 1
  %11 = bitcast [16 x i8]* %padding to i8*
  %12 = bitcast [16 x i8]* %padding2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cl::sycl::accessor.110"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %class.anon.113*, align 8
  store %class.anon.113* %this, %class.anon.113** %this.addr, align 8
  %this1 = load %class.anon.113*, %class.anon.113** %this.addr, align 8
  %Accessor = getelementptr inbounds %class.anon.113, %class.anon.113* %this1, i32 0, i32 0
  call void @"??1?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  call void @"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::accessor.110"* @"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEAVhandler@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %BufferRef, %"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %CommandGroupHandler, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList, %"struct.cl::sycl::detail::code_location"* noundef %CodeLoc) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::property_list"*, align 8
  %CommandGroupHandler.addr = alloca %"class.cl::sycl::handler"*, align 8
  %BufferRef.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.3", align 8
  %ref.tmp2 = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list", align 8
  %agg.tmp = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp6 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp10 = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp11 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp16 = alloca %"class.cl::sycl::id", align 8
  %ref.tmp22 = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list", align 8
  %ref.tmp30 = alloca %"class.std::shared_ptr.3", align 8
  store %"class.cl::sycl::property_list"* %PropertyList, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  store %"class.cl::sycl::handler"* %CommandGroupHandler, %"class.cl::sycl::handler"** %CommandGroupHandler.addr, align 8
  store %"class.cl::sycl::buffer"* %BufferRef, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %IsSubBuffer = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %1, i32 0, i32 3
  %2 = load i8, i8* %IsSubBuffer, align 8
  %tobool = trunc i8 %2 to i1
  %3 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %OffsetInBytes = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %3, i32 0, i32 2
  %4 = load i64, i64* %OffsetInBytes, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  call void @"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z"(%"class.std::shared_ptr.3"* sret(%"class.std::shared_ptr.3") align 8 %ref.tmp, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %5)
  %6 = bitcast %"class.std::shared_ptr.3"* %ref.tmp to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %6) #15
  %7 = bitcast %"class.cl::sycl::detail::buffer_impl"* %call to %"class.cl::sycl::detail::SYCLMemObjI"*
  %8 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  %call3 = invoke noundef %"class.cl::sycl::ext::oneapi::accessor_property_list"* @"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %8)
          to label %invoke.cont unwind label %ehcleanup21

invoke.cont:                                      ; preds = %entry
  %call5 = invoke noundef i32 @"?getAdjustedMode@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont
  %9 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  invoke void @"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %9, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %agg.tmp6)
          to label %invoke.cont7 unwind label %ehcleanup

invoke.cont7:                                     ; preds = %invoke.cont4
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp6, i32 0, i32 0
  %coerce.dive8 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %10 = bitcast [1 x i64]* %coerce.dive8 to i64*
  %11 = load i64, i64* %10, align 8
  invoke void @"??$convertToArrayOfN@$02$00Vrange@sycl@cl@@$00@detail@sycl@cl@@YA?AV?$range@$02@12@V?$range@$00@12@@Z"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.tmp, i64 %11)
          to label %invoke.cont9 unwind label %ehcleanup

invoke.cont9:                                     ; preds = %invoke.cont7
  %12 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  invoke void @"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %12, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %agg.tmp11)
          to label %invoke.cont12 unwind label %ehcleanup

invoke.cont12:                                    ; preds = %invoke.cont9
  %coerce.dive13 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp11, i32 0, i32 0
  %coerce.dive14 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive13, i32 0, i32 0
  %13 = bitcast [1 x i64]* %coerce.dive14 to i64*
  %14 = load i64, i64* %13, align 8
  invoke void @"??$convertToArrayOfN@$02$00Vrange@sycl@cl@@$00@detail@sycl@cl@@YA?AV?$range@$02@12@V?$range@$00@12@@Z"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.tmp10, i64 %14)
          to label %invoke.cont15 unwind label %ehcleanup

invoke.cont15:                                    ; preds = %invoke.cont12
  %call18 = invoke noundef %"class.cl::sycl::id"* @"??$?0$02@?$id@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::id"* noundef nonnull align 8 dereferenceable(24) %agg.tmp16, i64 noundef 0, i64 noundef 0, i64 noundef 0)
          to label %invoke.cont17 unwind label %ehcleanup

invoke.cont17:                                    ; preds = %invoke.cont15
  %call20 = invoke noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0, %"class.cl::sycl::id"* noundef %agg.tmp16, %"class.cl::sycl::range.26"* noundef %agg.tmp10, %"class.cl::sycl::range.26"* noundef %agg.tmp, i32 noundef %call5, %"class.cl::sycl::detail::SYCLMemObjI"* noundef %7, i32 noundef 1, i32 noundef 4, i32 noundef %conv, i1 noundef zeroext %tobool)
          to label %invoke.cont19 unwind label %ehcleanup

invoke.cont19:                                    ; preds = %invoke.cont17
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2) #15
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  %15 = bitcast %"class.cl::sycl::accessor.110"* %this1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %"class.cl::sycl::detail::accessor_common.111"*
  %18 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  %call24 = invoke noundef %"class.cl::sycl::ext::oneapi::accessor_property_list"* @"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp22, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %18)
          to label %invoke.cont23 unwind label %ehcleanup35

invoke.cont23:                                    ; preds = %invoke.cont19
  %19 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %call25 = call noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %19) #15
  invoke void @"?preScreenAccessor@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call25, %"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp22)
          to label %invoke.cont26 unwind label %ehcleanup27

invoke.cont26:                                    ; preds = %invoke.cont23
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp22) #15
  %20 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %21 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %CommandGroupHandler.addr, align 8
  invoke void @"?associateWithHandler@detail@sycl@cl@@YAXAEAVhandler@23@PEAVAccessorBaseHost@123@W4target@access@23@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %21, %"class.cl::sycl::detail::AccessorBaseHost"* noundef %20, i32 noundef 2014)
          to label %invoke.cont28 unwind label %ehcleanup35

invoke.cont28:                                    ; preds = %invoke.cont26
  %22 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %22, i32 0, i32 0
  %23 = bitcast %"class.std::shared_ptr.23"* %impl to %"class.std::_Ptr_base.24"*
  %call29 = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %23) #15
  %24 = bitcast %"class.cl::sycl::detail::AccessorImplHost"* %call29 to i8*
  %25 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  invoke void @"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z"(%"class.std::shared_ptr.3"* sret(%"class.std::shared_ptr.3") align 8 %ref.tmp30, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %25)
          to label %invoke.cont31 unwind label %ehcleanup35

invoke.cont31:                                    ; preds = %invoke.cont28
  %26 = bitcast %"class.std::shared_ptr.3"* %ref.tmp30 to %"class.std::_Ptr_base.4"*
  %call32 = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %26) #15
  %27 = bitcast %"class.cl::sycl::detail::buffer_impl"* %call32 to i8*
  invoke void @"?constructorNotification@detail@sycl@cl@@YAXPEAX0W4target@access@23@W4mode@523@AEBUcode_location@123@@Z"(i8* noundef %27, i8* noundef %24, i32 noundef 2014, i32 noundef 1025, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %CodeLoc)
          to label %invoke.cont33 unwind label %ehcleanup34

invoke.cont33:                                    ; preds = %invoke.cont31
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp30) #15
  ret %"class.cl::sycl::accessor.110"* %this1

ehcleanup:                                        ; preds = %invoke.cont17, %invoke.cont15, %invoke.cont12, %invoke.cont9, %invoke.cont7, %invoke.cont4, %invoke.cont
  %28 = cleanuppad within none []
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2) #15 [ "funclet"(token %28) ]
  cleanupret from %28 unwind label %ehcleanup21

ehcleanup21:                                      ; preds = %ehcleanup, %entry
  %29 = cleanuppad within none []
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15 [ "funclet"(token %29) ]
  cleanupret from %29 unwind to caller

ehcleanup27:                                      ; preds = %invoke.cont23
  %30 = cleanuppad within none []
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp22) #15 [ "funclet"(token %30) ]
  cleanupret from %30 unwind label %ehcleanup35

ehcleanup34:                                      ; preds = %invoke.cont31
  %31 = cleanuppad within none []
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp30) #15 [ "funclet"(token %31) ]
  cleanupret from %31 unwind label %ehcleanup35

ehcleanup35:                                      ; preds = %ehcleanup34, %invoke.cont28, %invoke.cont26, %ehcleanup27, %invoke.cont19
  %32 = cleanuppad within none []
  %33 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  call void @"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %33) #15 [ "funclet"(token %32) ]
  cleanupret from %32 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z"(%"class.std::shared_ptr.3"* noalias sret(%"class.std::shared_ptr.3") align 8 %agg.result, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %SyclObject) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %SyclObject.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::buffer"* %SyclObject, %"class.cl::sycl::buffer"** %SyclObject.addr, align 8
  %1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %SyclObject.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %1, i32 0, i32 0
  %call = call noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %agg.result, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i32 @"?getAdjustedMode@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList) #4 comdat align 2 {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  %AdjustedMode = alloca i32, align 4
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %PropertyList, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  store i32 1025, i32* %AdjustedMode, align 4
  %0 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call = call noundef zeroext i1 @"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %0)
  br i1 %call, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call1 = call noundef zeroext i1 @"??$has_property@Vnoinit@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %1)
  br i1 %call1, label %if.then, label %if.end6

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %AdjustedMode, align 4
  %cmp = icmp eq i32 %2, 1025
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  store i32 1027, i32* %AdjustedMode, align 4
  br label %if.end5

if.else:                                          ; preds = %if.then
  %3 = load i32, i32* %AdjustedMode, align 4
  %cmp3 = icmp eq i32 %3, 1026
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 1028, i32* %AdjustedMode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then2
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %lor.lhs.false
  %4 = load i32, i32* %AdjustedMode, align 4
  ret i32 %4
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::ext::oneapi::accessor_property_list"* @"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %Props) unnamed_addr #6 comdat align 2 {
entry:
  %Props.addr = alloca %"class.cl::sycl::property_list"*, align 8
  %this.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  %agg.tmp = alloca %"class.std::vector.8", align 8
  %agg.tmp2 = alloca %"class.std::bitset", align 4
  store %"class.cl::sycl::property_list"* %Props, %"class.cl::sycl::property_list"** %Props.addr, align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  %1 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %Props.addr, align 8
  %2 = bitcast %"class.cl::sycl::property_list"* %1 to %"class.cl::sycl::detail::PropertyListBase"*
  %MPropsWithData = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %2, i32 0, i32 1
  %call = call noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@AEBV01@@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %agg.tmp, %"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %MPropsWithData)
  %3 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %Props.addr, align 8
  %4 = bitcast %"class.cl::sycl::property_list"* %3 to %"class.cl::sycl::detail::PropertyListBase"*
  %MDataLessProps = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %4, i32 0, i32 0
  %5 = bitcast %"class.std::bitset"* %agg.tmp2 to i8*
  %6 = bitcast %"class.std::bitset"* %MDataLessProps to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 4, i1 false)
  %coerce.dive = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %agg.tmp2, i32 0, i32 0
  %7 = bitcast [1 x i32]* %coerce.dive to i32*
  %8 = load i32, i32* %7, align 4
  %call3 = call noundef %"class.cl::sycl::detail::PropertyListBase"* @"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@5@@Z"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0, i32 %8, %"class.std::vector.8"* noundef %agg.tmp)
  ret %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$convertToArrayOfN@$02$00Vrange@sycl@cl@@$00@detail@sycl@cl@@YA?AV?$range@$02@12@V?$range@$00@12@@Z"(%"class.cl::sycl::range.26"* noalias sret(%"class.cl::sycl::range.26") align 8 %agg.result, i64 %OldObj.coerce) #4 {
entry:
  %result.ptr = alloca i8*, align 8
  %OldObj = alloca %"class.cl::sycl::range", align 8
  %CopyDims = alloca i32, align 4
  %I = alloca i32, align 4
  %I3 = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %OldObj, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %1 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %OldObj.coerce, i64* %1, align 8
  call void @"??$get@$0A@@?$InitializedVal@$02Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$02@23@XZ"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.result)
  store i32 1, i32* %CopyDims, align 4
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %2, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = bitcast %"class.cl::sycl::range"* %OldObj to %"class.cl::sycl::detail::array"*
  %4 = load i32, i32* %I, align 4
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %3, i32 noundef %4)
  %5 = load i64, i64* %call, align 8
  %6 = bitcast %"class.cl::sycl::range.26"* %agg.result to %"class.cl::sycl::detail::array.25"*
  %7 = load i32, i32* %I, align 4
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %6, i32 noundef %7)
  store i64 %5, i64* %call2, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %I, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !20

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %I3, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc8, %for.end
  %9 = load i32, i32* %I3, align 4
  %cmp5 = icmp slt i32 %9, 3
  br i1 %cmp5, label %for.body6, label %for.end10

for.body6:                                        ; preds = %for.cond4
  %10 = bitcast %"class.cl::sycl::range.26"* %agg.result to %"class.cl::sycl::detail::array.25"*
  %11 = load i32, i32* %I3, align 4
  %call7 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %11)
  store i64 1, i64* %call7, align 8
  br label %for.inc8

for.inc8:                                         ; preds = %for.body6
  %12 = load i32, i32* %I3, align 4
  %inc9 = add nsw i32 %12, 1
  store i32 %inc9, i32* %I3, align 4
  br label %for.cond4, !llvm.loop !21

for.end10:                                        ; preds = %for.cond4
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::buffer"* %this, %"class.cl::sycl::buffer"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %this.addr, align 8
  %Range = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %this1, i32 0, i32 1
  %1 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::range"* %Range to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::id"* @"??$?0$02@?$id@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::id"* noundef nonnull returned align 8 dereferenceable(24) %this, i64 noundef %dim0, i64 noundef %dim1, i64 noundef %dim2) unnamed_addr #5 comdat align 2 {
entry:
  %dim2.addr = alloca i64, align 8
  %dim1.addr = alloca i64, align 8
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::id"*, align 8
  store i64 %dim2, i64* %dim2.addr, align 8
  store i64 %dim1, i64* %dim1.addr, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::id"* %this, %"class.cl::sycl::id"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::id"*, %"class.cl::sycl::id"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::id"* %this1 to %"class.cl::sycl::detail::array.25"*
  %1 = load i64, i64* %dim2.addr, align 8
  %2 = load i64, i64* %dim1.addr, align 8
  %3 = load i64, i64* %dim0.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02@?$array@$02@detail@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %3, i64 noundef %2, i64 noundef %1)
  ret %"class.cl::sycl::id"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.cl::sycl::id"* noundef %Offset, %"class.cl::sycl::range.26"* noundef %AccessRange, %"class.cl::sycl::range.26"* noundef %MemoryRange, i32 noundef %AccessMode, %"class.cl::sycl::detail::SYCLMemObjI"* noundef %SYCLMemObject, i32 noundef %Dims, i32 noundef %ElemSize, i32 noundef %OffsetInBytes, i1 noundef zeroext %IsSubBuffer) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %IsSubBuffer.addr = alloca i8, align 1
  %OffsetInBytes.addr = alloca i32, align 4
  %ElemSize.addr = alloca i32, align 4
  %Dims.addr = alloca i32, align 4
  %SYCLMemObject.addr = alloca %"class.cl::sycl::detail::SYCLMemObjI"*, align 8
  %AccessMode.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.23", align 8
  %agg.tmp = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp3 = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp4 = alloca %"class.cl::sycl::id", align 8
  %frombool = zext i1 %IsSubBuffer to i8
  store i8 %frombool, i8* %IsSubBuffer.addr, align 1
  store i32 %OffsetInBytes, i32* %OffsetInBytes.addr, align 4
  store i32 %ElemSize, i32* %ElemSize.addr, align 4
  store i32 %Dims, i32* %Dims.addr, align 4
  store %"class.cl::sycl::detail::SYCLMemObjI"* %SYCLMemObject, %"class.cl::sycl::detail::SYCLMemObjI"** %SYCLMemObject.addr, align 8
  store i32 %AccessMode, i32* %AccessMode.addr, align 4
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %call = call noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  %call2 = invoke noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 128) #18
          to label %invoke.cont unwind label %ehcleanup11

invoke.cont:                                      ; preds = %entry
  %0 = bitcast i8* %call2 to %"class.cl::sycl::detail::AccessorImplHost"*
  %1 = load i8, i8* %IsSubBuffer.addr, align 1
  %tobool = trunc i8 %1 to i1
  %2 = load i32, i32* %OffsetInBytes.addr, align 4
  %3 = load i32, i32* %ElemSize.addr, align 4
  %4 = load i32, i32* %Dims.addr, align 4
  %5 = load %"class.cl::sycl::detail::SYCLMemObjI"*, %"class.cl::sycl::detail::SYCLMemObjI"** %SYCLMemObject.addr, align 8
  %6 = load i32, i32* %AccessMode.addr, align 4
  %7 = bitcast %"class.cl::sycl::range.26"* %agg.tmp to i8*
  %8 = bitcast %"class.cl::sycl::range.26"* %MemoryRange to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = bitcast %"class.cl::sycl::range.26"* %agg.tmp3 to i8*
  %10 = bitcast %"class.cl::sycl::range.26"* %AccessRange to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false)
  %11 = bitcast %"class.cl::sycl::id"* %agg.tmp4 to i8*
  %12 = bitcast %"class.cl::sycl::id"* %Offset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false)
  %call6 = invoke noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??0AccessorImplHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N4@Z"(%"class.cl::sycl::detail::AccessorImplHost"* noundef nonnull align 8 dereferenceable(128) %0, %"class.cl::sycl::id"* noundef %agg.tmp4, %"class.cl::sycl::range.26"* noundef %agg.tmp3, %"class.cl::sycl::range.26"* noundef %agg.tmp, i32 noundef %6, %"class.cl::sycl::detail::SYCLMemObjI"* noundef %5, i32 noundef %4, i32 noundef %3, i32 noundef %2, i1 noundef zeroext %tobool, i1 noundef zeroext false)
          to label %invoke.cont5 unwind label %ehcleanup

invoke.cont5:                                     ; preds = %invoke.cont
  %call8 = invoke noundef %"class.std::shared_ptr.23"* @"??$?0VAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp, %"class.cl::sycl::detail::AccessorImplHost"* noundef %0)
          to label %invoke.cont7 unwind label %ehcleanup11

invoke.cont7:                                     ; preds = %invoke.cont5
  %impl9 = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %call10 = call noundef nonnull align 8 dereferenceable(16) %"class.std::shared_ptr.23"* @"??4?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl9, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  call void @"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  ret %"class.cl::sycl::detail::AccessorBaseHost"* %this1

ehcleanup:                                        ; preds = %invoke.cont
  %13 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call2) #19 [ "funclet"(token %13) ]
  cleanupret from %13 unwind label %ehcleanup11

ehcleanup11:                                      ; preds = %invoke.cont5, %ehcleanup, %entry
  %14 = cleanuppad within none []
  call void @"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15 [ "funclet"(token %14) ]
  cleanupret from %14 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  call void @"??1PropertyListBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?preScreenAccessor@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %elemInBuffer, %"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList) #4 comdat align 2 {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  %elemInBuffer.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %tmp = alloca %"class.cl::sycl::invalid_object_error", align 8
  %tmp4 = alloca %"class.cl::sycl::invalid_object_error", align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %PropertyList, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  store i64 %elemInBuffer, i64* %elemInBuffer.addr, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %0 = load i64, i64* %elemInBuffer.addr, align 8
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %tmp, i8* noundef getelementptr inbounds ([99 x i8], [99 x i8]* @"??_C@_0GD@NPJKHGHF@SYCL?5buffer?5size?5is?5zero?4?5To?5cre@", i64 0, i64 0), i32 noundef -30)
  %1 = bitcast %"class.cl::sycl::invalid_object_error"* %tmp to i8*
  call void @_CxxThrowException(i8* %1, %eh.ThrowInfo* @"_TI4?AVinvalid_object_error@sycl@cl@@") #17
  unreachable

if.end:                                           ; preds = %entry
  %2 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call2 = call noundef zeroext i1 @"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %2)
  br i1 %call2, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  br i1 false, label %if.then3, label %if.end6

if.then3:                                         ; preds = %land.lhs.true
  %call5 = call noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %tmp4, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @"??_C@_0DE@JHMCFHEP@accessor?5would?5cannot?5be?5both?5re@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_object_error"* %tmp4 to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_object_error@sycl@cl@@") #17
  unreachable

if.end6:                                          ; preds = %land.lhs.true, %if.end
  ret void
}

declare dllimport void @"?associateWithHandler@detail@sycl@cl@@YAXAEAVhandler@23@PEAVAccessorBaseHost@123@W4target@access@23@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552), %"class.cl::sycl::detail::AccessorBaseHost"* noundef, i32 noundef) #1

declare dllimport void @"?constructorNotification@detail@sycl@cl@@YAXPEAX0W4target@access@23@W4mode@523@AEBUcode_location@123@@Z"(i8* noundef, i8* noundef, i32 noundef, i32 noundef, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24)) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::AccessorImplHost"* @"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  ret %"class.cl::sycl::detail::AccessorImplHost"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.3"* @"??0?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.3"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %_Other) unnamed_addr #5 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.3"*, align 8
  store %"class.std::shared_ptr.3"* %_Other, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  store %"class.std::shared_ptr.3"* %this, %"class.std::shared_ptr.3"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.std::_Ptr_base.4"* @"??0?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = bitcast %"class.std::shared_ptr.3"* %this1 to %"class.std::_Ptr_base.4"*
  %2 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  call void @"??$_Copy_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %1, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %2) #15
  ret %"class.std::shared_ptr.3"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Copy_construct_from@Vbuffer_impl@detail@sycl@cl@@@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %_Other) #2 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.3"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::shared_ptr.3"* %_Other, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.3"* %0 to %"class.std::_Ptr_base.4"*
  call void @"?_Incref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %1) #15
  %2 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.3"* %2 to %"class.std::_Ptr_base.4"*
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %3, i32 0, i32 0
  %4 = load %"class.cl::sycl::detail::buffer_impl"*, %"class.cl::sycl::detail::buffer_impl"** %_Ptr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::buffer_impl"* %4, %"class.cl::sycl::detail::buffer_impl"** %_Ptr2, align 8
  %5 = load %"class.std::shared_ptr.3"*, %"class.std::shared_ptr.3"** %_Other.addr, align 8
  %6 = bitcast %"class.std::shared_ptr.3"* %5 to %"class.std::_Ptr_base.4"*
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %6, i32 0, i32 1
  %7 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %7, %"class.std::_Ref_count_base"** %_Rep3, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Incref@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.4"*, align 8
  store %"class.std::_Ptr_base.4"* %this, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.4"*, %"class.std::_Ptr_base.4"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.4", %"class.std::_Ptr_base.4"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Incref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Incref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count_base"*, align 8
  store %"class.std::_Ref_count_base"* %this, %"class.std::_Ref_count_base"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %this.addr, align 8
  %_Uses = getelementptr inbounds %"class.std::_Ref_count_base", %"class.std::_Ref_count_base"* %this1, i32 0, i32 1
  %0 = atomicrmw add i32* %_Uses, i32 1 seq_cst, align 4
  %1 = add i32 %0, 1
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  %call = call noundef zeroext i1 @"??$has_property_helper@Vno_init@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0)
  ret i1 %call
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??$has_property@Vnoinit@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::ext::oneapi::accessor_property_list"* %this1 to %"class.cl::sycl::detail::PropertyListBase"*
  %call = call noundef zeroext i1 @"??$has_property_helper@Vnoinit@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %0)
  ret i1 %call
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??$has_property_helper@Vno_init@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  %PropKind = alloca i32, align 4
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  store i32 4, i32* %PropKind, align 4
  %MDataLessProps = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 0
  %call = call noundef zeroext i1 @"??A?$bitset@$0CA@@std@@QEBA_N_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %MDataLessProps, i64 noundef 4)
  ret i1 %call
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??A?$bitset@$0CA@@std@@QEBA_N_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %this, i64 noundef %_Pos) #4 comdat align 2 {
entry:
  %_Pos.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::bitset"*, align 8
  store i64 %_Pos, i64* %_Pos.addr, align 8
  store %"class.std::bitset"* %this, %"class.std::bitset"** %this.addr, align 8
  %this1 = load %"class.std::bitset"*, %"class.std::bitset"** %this.addr, align 8
  %0 = load i64, i64* %_Pos.addr, align 8
  %call = call noundef zeroext i1 @"?_Subscript@?$bitset@$0CA@@std@@QEBA_N_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %this1, i64 noundef %0)
  ret i1 %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Subscript@?$bitset@$0CA@@std@@QEBA_N_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %this, i64 noundef %_Pos) #2 comdat align 2 {
entry:
  %_Pos.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::bitset"*, align 8
  store i64 %_Pos, i64* %_Pos.addr, align 8
  store %"class.std::bitset"* %this, %"class.std::bitset"** %this.addr, align 8
  %this1 = load %"class.std::bitset"*, %"class.std::bitset"** %this.addr, align 8
  %_Array = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %this1, i32 0, i32 0
  %0 = load i64, i64* %_Pos.addr, align 8
  %div = udiv i64 %0, 32
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %_Array, i64 0, i64 %div
  %1 = load i32, i32* %arrayidx, align 4
  %2 = load i64, i64* %_Pos.addr, align 8
  %rem = urem i64 %2, 32
  %sh_prom = trunc i64 %rem to i32
  %shl = shl i32 1, %sh_prom
  %and = and i32 %1, %shl
  %cmp = icmp ne i32 %and, 0
  ret i1 %cmp
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??$has_property_helper@Vnoinit@property@sycl@cl@@@PropertyListBase@detail@sycl@cl@@IEBA_NXZ"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull align 8 dereferenceable(32) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  %PropKind = alloca i32, align 4
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  store i32 4, i32* %PropKind, align 4
  %MDataLessProps = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 0
  %call = call noundef zeroext i1 @"??A?$bitset@$0CA@@std@@QEBA_N_K@Z"(%"class.std::bitset"* noundef nonnull align 4 dereferenceable(4) %MDataLessProps, i64 noundef 4)
  ret i1 %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@AEBV01@@Z"(%"class.std::vector.8"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %_Right) unnamed_addr #6 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::vector.8"*, align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %ref.tmp = alloca %"class.std::allocator.10", align 1
  %agg.tmp = alloca %"struct.std::_One_then_variadic_args_t", align 1
  %_Right_data = alloca %"class.std::_Vector_val.12"*, align 8
  %_Count = alloca i64, align 8
  store %"class.std::vector.8"* %_Right, %"class.std::vector.8"** %_Right.addr, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %0 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %0) #15
  call void @"?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@AEBV32@@Z"(%"class.std::allocator.10"* sret(%"class.std::allocator.10") align 1 %ref.tmp, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %call)
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %1 = load i8, i8* %coerce.dive, align 1
  %call2 = call noundef %"class.std::_Compressed_pair.9"* @"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %_Mypair, i8 %1, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %ref.tmp) #15
  %2 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %_Mypair3 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %2, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair3, i32 0, i32 0
  store %"class.std::_Vector_val.12"* %_Myval2, %"class.std::_Vector_val.12"** %_Right_data, align 8
  %3 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_Right_data, align 8
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %3, i32 0, i32 1
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Mylast, align 8
  %5 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_Right_data, align 8
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %5, i32 0, i32 0
  %6 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Myfirst, align 8
  %sub.ptr.lhs.cast = ptrtoint %"class.std::shared_ptr.13"* %4 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::shared_ptr.13"* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  store i64 %sub.ptr.div, i64* %_Count, align 8
  %7 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_Right_data, align 8
  %_Mylast4 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %7, i32 0, i32 1
  %8 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_Right_data, align 8
  %_Myfirst5 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %8, i32 0, i32 0
  %9 = load i64, i64* %_Count, align 8
  call void @"??$_Construct_n@AEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEBQEAV12@@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_KAEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@1@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %9, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Myfirst5, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Mylast4)
  ret %"class.std::vector.8"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::PropertyListBase"* @"??0PropertyListBase@detail@sycl@cl@@IEAA@V?$bitset@$0CA@@std@@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@5@@Z"(%"class.cl::sycl::detail::PropertyListBase"* noundef nonnull returned align 8 dereferenceable(32) %this, i32 %DataLessProps.coerce, %"class.std::vector.8"* noundef %PropsWithData) unnamed_addr #5 comdat align 2 {
entry:
  %DataLessProps = alloca %"class.std::bitset", align 4
  %this.addr = alloca %"class.cl::sycl::detail::PropertyListBase"*, align 8
  %coerce.dive = getelementptr inbounds %"class.std::bitset", %"class.std::bitset"* %DataLessProps, i32 0, i32 0
  %0 = bitcast [1 x i32]* %coerce.dive to i32*
  store i32 %DataLessProps.coerce, i32* %0, align 4
  store %"class.cl::sycl::detail::PropertyListBase"* %this, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::PropertyListBase"*, %"class.cl::sycl::detail::PropertyListBase"** %this.addr, align 8
  %MDataLessProps = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 0
  %1 = bitcast %"class.std::bitset"* %MDataLessProps to i8*
  %2 = bitcast %"class.std::bitset"* %DataLessProps to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 4 %2, i64 4, i1 false)
  %MPropsWithData = getelementptr inbounds %"class.cl::sycl::detail::PropertyListBase", %"class.cl::sycl::detail::PropertyListBase"* %this1, i32 0, i32 1
  %call = call noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@$$QEAV01@@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %MPropsWithData, %"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %PropsWithData) #15
  call void @"??1?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %PropsWithData) #15
  ret %"class.cl::sycl::detail::PropertyListBase"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA?AV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@AEBV32@@Z"(%"class.std::allocator.10"* noalias sret(%"class.std::allocator.10") align 1 %agg.result, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Al) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %_Al.addr = alloca %"class.std::allocator.10"*, align 8
  %0 = bitcast %"class.std::allocator.10"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::allocator.10"* %_Al, %"class.std::allocator.10"** %_Al.addr, align 8
  %1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %_Mypair) #15
  ret %"class.std::allocator.10"* %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.9"* @"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull returned align 8 dereferenceable(24) %this, i8 %.coerce, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Val1) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_One_then_variadic_args_t", align 1
  %_Val1.addr = alloca %"class.std::allocator.10"*, align 8
  %this.addr = alloca %"class.std::_Compressed_pair.9"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.std::allocator.10"* %_Val1, %"class.std::allocator.10"** %_Val1.addr, align 8
  store %"class.std::_Compressed_pair.9"* %this, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.9"*, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.9"* %this1 to %"class.std::allocator.10"*
  %2 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Val1.addr, align 8
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %this1, i32 0, i32 0
  %call = call noundef %"class.std::_Vector_val.12"* @"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Vector_val.12"* noundef nonnull align 8 dereferenceable(24) %_Myval2) #15
  ret %"class.std::_Compressed_pair.9"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$_Construct_n@AEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEBQEAV12@@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_KAEBQEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@1@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %_Count, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val1, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Val.addr = alloca %"class.std::shared_ptr.13"**, align 8
  %_Val.addr2 = alloca %"class.std::shared_ptr.13"**, align 8
  %_Count.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %_Al = alloca %"class.std::allocator.10"*, align 8
  %_Alproxy = alloca %"struct.std::_Fake_allocator"*, align 8
  %_My_data = alloca %"class.std::_Vector_val.12"*, align 8
  %_Proxy = alloca %"struct.std::_Fake_proxy_ptr_impl", align 1
  %_Guard = alloca %"struct.std::_Tidy_guard", align 8
  store %"class.std::shared_ptr.13"** %_Val, %"class.std::shared_ptr.13"*** %_Val.addr, align 8
  store %"class.std::shared_ptr.13"** %_Val1, %"class.std::shared_ptr.13"*** %_Val.addr2, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this3) #15
  store %"class.std::allocator.10"* %call, %"class.std::allocator.10"** %_Al, align 8
  store %"struct.std::_Fake_allocator"* @"?_Fake_alloc@std@@3U_Fake_allocator@1@B", %"struct.std::_Fake_allocator"** %_Alproxy, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this3, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val.12"* %_Myval2, %"class.std::_Vector_val.12"** %_My_data, align 8
  %0 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %1 = bitcast %"class.std::_Vector_val.12"* %0 to %"struct.std::_Container_base0"*
  %call4 = call noundef %"struct.std::_Fake_proxy_ptr_impl"* @"??0_Fake_proxy_ptr_impl@std@@QEAA@AEBU_Fake_allocator@1@AEBU_Container_base0@1@@Z"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %_Proxy, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) @"?_Fake_alloc@std@@3U_Fake_allocator@1@B", %"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %1) #15
  %2 = load i64, i64* %_Count.addr, align 8
  %cmp = icmp ne i64 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %_Count.addr, align 8
  call void @"?_Buy_nonzero@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this3, i64 noundef %3)
  %_Target = getelementptr inbounds %"struct.std::_Tidy_guard", %"struct.std::_Tidy_guard"* %_Guard, i32 0, i32 0
  store %"class.std::vector.8"* %this3, %"class.std::vector.8"** %_Target, align 8
  %4 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al, align 8
  %5 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %5, i32 0, i32 0
  %6 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Myfirst, align 8
  %7 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val.addr, align 8
  %8 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %7, align 8
  %9 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val.addr2, align 8
  %10 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %9, align 8
  %call5 = invoke noundef %"class.std::shared_ptr.13"* @"??$_Uninitialized_copy@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@PEAV12@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@00AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %10, %"class.std::shared_ptr.13"* noundef %8, %"class.std::shared_ptr.13"* noundef %6, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %4)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %if.then
  %11 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %11, i32 0, i32 1
  store %"class.std::shared_ptr.13"* %call5, %"class.std::shared_ptr.13"** %_Mylast, align 8
  %_Target6 = getelementptr inbounds %"struct.std::_Tidy_guard", %"struct.std::_Tidy_guard"* %_Guard, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %_Target6, align 8
  call void @"??1?$_Tidy_guard@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@@std@@QEAA@XZ"(%"struct.std::_Tidy_guard"* noundef nonnull align 8 dereferenceable(8) %_Guard) #15
  br label %if.end

ehcleanup:                                        ; preds = %if.then
  %12 = cleanuppad within none []
  call void @"??1?$_Tidy_guard@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@@std@@QEAA@XZ"(%"struct.std::_Tidy_guard"* noundef nonnull align 8 dereferenceable(8) %_Guard) #15 [ "funclet"(token %12) ]
  cleanupret from %12 unwind to caller

if.end:                                           ; preds = %invoke.cont, %entry
  call void @"?_Release@_Fake_proxy_ptr_impl@std@@QEAAXXZ"(%"struct.std::_Fake_proxy_ptr_impl"* noundef nonnull align 1 dereferenceable(1) %_Proxy) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Get_first@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.9"*, align 8
  store %"class.std::_Compressed_pair.9"* %this, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.9"*, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.9"* %this1 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %0
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?_Buy_nonzero@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %_Newcapacity) #4 comdat align 2 {
entry:
  %_Newcapacity.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store i64 %_Newcapacity, i64* %_Newcapacity.addr, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = load i64, i64* %_Newcapacity.addr, align 8
  %call = call noundef i64 @"?max_size@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEBA_KXZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Xlength@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@CAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %_Newcapacity.addr, align 8
  call void @"?_Buy_raw@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"??$_Uninitialized_copy@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@PEAV12@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@00AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %_First, %"class.std::shared_ptr.13"* noundef %_Last, %"class.std::shared_ptr.13"* noundef %_Dest, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Al) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Al.addr = alloca %"class.std::allocator.10"*, align 8
  %_Dest.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_Last.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_First.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_UFirst = alloca %"class.std::shared_ptr.13"*, align 8
  %_ULast = alloca %"class.std::shared_ptr.13"*, align 8
  %_Can_memmove = alloca i8, align 1
  %_Backout = alloca %"class.std::_Uninitialized_backout_al", align 8
  store %"class.std::allocator.10"* %_Al, %"class.std::allocator.10"** %_Al.addr, align 8
  store %"class.std::shared_ptr.13"* %_Dest, %"class.std::shared_ptr.13"** %_Dest.addr, align 8
  store %"class.std::shared_ptr.13"* %_Last, %"class.std::shared_ptr.13"** %_Last.addr, align 8
  store %"class.std::shared_ptr.13"* %_First, %"class.std::shared_ptr.13"** %_First.addr, align 8
  %call = call noundef %"class.std::shared_ptr.13"* @"??$_Get_unwrapped@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YA?A?<decltype-auto>@@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_First.addr) #15
  store %"class.std::shared_ptr.13"* %call, %"class.std::shared_ptr.13"** %_UFirst, align 8
  %call1 = call noundef %"class.std::shared_ptr.13"* @"??$_Get_unwrapped@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YA?A?<decltype-auto>@@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Last.addr) #15
  store %"class.std::shared_ptr.13"* %call1, %"class.std::shared_ptr.13"** %_ULast, align 8
  store i8 0, i8* %_Can_memmove, align 1
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Dest.addr, align 8
  %1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al.addr, align 8
  %call2 = call noundef %"class.std::_Uninitialized_backout_al"* @"??0?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %_Backout, %"class.std::shared_ptr.13"* noundef %0, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %1)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_UFirst, align 8
  %3 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_ULast, align 8
  %cmp = icmp ne %"class.std::shared_ptr.13"* %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_UFirst, align 8
  invoke void @"??$_Emplace_back@AEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAXAEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %_Backout, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %4)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %5 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_UFirst, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::shared_ptr.13", %"class.std::shared_ptr.13"* %5, i32 1
  store %"class.std::shared_ptr.13"* %incdec.ptr, %"class.std::shared_ptr.13"** %_UFirst, align 8
  br label %for.cond, !llvm.loop !22

for.end:                                          ; preds = %for.cond
  %call4 = invoke noundef %"class.std::shared_ptr.13"* @"?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@XZ"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %_Backout)
          to label %invoke.cont3 unwind label %ehcleanup

invoke.cont3:                                     ; preds = %for.end
  call void @"??1?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %_Backout) #15
  ret %"class.std::shared_ptr.13"* %call4

ehcleanup:                                        ; preds = %for.end, %for.body
  %6 = cleanuppad within none []
  call void @"??1?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %_Backout) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Tidy_guard@V?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@@std@@QEAA@XZ"(%"struct.std::_Tidy_guard"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Tidy_guard"*, align 8
  store %"struct.std::_Tidy_guard"* %this, %"struct.std::_Tidy_guard"** %this.addr, align 8
  %this1 = load %"struct.std::_Tidy_guard"*, %"struct.std::_Tidy_guard"** %this.addr, align 8
  %_Target = getelementptr inbounds %"struct.std::_Tidy_guard", %"struct.std::_Tidy_guard"* %this1, i32 0, i32 0
  %0 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Target, align 8
  %tobool = icmp ne %"class.std::vector.8"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Target2 = getelementptr inbounds %"struct.std::_Tidy_guard", %"struct.std::_Tidy_guard"* %this1, i32 0, i32 0
  %1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Target2, align 8
  call void @"?_Tidy@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAXXZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?max_size@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEBA_KXZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %ref.tmp = alloca i64, align 8
  %ref.tmp3 = alloca i64, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %call2 = call noundef i64 @"?max_size@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %call) #15
  store i64 %call2, i64* %ref.tmp, align 8
  %call4 = call noundef i64 @"?max@?$numeric_limits@_J@std@@SA_JXZ"() #15
  store i64 %call4, i64* %ref.tmp3, align 8
  %call5 = call noundef nonnull align 8 dereferenceable(8) i64* @"??$min@_K@std@@YAAEB_KAEB_K0@Z"(i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp3, i64* noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  %0 = load i64, i64* %call5, align 8
  ret i64 %0
}

; Function Attrs: mustprogress noinline noreturn optnone uwtable
define linkonce_odr dso_local void @"?_Xlength@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@CAXXZ"() #13 comdat align 2 {
entry:
  call void @"?_Xlength_error@std@@YAXPEBD@Z"(i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @"??_C@_0BA@FOIKENOD@vector?5too?5long?$AA@", i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?_Buy_raw@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAX_K@Z"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %_Newcapacity) #4 comdat align 2 {
entry:
  %_Newcapacity.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %_My_data = alloca %"class.std::_Vector_val.12"*, align 8
  %_Myfirst = alloca %"class.std::shared_ptr.13"**, align 8
  %_Mylast = alloca %"class.std::shared_ptr.13"**, align 8
  %_Myend = alloca %"class.std::shared_ptr.13"**, align 8
  %_Newvec = alloca %"class.std::shared_ptr.13"*, align 8
  store i64 %_Newcapacity, i64* %_Newcapacity.addr, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val.12"* %_Myval2, %"class.std::_Vector_val.12"** %_My_data, align 8
  %0 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Myfirst2 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %0, i32 0, i32 0
  store %"class.std::shared_ptr.13"** %_Myfirst2, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  %1 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Mylast3 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %1, i32 0, i32 1
  store %"class.std::shared_ptr.13"** %_Mylast3, %"class.std::shared_ptr.13"*** %_Mylast, align 8
  %2 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %_My_data, align 8
  %_Myend4 = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %2, i32 0, i32 2
  store %"class.std::shared_ptr.13"** %_Myend4, %"class.std::shared_ptr.13"*** %_Myend, align 8
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %3 = load i64, i64* %_Newcapacity.addr, align 8
  %call5 = call noundef %"class.std::shared_ptr.13"* @"?allocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %call, i64 noundef %3)
  store %"class.std::shared_ptr.13"* %call5, %"class.std::shared_ptr.13"** %_Newvec, align 8
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Newvec, align 8
  %5 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myfirst, align 8
  store %"class.std::shared_ptr.13"* %4, %"class.std::shared_ptr.13"** %5, align 8
  %6 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Newvec, align 8
  %7 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Mylast, align 8
  store %"class.std::shared_ptr.13"* %6, %"class.std::shared_ptr.13"** %7, align 8
  %8 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Newvec, align 8
  %9 = load i64, i64* %_Newcapacity.addr, align 8
  %add.ptr = getelementptr inbounds %"class.std::shared_ptr.13", %"class.std::shared_ptr.13"* %8, i64 %9
  %10 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Myend, align 8
  store %"class.std::shared_ptr.13"* %add.ptr, %"class.std::shared_ptr.13"** %10, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i64 @"?max_size@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %0) #2 comdat align 2 {
entry:
  %.addr = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %.addr, align 8
  ret i64 1152921504606846975
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"?allocate@?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@_K@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %_Count) #4 comdat align 2 {
entry:
  %_Count.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::allocator.10"*, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store %"class.std::allocator.10"* %this, %"class.std::allocator.10"** %this.addr, align 8
  %this1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %call = call noundef i64 @"??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z"(i64 noundef %0)
  %call2 = call noundef i8* @"??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z"(i64 noundef %call)
  %1 = bitcast i8* %call2 to %"class.std::shared_ptr.13"*
  ret %"class.std::shared_ptr.13"* %1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z"(i64 noundef %_Count) #4 comdat {
entry:
  %_Count.addr = alloca i64, align 8
  %_Overflow_is_possible = alloca i8, align 1
  %_Max_possible = alloca i64, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8 1, i8* %_Overflow_is_possible, align 1
  store i64 1152921504606846975, i64* %_Max_possible, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %cmp = icmp ugt i64 %0, 1152921504606846975
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Throw_bad_array_new_length@std@@YAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %_Count.addr, align 8
  %mul = mul i64 %1, 16
  ret i64 %mul
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"??$_Get_unwrapped@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YA?A?<decltype-auto>@@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_It) #2 comdat {
entry:
  %_It.addr = alloca %"class.std::shared_ptr.13"**, align 8
  store %"class.std::shared_ptr.13"** %_It, %"class.std::shared_ptr.13"*** %_It.addr, align 8
  %0 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_It.addr, align 8
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %0, align 8
  %add.ptr = getelementptr inbounds %"class.std::shared_ptr.13", %"class.std::shared_ptr.13"* %1, i64 0
  ret %"class.std::shared_ptr.13"* %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Uninitialized_backout_al"* @"??0?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@@Z"(%"class.std::_Uninitialized_backout_al"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::shared_ptr.13"* noundef %_Dest, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Al_) unnamed_addr #5 comdat align 2 {
entry:
  %_Al_.addr = alloca %"class.std::allocator.10"*, align 8
  %_Dest.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::_Uninitialized_backout_al"*, align 8
  store %"class.std::allocator.10"* %_Al_, %"class.std::allocator.10"** %_Al_.addr, align 8
  store %"class.std::shared_ptr.13"* %_Dest, %"class.std::shared_ptr.13"** %_Dest.addr, align 8
  store %"class.std::_Uninitialized_backout_al"* %this, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %this1 = load %"class.std::_Uninitialized_backout_al"*, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %_First = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 0
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Dest.addr, align 8
  store %"class.std::shared_ptr.13"* %0, %"class.std::shared_ptr.13"** %_First, align 8
  %_Last = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Dest.addr, align 8
  store %"class.std::shared_ptr.13"* %1, %"class.std::shared_ptr.13"** %_Last, align 8
  %_Al = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 2
  %2 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al_.addr, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %_Al, align 8
  ret %"class.std::_Uninitialized_backout_al"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$_Emplace_back@AEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAXAEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %this, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %_Vals) #4 comdat align 2 {
entry:
  %_Vals.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::_Uninitialized_backout_al"*, align 8
  store %"class.std::shared_ptr.13"* %_Vals, %"class.std::shared_ptr.13"** %_Vals.addr, align 8
  store %"class.std::_Uninitialized_backout_al"* %this, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %this1 = load %"class.std::_Uninitialized_backout_al"*, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Vals.addr, align 8
  %_Last = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last, align 8
  %call = call noundef %"class.std::shared_ptr.13"* @"??$_Unfancy@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@PEAV10@@Z"(%"class.std::shared_ptr.13"* noundef %1) #15
  %_Al = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 2
  %2 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al, align 8
  call void @"??$construct@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEAV12@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV31@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %2, %"class.std::shared_ptr.13"* noundef %call, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %0)
  %_Last2 = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %3 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last2, align 8
  %incdec.ptr = getelementptr inbounds %"class.std::shared_ptr.13", %"class.std::shared_ptr.13"* %3, i32 1
  store %"class.std::shared_ptr.13"* %incdec.ptr, %"class.std::shared_ptr.13"** %_Last2, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@2@XZ"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Uninitialized_backout_al"*, align 8
  store %"class.std::_Uninitialized_backout_al"* %this, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %this1 = load %"class.std::_Uninitialized_backout_al"*, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %_Last = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last, align 8
  %_First = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 0
  store %"class.std::shared_ptr.13"* %0, %"class.std::shared_ptr.13"** %_First, align 8
  %_Last2 = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last2, align 8
  ret %"class.std::shared_ptr.13"* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Uninitialized_backout_al@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@XZ"(%"class.std::_Uninitialized_backout_al"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Uninitialized_backout_al"*, align 8
  store %"class.std::_Uninitialized_backout_al"* %this, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %this1 = load %"class.std::_Uninitialized_backout_al"*, %"class.std::_Uninitialized_backout_al"** %this.addr, align 8
  %_Al = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 2
  %0 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Al, align 8
  %_Last = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 1
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last, align 8
  %_First = getelementptr inbounds %"class.std::_Uninitialized_backout_al", %"class.std::_Uninitialized_backout_al"* %this1, i32 0, i32 0
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_First, align 8
  call void @"??$_Destroy_range@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@YAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@QEAV10@AEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %2, %"class.std::shared_ptr.13"* noundef %1, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$construct@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@AEAV12@@?$_Default_allocator_traits@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@QEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@AEAV31@@Z"(%"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %0, %"class.std::shared_ptr.13"* noundef %_Ptr, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %_Args) #2 comdat align 2 {
entry:
  %_Args.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_Ptr.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %.addr = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::shared_ptr.13"* %_Args, %"class.std::shared_ptr.13"** %_Args.addr, align 8
  store %"class.std::shared_ptr.13"* %_Ptr, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %.addr, align 8
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Ptr.addr, align 8
  %call = call noundef i8* @"??$_Voidify_iter@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %1) #15
  %2 = bitcast i8* %call to %"class.std::shared_ptr.13"*
  %3 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Args.addr, align 8
  %call1 = call noundef %"class.std::shared_ptr.13"* @"??0?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %2, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %3) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??$_Voidify_iter@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@YAPEAXPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@@Z"(%"class.std::shared_ptr.13"* noundef %_It) #2 comdat {
entry:
  %_It.addr = alloca %"class.std::shared_ptr.13"*, align 8
  store %"class.std::shared_ptr.13"* %_It, %"class.std::shared_ptr.13"** %_It.addr, align 8
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_It.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.13"* %0 to i8*
  ret i8* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"??0?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.13"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %_Other) unnamed_addr #5 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.13"*, align 8
  store %"class.std::shared_ptr.13"* %_Other, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  store %"class.std::shared_ptr.13"* %this, %"class.std::shared_ptr.13"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.13"* %this1 to %"class.std::_Ptr_base.14"*
  %call = call noundef %"class.std::_Ptr_base.14"* @"??0?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = bitcast %"class.std::shared_ptr.13"* %this1 to %"class.std::_Ptr_base.14"*
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  call void @"??$_Copy_construct_from@VPropertyWithDataBase@detail@sycl@cl@@@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %1, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %2) #15
  ret %"class.std::shared_ptr.13"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ptr_base.14"* @"??0?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.14"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.14"*, align 8
  store %"class.std::_Ptr_base.14"* %this, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.14"*, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::PropertyWithDataBase"* null, %"class.cl::sycl::detail::PropertyWithDataBase"** %_Ptr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret %"class.std::_Ptr_base.14"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Copy_construct_from@VPropertyWithDataBase@detail@sycl@cl@@@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.13"* noundef nonnull align 8 dereferenceable(16) %_Other) #2 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.14"*, align 8
  store %"class.std::shared_ptr.13"* %_Other, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  store %"class.std::_Ptr_base.14"* %this, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.14"*, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.13"* %0 to %"class.std::_Ptr_base.14"*
  call void @"?_Incref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %1) #15
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.13"* %2 to %"class.std::_Ptr_base.14"*
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %3, i32 0, i32 0
  %4 = load %"class.cl::sycl::detail::PropertyWithDataBase"*, %"class.cl::sycl::detail::PropertyWithDataBase"** %_Ptr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::PropertyWithDataBase"* %4, %"class.cl::sycl::detail::PropertyWithDataBase"** %_Ptr2, align 8
  %5 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Other.addr, align 8
  %6 = bitcast %"class.std::shared_ptr.13"* %5 to %"class.std::_Ptr_base.14"*
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %6, i32 0, i32 1
  %7 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %7, %"class.std::_Ref_count_base"** %_Rep3, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Incref@?$_Ptr_base@VPropertyWithDataBase@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.14"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.14"*, align 8
  store %"class.std::_Ptr_base.14"* %this, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.14"*, %"class.std::_Ptr_base.14"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.14", %"class.std::_Ptr_base.14"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Incref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::vector.8"* @"??0?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@QEAA@$$QEAV01@@Z"(%"class.std::vector.8"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %_Right) unnamed_addr #5 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::vector.8"*, align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.13"*, align 8
  %ref.tmp2 = alloca i8*, align 8
  %ref.tmp4 = alloca %"class.std::shared_ptr.13"*, align 8
  %ref.tmp5 = alloca i8*, align 8
  %ref.tmp9 = alloca %"class.std::shared_ptr.13"*, align 8
  %ref.tmp10 = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::_One_then_variadic_args_t", align 1
  store %"class.std::vector.8"* %_Right, %"class.std::vector.8"** %_Right.addr, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  store i8* null, i8** %ref.tmp2, align 8
  %0 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %_Mypair3 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %0, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair3, i32 0, i32 0
  %_Myend = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %_Myval2, i32 0, i32 2
  %call = call noundef %"class.std::shared_ptr.13"* @"??$exchange@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@$$T@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@AEAPEAV10@$$QEA$$T@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Myend, i8** noundef nonnull align 8 dereferenceable(8) %ref.tmp2) #15
  store %"class.std::shared_ptr.13"* %call, %"class.std::shared_ptr.13"** %ref.tmp, align 8
  store i8* null, i8** %ref.tmp5, align 8
  %1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %_Mypair6 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %1, i32 0, i32 0
  %_Myval27 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair6, i32 0, i32 0
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %_Myval27, i32 0, i32 1
  %call8 = call noundef %"class.std::shared_ptr.13"* @"??$exchange@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@$$T@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@AEAPEAV10@$$QEA$$T@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Mylast, i8** noundef nonnull align 8 dereferenceable(8) %ref.tmp5) #15
  store %"class.std::shared_ptr.13"* %call8, %"class.std::shared_ptr.13"** %ref.tmp4, align 8
  store i8* null, i8** %ref.tmp10, align 8
  %2 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %_Mypair11 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %2, i32 0, i32 0
  %_Myval212 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair11, i32 0, i32 0
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %_Myval212, i32 0, i32 0
  %call13 = call noundef %"class.std::shared_ptr.13"* @"??$exchange@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@$$T@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@AEAPEAV10@$$QEA$$T@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Myfirst, i8** noundef nonnull align 8 dereferenceable(8) %ref.tmp10) #15
  store %"class.std::shared_ptr.13"* %call13, %"class.std::shared_ptr.13"** %ref.tmp9, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %call14 = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @"?_Getal@?$vector@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@2@XZ"(%"class.std::vector.8"* noundef nonnull align 8 dereferenceable(24) %3) #15
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %agg.tmp, i32 0, i32 0
  %4 = load i8, i8* %coerce.dive, align 1
  %call15 = call noundef %"class.std::_Compressed_pair.9"* @"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@PEAV21@PEAV21@@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@22@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull align 8 dereferenceable(24) %_Mypair, i8 %4, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %call14, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %ref.tmp9, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %ref.tmp4, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %ref.tmp) #15
  %_Mypair16 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %_Myval217 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair16, i32 0, i32 0
  %5 = bitcast %"class.std::_Vector_val.12"* %_Myval217 to %"struct.std::_Container_base0"*
  call void @"?_Alloc_proxy@_Container_base0@std@@QEAAXAEBU_Fake_allocator@2@@Z"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %5, %"struct.std::_Fake_allocator"* noundef nonnull align 1 dereferenceable(1) @"?_Fake_alloc@std@@3U_Fake_allocator@1@B") #15
  %_Mypair18 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %this1, i32 0, i32 0
  %_Myval219 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair18, i32 0, i32 0
  %6 = bitcast %"class.std::_Vector_val.12"* %_Myval219 to %"struct.std::_Container_base0"*
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %_Right.addr, align 8
  %_Mypair20 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %7, i32 0, i32 0
  %_Myval221 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %_Mypair20, i32 0, i32 0
  %8 = bitcast %"class.std::_Vector_val.12"* %_Myval221 to %"struct.std::_Container_base0"*
  call void @"?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %6, %"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %8) #15
  ret %"class.std::vector.8"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.13"* @"??$exchange@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@$$T@std@@YAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@0@AEAPEAV10@$$QEA$$T@Z"(%"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val, i8** noundef nonnull align 8 dereferenceable(8) %_New_val) #2 comdat {
entry:
  %_New_val.addr = alloca i8**, align 8
  %_Val.addr = alloca %"class.std::shared_ptr.13"**, align 8
  %_Old_val = alloca %"class.std::shared_ptr.13"*, align 8
  store i8** %_New_val, i8*** %_New_val.addr, align 8
  store %"class.std::shared_ptr.13"** %_Val, %"class.std::shared_ptr.13"*** %_Val.addr, align 8
  %0 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val.addr, align 8
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %0, align 8
  store %"class.std::shared_ptr.13"* %1, %"class.std::shared_ptr.13"** %_Old_val, align 8
  %2 = load i8**, i8*** %_New_val.addr, align 8
  %3 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val.addr, align 8
  store %"class.std::shared_ptr.13"* null, %"class.std::shared_ptr.13"** %3, align 8
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Old_val, align 8
  ret %"class.std::shared_ptr.13"* %4
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Compressed_pair.9"* @"??$?0V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@PEAV21@PEAV21@@?$_Compressed_pair@V?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@1@$$QEAPEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@22@Z"(%"class.std::_Compressed_pair.9"* noundef nonnull returned align 8 dereferenceable(24) %this, i8 %.coerce, %"class.std::allocator.10"* noundef nonnull align 1 dereferenceable(1) %_Val1, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val23, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val21, %"class.std::shared_ptr.13"** noundef nonnull align 8 dereferenceable(8) %_Val2) unnamed_addr #5 comdat align 2 {
entry:
  %0 = alloca %"struct.std::_One_then_variadic_args_t", align 1
  %_Val2.addr = alloca %"class.std::shared_ptr.13"**, align 8
  %_Val2.addr2 = alloca %"class.std::shared_ptr.13"**, align 8
  %_Val2.addr4 = alloca %"class.std::shared_ptr.13"**, align 8
  %_Val1.addr = alloca %"class.std::allocator.10"*, align 8
  %this.addr = alloca %"class.std::_Compressed_pair.9"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_One_then_variadic_args_t", %"struct.std::_One_then_variadic_args_t"* %0, i32 0, i32 0
  store i8 %.coerce, i8* %coerce.dive, align 1
  store %"class.std::shared_ptr.13"** %_Val2, %"class.std::shared_ptr.13"*** %_Val2.addr, align 8
  store %"class.std::shared_ptr.13"** %_Val21, %"class.std::shared_ptr.13"*** %_Val2.addr2, align 8
  store %"class.std::shared_ptr.13"** %_Val23, %"class.std::shared_ptr.13"*** %_Val2.addr4, align 8
  store %"class.std::allocator.10"* %_Val1, %"class.std::allocator.10"** %_Val1.addr, align 8
  store %"class.std::_Compressed_pair.9"* %this, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %this5 = load %"class.std::_Compressed_pair.9"*, %"class.std::_Compressed_pair.9"** %this.addr, align 8
  %1 = bitcast %"class.std::_Compressed_pair.9"* %this5 to %"class.std::allocator.10"*
  %2 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %_Val1.addr, align 8
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.9", %"class.std::_Compressed_pair.9"* %this5, i32 0, i32 0
  %3 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val2.addr, align 8
  %4 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %3, align 8
  %5 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val2.addr2, align 8
  %6 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %5, align 8
  %7 = load %"class.std::shared_ptr.13"**, %"class.std::shared_ptr.13"*** %_Val2.addr4, align 8
  %8 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %7, align 8
  %call = call noundef %"class.std::_Vector_val.12"* @"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@00@Z"(%"class.std::_Vector_val.12"* noundef nonnull align 8 dereferenceable(24) %_Myval2, %"class.std::shared_ptr.13"* noundef %8, %"class.std::shared_ptr.13"* noundef %6, %"class.std::shared_ptr.13"* noundef %4) #15
  ret %"class.std::_Compressed_pair.9"* %this5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Swap_proxy_and_iterators@_Container_base0@std@@QEAAXAEAU12@@Z"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %this, %"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %0) #2 comdat align 2 {
entry:
  %.addr = alloca %"struct.std::_Container_base0"*, align 8
  %this.addr = alloca %"struct.std::_Container_base0"*, align 8
  store %"struct.std::_Container_base0"* %0, %"struct.std::_Container_base0"** %.addr, align 8
  store %"struct.std::_Container_base0"* %this, %"struct.std::_Container_base0"** %this.addr, align 8
  %this1 = load %"struct.std::_Container_base0"*, %"struct.std::_Container_base0"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Vector_val.12"* @"??0?$_Vector_val@U?$_Simple_types@V?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@std@@@std@@@std@@QEAA@PEAV?$shared_ptr@VPropertyWithDataBase@detail@sycl@cl@@@1@00@Z"(%"class.std::_Vector_val.12"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.std::shared_ptr.13"* noundef %_First, %"class.std::shared_ptr.13"* noundef %_Last, %"class.std::shared_ptr.13"* noundef %_End) unnamed_addr #5 comdat align 2 {
entry:
  %_End.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_Last.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %_First.addr = alloca %"class.std::shared_ptr.13"*, align 8
  %this.addr = alloca %"class.std::_Vector_val.12"*, align 8
  store %"class.std::shared_ptr.13"* %_End, %"class.std::shared_ptr.13"** %_End.addr, align 8
  store %"class.std::shared_ptr.13"* %_Last, %"class.std::shared_ptr.13"** %_Last.addr, align 8
  store %"class.std::shared_ptr.13"* %_First, %"class.std::shared_ptr.13"** %_First.addr, align 8
  store %"class.std::_Vector_val.12"* %this, %"class.std::_Vector_val.12"** %this.addr, align 8
  %this1 = load %"class.std::_Vector_val.12"*, %"class.std::_Vector_val.12"** %this.addr, align 8
  %0 = bitcast %"class.std::_Vector_val.12"* %this1 to %"struct.std::_Container_base0"*
  %_Myfirst = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 0
  %1 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_First.addr, align 8
  store %"class.std::shared_ptr.13"* %1, %"class.std::shared_ptr.13"** %_Myfirst, align 8
  %_Mylast = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 1
  %2 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_Last.addr, align 8
  store %"class.std::shared_ptr.13"* %2, %"class.std::shared_ptr.13"** %_Mylast, align 8
  %_Myend = getelementptr inbounds %"class.std::_Vector_val.12", %"class.std::_Vector_val.12"* %this1, i32 0, i32 2
  %3 = load %"class.std::shared_ptr.13"*, %"class.std::shared_ptr.13"** %_End.addr, align 8
  store %"class.std::shared_ptr.13"* %3, %"class.std::shared_ptr.13"** %_Myend, align 8
  ret %"class.std::_Vector_val.12"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$get@$0A@@?$InitializedVal@$02Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$02@23@XZ"(%"class.cl::sycl::range.26"* noalias sret(%"class.cl::sycl::range.26") align 8 %agg.result) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %0 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %call = call noundef %"class.cl::sycl::range.26"* @"??$?0$02@?$range@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %agg.result, i64 noundef 0, i64 noundef 0, i64 noundef 0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %dimension) #4 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::detail::array.25"*, align 8
  %tmp.i = alloca %"class.cl::sycl::invalid_parameter_error", align 8
  %dimension.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::array.25"*, align 8
  store i32 %dimension, i32* %dimension.addr, align 4
  store %"class.cl::sycl::detail::array.25"* %this, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %0 = load i32, i32* %dimension.addr, align 4
  store i32 %0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::detail::array.25"* %this1, %"class.cl::sycl::detail::array.25"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr.i, align 8
  %1 = load i32, i32* %dimension.addr.i, align 4
  %cmp.i = icmp sge i32 %1, 3
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %2 = load i32, i32* %dimension.addr.i, align 4
  %cmp2.i = icmp slt i32 %2, 0
  br i1 %cmp2.i, label %if.then.i, label %"?check_dimension@?$array@$02@detail@sycl@cl@@IEBAXH@Z.exit"

if.then.i:                                        ; preds = %lor.lhs.false.i, %entry
  %call.i = call noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %tmp.i, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %tmp.i to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_parameter_error@sycl@cl@@") #17
  unreachable

"?check_dimension@?$array@$02@detail@sycl@cl@@IEBAXH@Z.exit": ; preds = %lor.lhs.false.i
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %this1, i32 0, i32 0
  %4 = load i32, i32* %dimension.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [3 x i64], [3 x i64]* %common_array, i64 0, i64 %idxprom
  ret i64* %arrayidx
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::range.26"* @"??$?0$02@?$range@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::range.26"* noundef nonnull returned align 8 dereferenceable(24) %this, i64 noundef %dim0, i64 noundef %dim1, i64 noundef %dim2) unnamed_addr #6 comdat align 2 {
entry:
  %dim2.addr = alloca i64, align 8
  %dim1.addr = alloca i64, align 8
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::range.26"*, align 8
  store i64 %dim2, i64* %dim2.addr, align 8
  store i64 %dim1, i64* %dim1.addr, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::range.26"* %this, %"class.cl::sycl::range.26"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::range.26"*, %"class.cl::sycl::range.26"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::range.26"* %this1 to %"class.cl::sycl::detail::array.25"*
  %1 = load i64, i64* %dim2.addr, align 8
  %2 = load i64, i64* %dim1.addr, align 8
  %3 = load i64, i64* %dim0.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02@?$array@$02@detail@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %0, i64 noundef %3, i64 noundef %2, i64 noundef %1)
  ret %"class.cl::sycl::range.26"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02@?$array@$02@detail@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull returned align 8 dereferenceable(24) %this, i64 noundef %dim0, i64 noundef %dim1, i64 noundef %dim2) unnamed_addr #5 comdat align 2 {
entry:
  %dim2.addr = alloca i64, align 8
  %dim1.addr = alloca i64, align 8
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::array.25"*, align 8
  store i64 %dim2, i64* %dim2.addr, align 8
  store i64 %dim1, i64* %dim1.addr, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::detail::array.25"* %this, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %this1, i32 0, i32 0
  %arrayinit.begin = getelementptr inbounds [3 x i64], [3 x i64]* %common_array, i64 0, i64 0
  %0 = load i64, i64* %dim0.addr, align 8
  store i64 %0, i64* %arrayinit.begin, align 8
  %arrayinit.element = getelementptr inbounds i64, i64* %arrayinit.begin, i64 1
  %1 = load i64, i64* %dim1.addr, align 8
  store i64 %1, i64* %arrayinit.element, align 8
  %arrayinit.element2 = getelementptr inbounds i64, i64* %arrayinit.element, i64 1
  %2 = load i64, i64* %dim2.addr, align 8
  store i64 %2, i64* %arrayinit.element2, align 8
  ret %"class.cl::sycl::detail::array.25"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %call = call noundef %"class.std::_Ptr_base.24"* @"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret %"class.std::shared_ptr.23"* %this1
}

declare dllimport noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??0AccessorImplHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N4@Z"(%"class.cl::sycl::detail::AccessorImplHost"* noundef nonnull returned align 8 dereferenceable(128), %"class.cl::sycl::id"* noundef, %"class.cl::sycl::range.26"* noundef, %"class.cl::sycl::range.26"* noundef, i32 noundef, %"class.cl::sycl::detail::SYCLMemObjI"* noundef, i32 noundef, i32 noundef, i32 noundef, i1 noundef zeroext, i1 noundef zeroext) unnamed_addr #1

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.23"* @"??$?0VAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"class.std::shared_ptr.23"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.cl::sycl::detail::AccessorImplHost"* noundef %_Px) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Px.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %_Owner = alloca %"struct.std::_Temporary_owner", align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %_Px, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %call = call noundef %"class.std::_Ptr_base.24"* @"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  %call2 = call noundef %"struct.std::_Temporary_owner"* @"??0?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@QEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"struct.std::_Temporary_owner"* noundef nonnull align 8 dereferenceable(8) %_Owner, %"class.cl::sycl::detail::AccessorImplHost"* noundef %1) #15
  %call3 = invoke noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 24) #18
          to label %invoke.cont unwind label %ehcleanup8

invoke.cont:                                      ; preds = %entry
  %2 = bitcast i8* %call3 to %"class.std::_Ref_count"*
  %_Ptr = getelementptr inbounds %"struct.std::_Temporary_owner", %"struct.std::_Temporary_owner"* %_Owner, i32 0, i32 0
  %3 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %call5 = invoke noundef %"class.std::_Ref_count"* @"??0?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %2, %"class.cl::sycl::detail::AccessorImplHost"* noundef %3)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont
  %4 = bitcast %"class.std::_Ref_count"* %2 to %"class.std::_Ref_count_base"*
  %_Ptr6 = getelementptr inbounds %"struct.std::_Temporary_owner", %"struct.std::_Temporary_owner"* %_Owner, i32 0, i32 0
  %5 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr6, align 8
  call void @"??$_Set_ptr_rep_and_enable_shared@VAccessorImplHost@detail@sycl@cl@@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@AEAAXQEAVAccessorImplHost@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this1, %"class.cl::sycl::detail::AccessorImplHost"* noundef %5, %"class.std::_Ref_count_base"* noundef %4) #15
  %_Ptr7 = getelementptr inbounds %"struct.std::_Temporary_owner", %"struct.std::_Temporary_owner"* %_Owner, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* null, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr7, align 8
  call void @"??1?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"struct.std::_Temporary_owner"* noundef nonnull align 8 dereferenceable(8) %_Owner) #15
  ret %"class.std::shared_ptr.23"* %this1

ehcleanup:                                        ; preds = %invoke.cont
  %6 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call3) #19 [ "funclet"(token %6) ]
  cleanupret from %6 unwind label %ehcleanup8

ehcleanup8:                                       ; preds = %ehcleanup, %entry
  %7 = cleanuppad within none []
  call void @"??1?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"struct.std::_Temporary_owner"* noundef nonnull align 8 dereferenceable(8) %_Owner) #15 [ "funclet"(token %7) ]
  cleanupret from %7 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(16) %"class.std::shared_ptr.23"* @"??4?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAAEAV01@$$QEAV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.23", align 8
  store %"class.std::shared_ptr.23"* %_Right, %"class.std::shared_ptr.23"** %_Right.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Right.addr, align 8
  %call = call noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %0) #15
  call void @"?swap@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this1) #15
  call void @"??1?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  ret %"class.std::shared_ptr.23"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ptr_base.24"* @"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull returned align 8 dereferenceable(16) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* null, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret %"class.std::_Ptr_base.24"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"struct.std::_Temporary_owner"* @"??0?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@QEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"struct.std::_Temporary_owner"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.cl::sycl::detail::AccessorImplHost"* noundef %_Ptr_) unnamed_addr #5 comdat align 2 {
entry:
  %_Ptr_.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"*, align 8
  %this.addr = alloca %"struct.std::_Temporary_owner"*, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %_Ptr_, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr_.addr, align 8
  store %"struct.std::_Temporary_owner"* %this, %"struct.std::_Temporary_owner"** %this.addr, align 8
  %this1 = load %"struct.std::_Temporary_owner"*, %"struct.std::_Temporary_owner"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"struct.std::_Temporary_owner", %"struct.std::_Temporary_owner"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr_.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %0, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  ret %"struct.std::_Temporary_owner"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Set_ptr_rep_and_enable_shared@VAccessorImplHost@detail@sycl@cl@@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@AEAAXQEAVAccessorImplHost@detail@sycl@cl@@QEAV_Ref_count_base@1@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this, %"class.cl::sycl::detail::AccessorImplHost"* noundef %_Px, %"class.std::_Ref_count_base"* noundef %_Rx) #2 comdat align 2 {
entry:
  %_Rx.addr = alloca %"class.std::_Ref_count_base"*, align 8
  %_Px.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::_Ref_count_base"* %_Rx, %"class.std::_Ref_count_base"** %_Rx.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %_Px, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %1, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* %0, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %2 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rx.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %3, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %2, %"class.std::_Ref_count_base"** %_Rep, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Ref_count"* @"??0?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@PEAVAccessorImplHost@detail@sycl@cl@@@Z"(%"class.std::_Ref_count"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.cl::sycl::detail::AccessorImplHost"* noundef %_Px) unnamed_addr #5 comdat align 2 {
entry:
  %_Px.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"*, align 8
  %this.addr = alloca %"class.std::_Ref_count"*, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %_Px, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  store %"class.std::_Ref_count"* %this, %"class.std::_Ref_count"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count"*, %"class.std::_Ref_count"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count"* %this1 to %"class.std::_Ref_count_base"*
  %1 = bitcast %"class.std::_Ref_count_base"* %0 to i8*
  %2 = getelementptr inbounds i8, i8* %1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  %call = call noundef %"class.std::_Ref_count_base"* @"??0_Ref_count_base@std@@IEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %3 = bitcast %"class.std::_Ref_count"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ref_count", %"class.std::_Ref_count"* %this1, i32 0, i32 1
  %4 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Px.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %4, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  ret %"class.std::_Ref_count"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Temporary_owner@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@XZ"(%"struct.std::_Temporary_owner"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Temporary_owner"*, align 8
  store %"struct.std::_Temporary_owner"* %this, %"struct.std::_Temporary_owner"** %this.addr, align 8
  %this1 = load %"struct.std::_Temporary_owner"*, %"struct.std::_Temporary_owner"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"struct.std::_Temporary_owner", %"struct.std::_Temporary_owner"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %isnull = icmp eq %"class.cl::sycl::detail::AccessorImplHost"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  call void @"??1AccessorImplHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorImplHost"* noundef nonnull align 8 dereferenceable(128) %0) #15
  %1 = bitcast %"class.cl::sycl::detail::AccessorImplHost"* %0 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %1) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Destroy@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count"*, align 8
  store %"class.std::_Ref_count"* %this, %"class.std::_Ref_count"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count"*, %"class.std::_Ref_count"** %this.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ref_count", %"class.std::_Ref_count"* %this1, i32 0, i32 1
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %isnull = icmp eq %"class.cl::sycl::detail::AccessorImplHost"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  call void @"??1AccessorImplHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorImplHost"* noundef nonnull align 8 dereferenceable(128) %0) #15
  %1 = bitcast %"class.cl::sycl::detail::AccessorImplHost"* %0 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %1) #19
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Delete_this@?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@EEAAXXZ"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count"*, align 8
  store %"class.std::_Ref_count"* %this, %"class.std::_Ref_count"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count"*, %"class.std::_Ref_count"** %this.addr, align 8
  %isnull = icmp eq %"class.std::_Ref_count"* %this1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %0 = bitcast %"class.std::_Ref_count"* %this1 to i8* (%"class.std::_Ref_count"*, i32)***
  %vtable = load i8* (%"class.std::_Ref_count"*, i32)**, i8* (%"class.std::_Ref_count"*, i32)*** %0, align 8
  %vfn = getelementptr inbounds i8* (%"class.std::_Ref_count"*, i32)*, i8* (%"class.std::_Ref_count"*, i32)** %vtable, i64 2
  %1 = load i8* (%"class.std::_Ref_count"*, i32)*, i8* (%"class.std::_Ref_count"*, i32)** %vfn, align 8
  %call = call noundef i8* %1(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this1, i32 noundef 1) #15
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_G?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAAPEAXI@Z"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.std::_Ref_count"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.std::_Ref_count"* %this, %"class.std::_Ref_count"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count"*, %"class.std::_Ref_count"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAA@XZ"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.std::_Ref_count"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: nounwind
declare dllimport void @"??1AccessorImplHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorImplHost"* noundef nonnull align 8 dereferenceable(128)) unnamed_addr #3

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Ref_count@VAccessorImplHost@detail@sycl@cl@@@std@@UEAA@XZ"(%"class.std::_Ref_count"* noundef nonnull align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ref_count"*, align 8
  store %"class.std::_Ref_count"* %this, %"class.std::_Ref_count"** %this.addr, align 8
  %this1 = load %"class.std::_Ref_count"*, %"class.std::_Ref_count"** %this.addr, align 8
  %0 = bitcast %"class.std::_Ref_count"* %this1 to %"class.std::_Ref_count_base"*
  call void @"??1_Ref_count_base@std@@UEAA@XZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %_Right) unnamed_addr #5 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %_Right, %"class.std::shared_ptr.23"** %_Right.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %call = call noundef %"class.std::_Ptr_base.24"* @"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %2 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Right.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.23"* %2 to %"class.std::_Ptr_base.24"*
  call void @"??$_Move_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %1, %"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %3) #15
  ret %"class.std::shared_ptr.23"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?swap@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAAXAEAV12@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %_Other) #2 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %_Other, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  %2 = bitcast %"class.std::shared_ptr.23"* %1 to %"class.std::_Ptr_base.24"*
  call void @"?_Swap@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0, %"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %2) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Move_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAX$$QEAV01@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %_Right, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %0 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %0, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* %1, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr2, align 8
  %2 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %2, i32 0, i32 1
  %3 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %3, %"class.std::_Ref_count_base"** %_Rep3, align 8
  %4 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Ptr4 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %4, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* null, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr4, align 8
  %5 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Rep5 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %5, i32 0, i32 1
  store %"class.std::_Ref_count_base"* null, %"class.std::_Ref_count_base"** %_Rep5, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Swap@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEAV12@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %_Right) #2 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %_Right, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %0 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %0, i32 0, i32 0
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 0
  call void @"??$swap@PEAVAccessorImplHost@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVAccessorImplHost@detail@sycl@cl@@0@Z"(%"class.cl::sycl::detail::AccessorImplHost"** noundef nonnull align 8 dereferenceable(8) %_Ptr2, %"class.cl::sycl::detail::AccessorImplHost"** noundef nonnull align 8 dereferenceable(8) %_Ptr) #15
  %1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %_Right.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %1, i32 0, i32 1
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  call void @"??$swap@PEAV_Ref_count_base@std@@$0A@@std@@YAXAEAPEAV_Ref_count_base@0@0@Z"(%"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Rep3, %"class.std::_Ref_count_base"** noundef nonnull align 8 dereferenceable(8) %_Rep) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$swap@PEAVAccessorImplHost@detail@sycl@cl@@$0A@@std@@YAXAEAPEAVAccessorImplHost@detail@sycl@cl@@0@Z"(%"class.cl::sycl::detail::AccessorImplHost"** noundef nonnull align 8 dereferenceable(8) %_Left, %"class.cl::sycl::detail::AccessorImplHost"** noundef nonnull align 8 dereferenceable(8) %_Right) #2 comdat {
entry:
  %_Right.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"**, align 8
  %_Left.addr = alloca %"class.cl::sycl::detail::AccessorImplHost"**, align 8
  %_Tmp = alloca %"class.cl::sycl::detail::AccessorImplHost"*, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"** %_Right, %"class.cl::sycl::detail::AccessorImplHost"*** %_Right.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"** %_Left, %"class.cl::sycl::detail::AccessorImplHost"*** %_Left.addr, align 8
  %0 = load %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"*** %_Left.addr, align 8
  %1 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %0, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %1, %"class.cl::sycl::detail::AccessorImplHost"** %_Tmp, align 8
  %2 = load %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"*** %_Right.addr, align 8
  %3 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %2, align 8
  %4 = load %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"*** %_Left.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %3, %"class.cl::sycl::detail::AccessorImplHost"** %4, align 8
  %5 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Tmp, align 8
  %6 = load %"class.cl::sycl::detail::AccessorImplHost"**, %"class.cl::sycl::detail::AccessorImplHost"*** %_Right.addr, align 8
  store %"class.cl::sycl::detail::AccessorImplHost"* %5, %"class.cl::sycl::detail::AccessorImplHost"** %6, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull returned align 8 dereferenceable(80) %this, i8* noundef %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store i8* %Msg, i8** %Msg.addr, align 8
  store %"class.cl::sycl::invalid_object_error"* %this, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %0 = load i32, i32* %Err.addr, align 4
  %1 = load i8*, i8** %Msg.addr, align 8
  %call = call noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8* noundef %1)
  %call2 = invoke noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %this1, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i32 noundef %0)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret %"class.cl::sycl::invalid_object_error"* %this1

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  store %"class.cl::sycl::invalid_object_error"* %0, %"class.cl::sycl::invalid_object_error"** %.addr, align 8
  store %"class.cl::sycl::invalid_object_error"* %this, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to %"class.cl::sycl::device_error"*
  %2 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::invalid_object_error"* %2 to %"class.cl::sycl::device_error"*
  %call = call noundef %"class.cl::sycl::device_error"* @"??0device_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %1, %"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %3)
  %4 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7invalid_object_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.cl::sycl::invalid_object_error"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::device_error"* @"??0device_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::device_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::device_error"*, align 8
  %this.addr = alloca %"class.cl::sycl::device_error"*, align 8
  store %"class.cl::sycl::device_error"* %0, %"class.cl::sycl::device_error"** %.addr, align 8
  store %"class.cl::sycl::device_error"* %this, %"class.cl::sycl::device_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::device_error"* %this1 to %"class.cl::sycl::exception"*
  %2 = load %"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::device_error"* %2 to %"class.cl::sycl::exception"*
  %call = call noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %1, %"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %3)
  %4 = bitcast %"class.cl::sycl::device_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7device_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.cl::sycl::device_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1invalid_object_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  store %"class.cl::sycl::invalid_object_error"* %this, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to %"class.cl::sycl::device_error"*
  call void @"??1device_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %0) #15
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  %agg.tmp = alloca %"class.std::error_code", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::invalid_object_error"* %this, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to %"class.cl::sycl::device_error"*
  %1 = load i32, i32* %Err.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  call void @"?make_error_code@sycl@cl@@YA?AVerror_code@std@@W4errc@12@@Z"(%"class.std::error_code"* sret(%"class.std::error_code") align 8 %agg.tmp, i32 noundef 8) #15
  %call = call noundef %"class.cl::sycl::device_error"* @"??0device_error@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1)
  %3 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7invalid_object_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.cl::sycl::invalid_object_error"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::device_error"* @"??0device_error@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z"(%"class.cl::sycl::device_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::error_code"* noundef %ec, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %CLErr) unnamed_addr #6 comdat align 2 {
entry:
  %CLErr.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::device_error"*, align 8
  %agg.tmp = alloca %"class.std::shared_ptr.32", align 8
  %agg.tmp2 = alloca %"class.std::error_code", align 8
  store i32 %CLErr, i32* %CLErr.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::device_error"* %this, %"class.cl::sycl::device_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::device_error"* %this1 to %"class.cl::sycl::exception"*
  %call = call noundef %"class.std::shared_ptr.32"* @"??0?$shared_ptr@Vcontext@sycl@cl@@@std@@QEAA@$$T@Z"(%"class.std::shared_ptr.32"* noundef nonnull align 8 dereferenceable(16) %agg.tmp, i8* null) #15
  %1 = load i32, i32* %CLErr.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  %3 = bitcast %"class.std::error_code"* %agg.tmp2 to i8*
  %4 = bitcast %"class.std::error_code"* %ec to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %call3 = call noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@HV?$shared_ptr@Vcontext@sycl@cl@@@4@@Z"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp2, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1, %"class.std::shared_ptr.32"* noundef %agg.tmp)
  %5 = bitcast %"class.cl::sycl::device_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7device_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %5, align 8
  ret %"class.cl::sycl::device_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Ginvalid_object_error@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::invalid_object_error"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::invalid_object_error"* %this, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::invalid_object_error"*, %"class.cl::sycl::invalid_object_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1invalid_object_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::invalid_object_error"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gdevice_error@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::device_error"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::device_error"* %this, %"class.cl::sycl::device_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::device_error"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1device_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::device_error"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1device_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::device_error"* noundef nonnull align 8 dereferenceable(80) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::device_error"*, align 8
  store %"class.cl::sycl::device_error"* %this, %"class.cl::sycl::device_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::device_error"*, %"class.cl::sycl::device_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::device_error"* %this1 to %"class.cl::sycl::exception"*
  call void @"??1exception@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %0) #15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$parallel_for_lambda_impl@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@$00@handler@sycl@cl@@AEAAXV?$range@$00@12@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, i64 %NumWorkItems.coerce, %class.anon.113* noundef %KernelFunc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %NumWorkItems = alloca %"class.cl::sycl::range", align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  %MinFactorX = alloca i64, align 8
  %GoodFactorX = alloca i64, align 8
  %MinRangeX = alloca i64, align 8
  %KName = alloca %"class.std::basic_string", align 8
  %DisableRounding = alloca i8, align 1
  %NewValX = alloca i64, align 8
  %Wrapper = alloca %"class.cl::sycl::detail::RoundedRangeKernel", align 8
  %agg.tmp = alloca %"class.cl::sycl::range", align 8
  %agg.tmp39 = alloca %class.anon.113, align 8
  %AdjustedRange = alloca %"class.cl::sycl::range", align 8
  %agg.tmp47 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp51 = alloca %"class.cl::sycl::detail::RoundedRangeKernel", align 8
  %agg.tmp59 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp63 = alloca %class.anon.113, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %NumWorkItems, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %NumWorkItems.coerce, i64* %0, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  invoke void @"?throwIfActionIsCreated@handler@sycl@cl@@AEAAXXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2)
          to label %invoke.cont unwind label %ehcleanup69

invoke.cont:                                      ; preds = %entry
  %call = invoke noundef i8* @"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ"()
          to label %invoke.cont3 unwind label %ehcleanup69

invoke.cont3:                                     ; preds = %invoke.cont
  %call5 = invoke noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8* noundef %call)
          to label %invoke.cont4 unwind label %ehcleanup69

invoke.cont4:                                     ; preds = %invoke.cont3
  invoke void @"?verifyUsedKernelBundle@handler@sycl@cl@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont6 unwind label %ehcleanup

invoke.cont6:                                     ; preds = %invoke.cont4
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  store i64 16, i64* %MinFactorX, align 8
  store i64 32, i64* %GoodFactorX, align 8
  store i64 1024, i64* %MinRangeX, align 8
  invoke void @"?GetRangeRoundingSettings@handler@sycl@cl@@AEAAXAEA_K00@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, i64* noundef nonnull align 8 dereferenceable(8) %MinFactorX, i64* noundef nonnull align 8 dereferenceable(8) %GoodFactorX, i64* noundef nonnull align 8 dereferenceable(8) %MinRangeX)
          to label %invoke.cont7 unwind label %ehcleanup69

invoke.cont7:                                     ; preds = %invoke.cont6
  %call8 = call noundef i8* @"?name@type_info@@QEBAPEBDXZ"(%class.type_info* noundef nonnull align 8 dereferenceable(24) bitcast (%rtti.TypeDescriptor17* @"??_R0PEAVFillBuffer@@@8" to %class.type_info*)) #15
  %call10 = invoke noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %KName, i8* noundef %call8)
          to label %invoke.cont9 unwind label %ehcleanup69

invoke.cont9:                                     ; preds = %invoke.cont7
  %call12 = invoke noundef zeroext i1 @"?DisableRangeRounding@handler@sycl@cl@@AEAA_NXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2)
          to label %invoke.cont11 unwind label %ehcleanup68

invoke.cont11:                                    ; preds = %invoke.cont9
  br i1 %call12, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %invoke.cont11
  %call14 = invoke noundef i8* @"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ"()
          to label %invoke.cont13 unwind label %ehcleanup68

invoke.cont13:                                    ; preds = %lor.rhs
  %arrayidx = getelementptr inbounds i8, i8* %call14, i64 0
  %1 = load i8, i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br label %lor.end

lor.end:                                          ; preds = %invoke.cont13, %invoke.cont11
  %2 = phi i1 [ true, %invoke.cont11 ], [ %cmp, %invoke.cont13 ]
  %frombool = zext i1 %2 to i8
  store i8 %frombool, i8* %DisableRounding, align 1
  %3 = load i8, i8* %DisableRounding, align 1
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.end
  %4 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %call16 = invoke noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %4, i32 noundef 0)
          to label %invoke.cont15 unwind label %ehcleanup68

invoke.cont15:                                    ; preds = %land.lhs.true
  %5 = load i64, i64* %call16, align 8
  %6 = load i64, i64* %MinRangeX, align 8
  %cmp17 = icmp uge i64 %5, %6
  br i1 %cmp17, label %land.lhs.true18, label %if.else

land.lhs.true18:                                  ; preds = %invoke.cont15
  %7 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %call20 = invoke noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %7, i32 noundef 0)
          to label %invoke.cont19 unwind label %ehcleanup68

invoke.cont19:                                    ; preds = %land.lhs.true18
  %8 = load i64, i64* %call20, align 8
  %9 = load i64, i64* %MinFactorX, align 8
  %rem = urem i64 %8, %9
  %cmp21 = icmp ne i64 %rem, 0
  br i1 %cmp21, label %if.then, label %if.else

if.then:                                          ; preds = %invoke.cont19
  %10 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %call23 = invoke noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %10, i32 noundef 0)
          to label %invoke.cont22 unwind label %ehcleanup68

invoke.cont22:                                    ; preds = %if.then
  %11 = load i64, i64* %call23, align 8
  %12 = load i64, i64* %GoodFactorX, align 8
  %add = add i64 %11, %12
  %sub = sub i64 %add, 1
  %13 = load i64, i64* %GoodFactorX, align 8
  %div = udiv i64 %sub, %13
  %14 = load i64, i64* %GoodFactorX, align 8
  %mul = mul i64 %div, %14
  store i64 %mul, i64* %NewValX, align 8
  %call25 = invoke noundef zeroext i1 @"?RangeRoundingTrace@handler@sycl@cl@@AEAA_NXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2)
          to label %invoke.cont24 unwind label %ehcleanup68

invoke.cont24:                                    ; preds = %invoke.cont22
  br i1 %call25, label %if.then26, label %if.end

if.then26:                                        ; preds = %invoke.cont24
  %call28 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) @"?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A", i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @"??_C@_0CC@BLKNDEF@parallel_for?5range?5adjusted?5from@", i64 0, i64 0))
          to label %invoke.cont27 unwind label %ehcleanup68

invoke.cont27:                                    ; preds = %if.then26
  %15 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %call30 = invoke noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %15, i32 noundef 0)
          to label %invoke.cont29 unwind label %ehcleanup68

invoke.cont29:                                    ; preds = %invoke.cont27
  %16 = load i64, i64* %call30, align 8
  %call32 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call28, i64 noundef %16)
          to label %invoke.cont31 unwind label %ehcleanup68

invoke.cont31:                                    ; preds = %invoke.cont29
  %call34 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call32, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @"??_C@_04MKEOLIJC@?5to?5?$AA@", i64 0, i64 0))
          to label %invoke.cont33 unwind label %ehcleanup68

invoke.cont33:                                    ; preds = %invoke.cont31
  %17 = load i64, i64* %NewValX, align 8
  %call36 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call34, i64 noundef %17)
          to label %invoke.cont35 unwind label %ehcleanup68

invoke.cont35:                                    ; preds = %invoke.cont33
  %call38 = invoke noundef nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @"??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z"(%"class.std::basic_ostream"* noundef nonnull align 8 dereferenceable(8) %call36, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* noundef @"??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z")
          to label %invoke.cont37 unwind label %ehcleanup68

invoke.cont37:                                    ; preds = %invoke.cont35
  br label %if.end

ehcleanup:                                        ; preds = %invoke.cont4
  %18 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %18) ]
  cleanupret from %18 unwind label %ehcleanup69

if.end:                                           ; preds = %invoke.cont37, %invoke.cont24
  %19 = bitcast %"class.cl::sycl::range"* %agg.tmp to i8*
  %20 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 8, i1 false)
  %call40 = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %agg.tmp39, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  %coerce.dive41 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp, i32 0, i32 0
  %coerce.dive42 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive41, i32 0, i32 0
  %21 = bitcast [1 x i64]* %coerce.dive42 to i64*
  %22 = load i64, i64* %21, align 8
  invoke void @"??$getRangeRoundedKernelLambda@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@$00V<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@$0A@@handler@sycl@cl@@AEAA?A?<auto>@@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?3@AEAV012@@Z@V?$range@$00@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %"class.cl::sycl::detail::RoundedRangeKernel"* sret(%"class.cl::sycl::detail::RoundedRangeKernel") align 8 %Wrapper, %class.anon.113* noundef %agg.tmp39, i64 %22)
          to label %invoke.cont43 unwind label %ehcleanup68

invoke.cont43:                                    ; preds = %if.end
  %23 = bitcast %"class.cl::sycl::range"* %AdjustedRange to i8*
  %24 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 8, i1 false)
  %25 = load i64, i64* %NewValX, align 8
  invoke void @"?set_range_dim0@?$range@$00@sycl@cl@@AEAAX_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %AdjustedRange, i64 noundef %25)
          to label %invoke.cont44 unwind label %ehcleanup55

invoke.cont44:                                    ; preds = %invoke.cont43
  invoke void @"??$kernel_parallel_for_wrapper@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@@handler@sycl@cl@@AEAAXAEBV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %Wrapper)
          to label %invoke.cont45 unwind label %ehcleanup55

invoke.cont45:                                    ; preds = %invoke.cont44
  invoke void @"??$checkValueRange@$00V?$range@$00@sycl@cl@@@detail@sycl@cl@@YAXAEBV?$range@$00@12@@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %AdjustedRange)
          to label %invoke.cont46 unwind label %ehcleanup55

invoke.cont46:                                    ; preds = %invoke.cont45
  %MNDRDesc = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this2, i32 0, i32 9
  %26 = bitcast %"class.cl::sycl::range"* %agg.tmp47 to i8*
  %27 = bitcast %"class.cl::sycl::range"* %AdjustedRange to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 8, i1 false)
  %coerce.dive48 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp47, i32 0, i32 0
  %coerce.dive49 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive48, i32 0, i32 0
  %28 = bitcast [1 x i64]* %coerce.dive49 to i64*
  %29 = load i64, i64* %28, align 8
  invoke void @"??$set@$00@NDRDescT@detail@sycl@cl@@QEAAXV?$range@$00@23@@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %MNDRDesc, i64 %29)
          to label %invoke.cont50 unwind label %ehcleanup55

invoke.cont50:                                    ; preds = %invoke.cont46
  %call52 = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@$$QEAV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %agg.tmp51, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %Wrapper) #15
  invoke void @"??$StoreLambda@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@$00V?$item@$00$00@34@@handler@sycl@cl@@AEAAXV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef %agg.tmp51)
          to label %invoke.cont53 unwind label %ehcleanup55

invoke.cont53:                                    ; preds = %invoke.cont50
  invoke void @"?setType@handler@sycl@cl@@AEAAXW4CGTYPE@CG@detail@23@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, i32 noundef 1)
          to label %invoke.cont54 unwind label %ehcleanup55

invoke.cont54:                                    ; preds = %invoke.cont53
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %Wrapper) #15
  br label %if.end67

ehcleanup55:                                      ; preds = %invoke.cont53, %invoke.cont50, %invoke.cont46, %invoke.cont45, %invoke.cont44, %invoke.cont43
  %30 = cleanuppad within none []
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %Wrapper) #15 [ "funclet"(token %30) ]
  cleanupret from %30 unwind label %ehcleanup68

if.else:                                          ; preds = %invoke.cont19, %invoke.cont15, %lor.end
  invoke void @"??$kernel_parallel_for_wrapper@VFillBuffer@@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@@handler@sycl@cl@@AEAAXAEBV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc)
          to label %invoke.cont56 unwind label %ehcleanup68

invoke.cont56:                                    ; preds = %if.else
  invoke void @"??$checkValueRange@$00V?$range@$00@sycl@cl@@@detail@sycl@cl@@YAXAEBV?$range@$00@12@@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %NumWorkItems)
          to label %invoke.cont57 unwind label %ehcleanup68

invoke.cont57:                                    ; preds = %invoke.cont56
  %MNDRDesc58 = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this2, i32 0, i32 9
  %31 = bitcast %"class.cl::sycl::range"* %agg.tmp59 to i8*
  %32 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 8, i1 false)
  %coerce.dive60 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp59, i32 0, i32 0
  %coerce.dive61 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive60, i32 0, i32 0
  %33 = bitcast [1 x i64]* %coerce.dive61 to i64*
  %34 = load i64, i64* %33, align 8
  invoke void @"??$set@$00@NDRDescT@detail@sycl@cl@@QEAAXV?$range@$00@23@@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %MNDRDesc58, i64 %34)
          to label %invoke.cont62 unwind label %ehcleanup68

invoke.cont62:                                    ; preds = %invoke.cont57
  %call64 = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@$$QEAV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %agg.tmp63, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  invoke void @"??$StoreLambda@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@$00V?$item@$00$00@67@@handler@sycl@cl@@AEAAXV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, %class.anon.113* noundef %agg.tmp63)
          to label %invoke.cont65 unwind label %ehcleanup68

invoke.cont65:                                    ; preds = %invoke.cont62
  invoke void @"?setType@handler@sycl@cl@@AEAAXW4CGTYPE@CG@detail@23@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this2, i32 noundef 1)
          to label %invoke.cont66 unwind label %ehcleanup68

invoke.cont66:                                    ; preds = %invoke.cont65
  br label %if.end67

if.end67:                                         ; preds = %invoke.cont66, %invoke.cont54
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %KName) #15
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  ret void

ehcleanup68:                                      ; preds = %invoke.cont65, %invoke.cont62, %invoke.cont57, %invoke.cont56, %if.else, %ehcleanup55, %if.end, %invoke.cont35, %invoke.cont33, %invoke.cont31, %invoke.cont29, %invoke.cont27, %if.then26, %invoke.cont22, %if.then, %land.lhs.true18, %land.lhs.true, %lor.rhs, %invoke.cont9
  %35 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %KName) #15 [ "funclet"(token %35) ]
  cleanupret from %35 unwind label %ehcleanup69

ehcleanup69:                                      ; preds = %ehcleanup68, %invoke.cont7, %invoke.cont6, %ehcleanup, %invoke.cont3, %invoke.cont, %entry
  %36 = cleanuppad within none []
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15 [ "funclet"(token %36) ]
  cleanupret from %36 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull returned align 8 dereferenceable(32) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %class.anon.113*, align 8
  store %class.anon.113* %0, %class.anon.113** %.addr, align 8
  store %class.anon.113* %this, %class.anon.113** %this.addr, align 8
  %this1 = load %class.anon.113*, %class.anon.113** %this.addr, align 8
  %Accessor = getelementptr inbounds %class.anon.113, %class.anon.113* %this1, i32 0, i32 0
  %1 = load %class.anon.113*, %class.anon.113** %.addr, align 8
  %Accessor2 = getelementptr inbounds %class.anon.113, %class.anon.113* %1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::accessor.110"* @"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor, %"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor2) #15
  ret %class.anon.113* %this1
}

declare dllimport void @"?throwIfActionIsCreated@handler@sycl@cl@@AEAAXXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552)) #1

declare dllimport void @"?verifyUsedKernelBundle@handler@sycl@cl@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552), %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32)) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ"() #2 comdat align 2 {
entry:
  ret i8* getelementptr inbounds ([57 x i8], [57 x i8]* @"??_C@_0DJ@JOCNJMGC@_ZTSZZ4mainENKUlRN2cl4sycl7handl@", i64 0, i64 0)
}

declare dllimport void @"?GetRangeRoundingSettings@handler@sycl@cl@@AEAAXAEA_K00@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552), i64* noundef nonnull align 8 dereferenceable(8), i64* noundef nonnull align 8 dereferenceable(8), i64* noundef nonnull align 8 dereferenceable(8)) #1

declare dllimport noundef zeroext i1 @"?DisableRangeRounding@handler@sycl@cl@@AEAA_NXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552)) #1

declare dllimport noundef zeroext i1 @"?RangeRoundingTrace@handler@sycl@cl@@AEAA_NXZ"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552)) #1

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$getRangeRoundedKernelLambda@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@$00V<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@$0A@@handler@sycl@cl@@AEAA?A?<auto>@@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?3@AEAV012@@Z@V?$range@$00@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noalias sret(%"class.cl::sycl::detail::RoundedRangeKernel") align 8 %agg.result, %class.anon.113* noundef %KernelFunc, i64 %NumWorkItems.coerce) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %NumWorkItems = alloca %"class.cl::sycl::range", align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %agg.tmp = alloca %class.anon.113, align 8
  %agg.tmp3 = alloca %"class.cl::sycl::range", align 8
  %0 = bitcast %"class.cl::sycl::detail::RoundedRangeKernel"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %NumWorkItems, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %1 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %NumWorkItems.coerce, i64* %1, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %agg.tmp, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  %2 = bitcast %"class.cl::sycl::range"* %agg.tmp3 to i8*
  %3 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp3, i32 0, i32 0
  %coerce.dive5 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive4, i32 0, i32 0
  %4 = bitcast [1 x i64]* %coerce.dive5 to i64*
  %5 = load i64, i64* %4, align 8
  %call6 = invoke noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@V?$range@$00@23@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %agg.result, i64 %5, %class.anon.113* noundef %agg.tmp)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %6 = cleanuppad within none []
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?set_range_dim0@?$range@$00@sycl@cl@@AEAAX_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %this, i64 noundef %dim0) #2 comdat align 2 {
entry:
  %dim0.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::range"*, align 8
  store i64 %dim0, i64* %dim0.addr, align 8
  store %"class.cl::sycl::range"* %this, %"class.cl::sycl::range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %this.addr, align 8
  %0 = load i64, i64* %dim0.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %this1 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 0
  store i64 %0, i64* %arrayidx, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$kernel_parallel_for_wrapper@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@@handler@sycl@cl@@AEAAXAEBV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #4 align 2 {
entry:
  %KernelFunc.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %KernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  call void @"??$kernel_parallel_for@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@@handler@sycl@cl@@AEAAXAEBV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$checkValueRange@$00V?$range@$00@sycl@cl@@@detail@sycl@cl@@YAXAEBV?$range@$00@12@@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %V) #4 comdat {
entry:
  %V.addr = alloca %"class.cl::sycl::range"*, align 8
  %Dim = alloca i64, align 8
  %Product = alloca i64, align 8
  %Dim1 = alloca i64, align 8
  store %"class.cl::sycl::range"* %V, %"class.cl::sycl::range"** %V.addr, align 8
  store i64 0, i64* %Dim, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %Dim, align 8
  %cmp = icmp ult i64 %0, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %V.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %1 to %"class.cl::sycl::detail::array"*
  %3 = load i64, i64* %Dim, align 8
  %conv = trunc i64 %3 to i32
  %call = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %2, i32 noundef %conv)
  call void @"??$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z"(i64 noundef %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i64, i64* %Dim, align 8
  %inc = add i64 %4, 1
  store i64 %inc, i64* %Dim, align 8
  br label %for.cond, !llvm.loop !23

for.end:                                          ; preds = %for.cond
  store i64 1, i64* %Product, align 8
  store i64 0, i64* %Dim1, align 8
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc7, %for.end
  %5 = load i64, i64* %Dim1, align 8
  %cmp3 = icmp ult i64 %5, 1
  br i1 %cmp3, label %for.body4, label %for.end9

for.body4:                                        ; preds = %for.cond2
  %6 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %V.addr, align 8
  %7 = bitcast %"class.cl::sycl::range"* %6 to %"class.cl::sycl::detail::array"*
  %8 = load i64, i64* %Dim1, align 8
  %conv5 = trunc i64 %8 to i32
  %call6 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %7, i32 noundef %conv5)
  %9 = load i64, i64* %Product, align 8
  %mul = mul i64 %9, %call6
  store i64 %mul, i64* %Product, align 8
  %10 = load i64, i64* %Product, align 8
  call void @"??$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z"(i64 noundef %10)
  br label %for.inc7

for.inc7:                                         ; preds = %for.body4
  %11 = load i64, i64* %Dim1, align 8
  %inc8 = add i64 %11, 1
  store i64 %inc8, i64* %Dim1, align 8
  br label %for.cond2, !llvm.loop !24

for.end9:                                         ; preds = %for.cond2
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$set@$00@NDRDescT@detail@sycl@cl@@QEAAXV?$range@$00@23@@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %this, i64 %NumWorkItems.coerce) #4 comdat align 2 {
entry:
  %NumWorkItems = alloca %"class.cl::sycl::range", align 8
  %this.addr = alloca %"class.cl::sycl::detail::NDRDescT"*, align 8
  %I = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %NumWorkItems, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %NumWorkItems.coerce, i64* %0, align 8
  store %"class.cl::sycl::detail::NDRDescT"* %this, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %3 = load i32, i32* %I, align 4
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %2, i32 noundef %3)
  %4 = load i64, i64* %call, align 8
  %GlobalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this2, i32 0, i32 0
  %5 = bitcast %"class.cl::sycl::range.26"* %GlobalSize to %"class.cl::sycl::detail::array.25"*
  %6 = load i32, i32* %I, align 4
  %call3 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %6)
  store i64 %4, i64* %call3, align 8
  %LocalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this2, i32 0, i32 1
  %7 = bitcast %"class.cl::sycl::range.26"* %LocalSize to %"class.cl::sycl::detail::array.25"*
  %8 = load i32, i32* %I, align 4
  %call4 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %8)
  store i64 0, i64* %call4, align 8
  %GlobalOffset = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this2, i32 0, i32 2
  %9 = bitcast %"class.cl::sycl::id"* %GlobalOffset to %"class.cl::sycl::detail::array.25"*
  %10 = load i32, i32* %I, align 4
  %call5 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %10)
  store i64 0, i64* %call5, align 8
  %NumWorkGroups = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this2, i32 0, i32 3
  %11 = bitcast %"class.cl::sycl::range.26"* %NumWorkGroups to %"class.cl::sycl::detail::array.25"*
  %12 = load i32, i32* %I, align 4
  %call6 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %12)
  store i64 0, i64* %call6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %I, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !25

for.end:                                          ; preds = %for.cond
  call void @"?setNDRangeLeftover@NDRDescT@detail@sycl@cl@@AEAAXH@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %this2, i32 noundef 1)
  %Dims = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this2, i32 0, i32 4
  store i64 1, i64* %Dims, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$StoreLambda@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@$00V?$item@$00$00@34@@handler@sycl@cl@@AEAAXV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef %KernelFunc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %IsCallableWithKernelHandler = alloca i8, align 1
  %KernelPtr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  store i8 0, i8* %IsCallableWithKernelHandler, align 1
  %call = invoke noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@AEBV3412@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %call, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelPtr, align 8
  %MArgs = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 6
  call void @"?clear@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@QEAAXXZ"(%"class.std::vector.71"* noundef nonnull align 8 dereferenceable(24) %MArgs) #15
  %call3 = invoke noundef zeroext i1 @"?isESIMD@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SA_NXZ"()
          to label %invoke.cont2 unwind label %ehcleanup

invoke.cont2:                                     ; preds = %invoke.cont
  %call5 = invoke noundef nonnull align 4 dereferenceable(12) %"struct.cl::sycl::detail::kernel_param_desc_t"* @"?getParamDesc@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z"(i32 noundef 0)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont2
  %call7 = invoke noundef i32 @"?getNumParams@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAIXZ"()
          to label %invoke.cont6 unwind label %ehcleanup

invoke.cont6:                                     ; preds = %invoke.cont4
  %conv = zext i32 %call7 to i64
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelPtr, align 8
  %1 = bitcast %"class.cl::sycl::detail::RoundedRangeKernel"* %0 to i8*
  invoke void @"?extractArgsAndReqsFromLambda@handler@sycl@cl@@AEAAXPEAD_KPEBUkernel_param_desc_t@detail@23@_N@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, i8* noundef %1, i64 noundef %conv, %"struct.cl::sycl::detail::kernel_param_desc_t"* noundef %call5, i1 noundef zeroext %call3)
          to label %invoke.cont8 unwind label %ehcleanup

invoke.cont8:                                     ; preds = %invoke.cont6
  %call10 = invoke noundef i8* @"?getName@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAPEBDXZ"()
          to label %invoke.cont9 unwind label %ehcleanup

invoke.cont9:                                     ; preds = %invoke.cont8
  %MKernelName = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 10
  %call12 = invoke noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %MKernelName, i8* noundef %call10)
          to label %invoke.cont11 unwind label %ehcleanup

invoke.cont11:                                    ; preds = %invoke.cont9
  %call14 = invoke noundef i8* @"?getName@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAPEBDXZ"()
          to label %invoke.cont13 unwind label %ehcleanup

invoke.cont13:                                    ; preds = %invoke.cont11
  %call16 = invoke noundef i64 @"?getOSModuleHandle@OSUtil@detail@sycl@cl@@SA_JPEBX@Z"(i8* noundef %call14)
          to label %invoke.cont15 unwind label %ehcleanup

invoke.cont15:                                    ; preds = %invoke.cont13
  %MOSModuleHandle = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 19
  store i64 %call16, i64* %MOSModuleHandle, align 8
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #15
  ret void

ehcleanup:                                        ; preds = %invoke.cont13, %invoke.cont11, %invoke.cont9, %invoke.cont8, %invoke.cont6, %invoke.cont4, %invoke.cont2, %invoke.cont, %entry
  %2 = cleanuppad within none []
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@$$QEAV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull returned align 8 dereferenceable(40) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %0, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %this, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %NumWorkItems = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  %NumWorkItems2 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %1, i32 0, i32 0
  %2 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  %3 = bitcast %"class.cl::sycl::range"* %NumWorkItems2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %KernelFunc = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 1
  %4 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  %KernelFunc3 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %4, i32 0, i32 1
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@$$QEAV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc3) #15
  ret %"class.cl::sycl::detail::RoundedRangeKernel"* %this1
}

declare dllimport void @"?setType@handler@sycl@cl@@AEAAXW4CGTYPE@CG@detail@23@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552), i32 noundef) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %this, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %KernelFunc = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 1
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$kernel_parallel_for_wrapper@VFillBuffer@@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@@handler@sycl@cl@@AEAAXAEBV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #4 align 2 {
entry:
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  call void @"??$kernel_parallel_for@VFillBuffer@@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@@handler@sycl@cl@@AEAAXAEBV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$StoreLambda@VFillBuffer@@V<lambda_1>@?0???R2?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@$00V?$item@$00$00@67@@handler@sycl@cl@@AEAAXV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %class.anon.113* noundef %KernelFunc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %IsCallableWithKernelHandler = alloca i8, align 1
  %KernelPtr = alloca %class.anon.113*, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  store i8 0, i8* %IsCallableWithKernelHandler, align 1
  %call = invoke noundef %class.anon.113* @"??$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@AEBV3?0???R3?0??4@9@QEBA?A?5@0@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  store %class.anon.113* %call, %class.anon.113** %KernelPtr, align 8
  %MArgs = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 6
  call void @"?clear@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@QEAAXXZ"(%"class.std::vector.71"* noundef nonnull align 8 dereferenceable(24) %MArgs) #15
  %call3 = invoke noundef zeroext i1 @"?isESIMD@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SA_NXZ"()
          to label %invoke.cont2 unwind label %ehcleanup

invoke.cont2:                                     ; preds = %invoke.cont
  %call5 = invoke noundef nonnull align 4 dereferenceable(12) %"struct.cl::sycl::detail::kernel_param_desc_t"* @"?getParamDesc@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z"(i32 noundef 0)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont2
  %call7 = invoke noundef i32 @"?getNumParams@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAIXZ"()
          to label %invoke.cont6 unwind label %ehcleanup

invoke.cont6:                                     ; preds = %invoke.cont4
  %conv = zext i32 %call7 to i64
  %0 = load %class.anon.113*, %class.anon.113** %KernelPtr, align 8
  %1 = bitcast %class.anon.113* %0 to i8*
  invoke void @"?extractArgsAndReqsFromLambda@handler@sycl@cl@@AEAAXPEAD_KPEBUkernel_param_desc_t@detail@23@_N@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, i8* noundef %1, i64 noundef %conv, %"struct.cl::sycl::detail::kernel_param_desc_t"* noundef %call5, i1 noundef zeroext %call3)
          to label %invoke.cont8 unwind label %ehcleanup

invoke.cont8:                                     ; preds = %invoke.cont6
  %call9 = call noundef i8* @"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ"()
  %MKernelName = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 10
  %call11 = invoke noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %MKernelName, i8* noundef %call9)
          to label %invoke.cont10 unwind label %ehcleanup

invoke.cont10:                                    ; preds = %invoke.cont8
  %call12 = call noundef i8* @"?getName@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAPEBDXZ"()
  %call14 = invoke noundef i64 @"?getOSModuleHandle@OSUtil@detail@sycl@cl@@SA_JPEBX@Z"(i8* noundef %call12)
          to label %invoke.cont13 unwind label %ehcleanup

invoke.cont13:                                    ; preds = %invoke.cont10
  %MOSModuleHandle = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 19
  store i64 %call14, i64* %MOSModuleHandle, align 8
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  ret void

ehcleanup:                                        ; preds = %invoke.cont10, %invoke.cont8, %invoke.cont6, %invoke.cont4, %invoke.cont2, %invoke.cont, %entry
  %2 = cleanuppad within none []
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@$$QEAV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull returned align 8 dereferenceable(32) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %class.anon.113*, align 8
  store %class.anon.113* %0, %class.anon.113** %.addr, align 8
  store %class.anon.113* %this, %class.anon.113** %this.addr, align 8
  %this1 = load %class.anon.113*, %class.anon.113** %this.addr, align 8
  %Accessor = getelementptr inbounds %class.anon.113, %class.anon.113* %this1, i32 0, i32 0
  %1 = load %class.anon.113*, %class.anon.113** %.addr, align 8
  %Accessor2 = getelementptr inbounds %class.anon.113, %class.anon.113* %1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::accessor.110"* @"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@$$QEAV012@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor, %"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor2) #15
  ret %class.anon.113* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@V?$range@$00@23@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull returned align 8 dereferenceable(40) %this, i64 %NumWorkItems.coerce, %class.anon.113* noundef %KernelFunc) unnamed_addr #5 align 2 {
entry:
  %NumWorkItems = alloca %"class.cl::sycl::range", align 8
  %this.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %NumWorkItems, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %NumWorkItems.coerce, i64* %0, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %this, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %NumWorkItems3 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this2, i32 0, i32 0
  %1 = bitcast %"class.cl::sycl::range"* %NumWorkItems3 to i8*
  %2 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %KernelFunc4 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this2, i32 0, i32 1
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc4, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #15
  ret %"class.cl::sycl::detail::RoundedRangeKernel"* %this2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal void @"??$kernel_parallel_for@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@V?$item@$00$00@34@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@234@@handler@sycl@cl@@AEAAXAEBV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #2 align 2 {
entry:
  %KernelFunc.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %KernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$checkValueRangeImpl@V?$range@$00@sycl@cl@@_K@detail@sycl@cl@@YAX_K@Z"(i64 noundef %V) #4 comdat {
entry:
  %V.addr = alloca i64, align 8
  %tmp = alloca %"class.cl::sycl::runtime_error", align 8
  store i64 %V, i64* %V.addr, align 8
  %0 = load i64, i64* %V.addr, align 8
  %cmp = icmp ugt i64 %0, 2147483647
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %tmp, i8* noundef getelementptr inbounds ([104 x i8], [104 x i8]* @"??_C@_0GI@OPDLEPNK@Provided?5range?5is?5out?5of?5integer@", i32 0, i32 0), i32 noundef -30)
  %1 = bitcast %"class.cl::sycl::runtime_error"* %tmp to i8*
  call void @_CxxThrowException(i8* %1, %eh.ThrowInfo* @"_TI3?AVruntime_error@sycl@cl@@") #17
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %this, i32 noundef %dimension) #4 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::detail::array"*, align 8
  %tmp.i = alloca %"class.cl::sycl::invalid_parameter_error", align 8
  %dimension.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::array"*, align 8
  store i32 %dimension, i32* %dimension.addr, align 4
  store %"class.cl::sycl::detail::array"* %this, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %0 = load i32, i32* %dimension.addr, align 4
  store i32 %0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::detail::array"* %this1, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr.i, align 8
  %1 = load i32, i32* %dimension.addr.i, align 4
  %cmp.i = icmp sge i32 %1, 1
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %2 = load i32, i32* %dimension.addr.i, align 4
  %cmp2.i = icmp slt i32 %2, 0
  br i1 %cmp2.i, label %if.then.i, label %"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit"

if.then.i:                                        ; preds = %lor.lhs.false.i, %entry
  %call.i = call noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %tmp.i, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %tmp.i to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_parameter_error@sycl@cl@@") #17
  unreachable

"?check_dimension@?$array@$00@detail@sycl@cl@@IEBAXH@Z.exit": ; preds = %lor.lhs.false.i
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %this1, i32 0, i32 0
  %4 = load i32, i32* %dimension.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  ret i64 %5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull returned align 8 dereferenceable(80) %this, i8* noundef %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store i8* %Msg, i8** %Msg.addr, align 8
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %0 = load i32, i32* %Err.addr, align 4
  %1 = load i8*, i8** %Msg.addr, align 8
  %call = call noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8* noundef %1)
  %call2 = invoke noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %this1, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i32 noundef %0)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret %"class.cl::sycl::runtime_error"* %this1

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::runtime_error"*, align 8
  %agg.tmp = alloca %"class.std::shared_ptr.32", align 8
  %agg.tmp2 = alloca %"class.std::error_code", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::runtime_error"* %this, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::runtime_error"*, %"class.cl::sycl::runtime_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::runtime_error"* %this1 to %"class.cl::sycl::exception"*
  %call = call noundef %"class.std::shared_ptr.32"* @"??0?$shared_ptr@Vcontext@sycl@cl@@@std@@QEAA@$$T@Z"(%"class.std::shared_ptr.32"* noundef nonnull align 8 dereferenceable(16) %agg.tmp, i8* null) #15
  %1 = load i32, i32* %Err.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  call void @"?make_error_code@sycl@cl@@YA?AVerror_code@std@@W4errc@12@@Z"(%"class.std::error_code"* sret(%"class.std::error_code") align 8 %agg.tmp2, i32 noundef 1) #15
  %call3 = call noundef %"class.cl::sycl::exception"* @"??0exception@sycl@cl@@IEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@HV?$shared_ptr@Vcontext@sycl@cl@@@4@@Z"(%"class.cl::sycl::exception"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp2, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1, %"class.std::shared_ptr.32"* noundef %agg.tmp)
  %3 = bitcast %"class.cl::sycl::runtime_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7runtime_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.cl::sycl::runtime_error"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?setNDRangeLeftover@NDRDescT@detail@sycl@cl@@AEAAXH@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %this, i32 noundef %Dims_) #4 comdat align 2 {
entry:
  %Dims_.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::NDRDescT"*, align 8
  %I = alloca i32, align 4
  store i32 %Dims_, i32* %Dims_.addr, align 4
  store %"class.cl::sycl::detail::NDRDescT"* %this, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  %0 = load i32, i32* %Dims_.addr, align 4
  store i32 %0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %GlobalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 0
  %2 = bitcast %"class.cl::sycl::range.26"* %GlobalSize to %"class.cl::sycl::detail::array.25"*
  %3 = load i32, i32* %I, align 4
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3)
  store i64 1, i64* %call, align 8
  %LocalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 1
  %4 = bitcast %"class.cl::sycl::range.26"* %LocalSize to %"class.cl::sycl::detail::array.25"*
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %4, i32 noundef 0)
  %5 = load i64, i64* %call2, align 8
  %tobool = icmp ne i64 %5, 0
  %6 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %conv = sext i32 %cond to i64
  %LocalSize3 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 1
  %7 = bitcast %"class.cl::sycl::range.26"* %LocalSize3 to %"class.cl::sycl::detail::array.25"*
  %8 = load i32, i32* %I, align 4
  %call4 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %8)
  store i64 %conv, i64* %call4, align 8
  %GlobalOffset = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 2
  %9 = bitcast %"class.cl::sycl::id"* %GlobalOffset to %"class.cl::sycl::detail::array.25"*
  %10 = load i32, i32* %I, align 4
  %call5 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %9, i32 noundef %10)
  store i64 0, i64* %call5, align 8
  %NumWorkGroups = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 3
  %11 = bitcast %"class.cl::sycl::range.26"* %NumWorkGroups to %"class.cl::sycl::detail::array.25"*
  %12 = load i32, i32* %I, align 4
  %call6 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %12)
  store i64 0, i64* %call6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %I, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !26

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@AEBV3412@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #4 align 2 {
entry:
  %KernelFunc.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %KernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??$ResetHostKernelHelper@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@34@AEAAPEAV1234@AEBV1234@@Z@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@AEBV3412@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0)
  ret %"class.cl::sycl::detail::RoundedRangeKernel"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?clear@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@QEAAXXZ"(%"class.std::vector.71"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.71"*, align 8
  %_My_data = alloca %"class.std::_Vector_val.75"*, align 8
  %_Myfirst = alloca %"class.cl::sycl::detail::ArgDesc"**, align 8
  %_Mylast = alloca %"class.cl::sycl::detail::ArgDesc"**, align 8
  store %"class.std::vector.71"* %this, %"class.std::vector.71"** %this.addr, align 8
  %this1 = load %"class.std::vector.71"*, %"class.std::vector.71"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.71", %"class.std::vector.71"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.72", %"class.std::_Compressed_pair.72"* %_Mypair, i32 0, i32 0
  store %"class.std::_Vector_val.75"* %_Myval2, %"class.std::_Vector_val.75"** %_My_data, align 8
  %0 = load %"class.std::_Vector_val.75"*, %"class.std::_Vector_val.75"** %_My_data, align 8
  %_Myfirst2 = getelementptr inbounds %"class.std::_Vector_val.75", %"class.std::_Vector_val.75"* %0, i32 0, i32 0
  store %"class.cl::sycl::detail::ArgDesc"** %_Myfirst2, %"class.cl::sycl::detail::ArgDesc"*** %_Myfirst, align 8
  %1 = load %"class.std::_Vector_val.75"*, %"class.std::_Vector_val.75"** %_My_data, align 8
  %_Mylast3 = getelementptr inbounds %"class.std::_Vector_val.75", %"class.std::_Vector_val.75"* %1, i32 0, i32 1
  store %"class.cl::sycl::detail::ArgDesc"** %_Mylast3, %"class.cl::sycl::detail::ArgDesc"*** %_Mylast, align 8
  %2 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Myfirst, align 8
  %3 = load %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"** %2, align 8
  %4 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Mylast, align 8
  %5 = load %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"** %4, align 8
  %cmp = icmp eq %"class.cl::sycl::detail::ArgDesc"* %3, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %6 = load %"class.std::_Vector_val.75"*, %"class.std::_Vector_val.75"** %_My_data, align 8
  %7 = bitcast %"class.std::_Vector_val.75"* %6 to %"struct.std::_Container_base0"*
  call void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %7) #15
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.73"* @"?_Getal@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ"(%"class.std::vector.71"* noundef nonnull align 8 dereferenceable(24) %this1) #15
  %8 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Mylast, align 8
  %9 = load %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"** %8, align 8
  %10 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Myfirst, align 8
  %11 = load %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"** %10, align 8
  call void @"??$_Destroy_range@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@YAXPEAVArgDesc@detail@sycl@cl@@QEAV1234@AEAV?$allocator@VArgDesc@detail@sycl@cl@@@0@@Z"(%"class.cl::sycl::detail::ArgDesc"* noundef %11, %"class.cl::sycl::detail::ArgDesc"* noundef %9, %"class.std::allocator.73"* noundef nonnull align 1 dereferenceable(1) %call) #15
  %12 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Myfirst, align 8
  %13 = load %"class.cl::sycl::detail::ArgDesc"*, %"class.cl::sycl::detail::ArgDesc"** %12, align 8
  %14 = load %"class.cl::sycl::detail::ArgDesc"**, %"class.cl::sycl::detail::ArgDesc"*** %_Mylast, align 8
  store %"class.cl::sycl::detail::ArgDesc"* %13, %"class.cl::sycl::detail::ArgDesc"** %14, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

declare dllimport void @"?extractArgsAndReqsFromLambda@handler@sycl@cl@@AEAAXPEAD_KPEBUkernel_param_desc_t@detail@23@_N@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552), i8* noundef, i64 noundef, %"struct.cl::sycl::detail::kernel_param_desc_t"* noundef, i1 noundef zeroext) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?isESIMD@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SA_NXZ"() #2 comdat align 2 {
entry:
  ret i1 false
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(12) %"struct.cl::sycl::detail::kernel_param_desc_t"* @"?getParamDesc@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z"(i32 noundef %i) #2 comdat align 2 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %add = add i32 %0, 0
  %idxprom = zext i32 %add to i64
  %arrayidx = getelementptr inbounds [4 x %"struct.cl::sycl::detail::kernel_param_desc_t"], [4 x %"struct.cl::sycl::detail::kernel_param_desc_t"]* @"?kernel_signatures@detail@sycl@cl@@3QBUkernel_param_desc_t@123@B", i64 0, i64 %idxprom
  ret %"struct.cl::sycl::detail::kernel_param_desc_t"* %arrayidx
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i32 @"?getNumParams@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAIXZ"() #2 comdat align 2 {
entry:
  ret i32 2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?getName@?$KernelInfo@V?$__pf_kernel_wrapper@VFillBuffer@@@detail@sycl@cl@@@detail@sycl@cl@@SAPEBDXZ"() #2 comdat align 2 {
entry:
  ret i8* getelementptr inbounds ([92 x i8], [92 x i8]* @"??_C@_0FM@OMEJKKJL@_ZTSN2cl4sycl6detail19__pf_kerne@", i64 0, i64 0)
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i8* noundef %_Ptr) #4 comdat align 2 {
entry:
  %_Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %_Ptr.addr, align 8
  %call = call noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i8* noundef %0)
  ret %"class.std::basic_string"* %call
}

declare dllimport noundef i64 @"?getOSModuleHandle@OSUtil@detail@sycl@cl@@SA_JPEBX@Z"(i8* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??$ResetHostKernelHelper@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@34@AEAAPEAV1234@AEBV1234@@Z@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@12@AEBV3412@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %KernelFunc.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %NormalizedKernel = alloca %struct.NormalizedKernelType, align 8
  %NormalizedKernelFunc = alloca %"class.std::function.114", align 8
  %HostKernelPtr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  %agg.tmp = alloca %"class.std::function.114", align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %KernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  %call = call noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@0@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %NormalizedKernel, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0)
  %call2 = invoke noundef %"class.std::function.114"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %NormalizedKernel)
          to label %invoke.cont unwind label %ehcleanup11

invoke.cont:                                      ; preds = %entry
  %call4 = invoke noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 72) #18
          to label %invoke.cont3 unwind label %ehcleanup10

invoke.cont3:                                     ; preds = %invoke.cont
  %1 = bitcast i8* %call4 to %"class.cl::sycl::detail::HostKernel"*
  %call6 = invoke noundef %"class.std::function.114"* @"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %agg.tmp, %"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc)
          to label %invoke.cont5 unwind label %ehcleanup

invoke.cont5:                                     ; preds = %invoke.cont3
  %call8 = invoke noundef %"class.cl::sycl::detail::HostKernel"* @"??0?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAA@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %1, %"class.std::function.114"* noundef %agg.tmp)
          to label %invoke.cont7 unwind label %ehcleanup

invoke.cont7:                                     ; preds = %invoke.cont5
  store %"class.cl::sycl::detail::HostKernel"* %1, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %MHostKernel = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 17
  %2 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %3 = bitcast %"class.cl::sycl::detail::HostKernel"* %2 to %"class.cl::sycl::detail::HostKernelBase"*
  call void @"?reset@?$unique_ptr@VHostKernelBase@detail@sycl@cl@@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@@std@@QEAAXPEAVHostKernelBase@detail@sycl@cl@@@Z"(%"class.std::unique_ptr.83"* noundef nonnull align 8 dereferenceable(8) %MHostKernel, %"class.cl::sycl::detail::HostKernelBase"* noundef %3) #15
  %4 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %4, i32 0, i32 1
  %call9 = call noundef %struct.NormalizedKernelType* @"??$target@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAAPEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %MKernel) #15
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %call9, i32 0, i32 0
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc) #15
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@XZ"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %NormalizedKernel) #15
  ret %"class.cl::sycl::detail::RoundedRangeKernel"* %MKernelFunc

ehcleanup:                                        ; preds = %invoke.cont5, %invoke.cont3
  %5 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call4) #19 [ "funclet"(token %5) ]
  cleanupret from %5 unwind label %ehcleanup10

ehcleanup10:                                      ; preds = %ehcleanup, %invoke.cont
  %6 = cleanuppad within none []
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind label %ehcleanup11

ehcleanup11:                                      ; preds = %ehcleanup10, %entry
  %7 = cleanuppad within none []
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@XZ"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %NormalizedKernel) #15 [ "funclet"(token %7) ]
  cleanupret from %7 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@0@Z"(%struct.NormalizedKernelType* noundef nonnull returned align 8 dereferenceable(40) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelFunc) unnamed_addr #5 align 2 {
entry:
  %KernelFunc.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %struct.NormalizedKernelType*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %KernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  store %struct.NormalizedKernelType* %this, %struct.NormalizedKernelType** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %KernelFunc.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0) #15
  ret %struct.NormalizedKernelType* %this1
}

; Function Attrs: noinline optnone uwtable
define internal noundef %"class.std::function.114"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::function.114"* noundef nonnull returned align 8 dereferenceable(64) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Func) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Func.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %struct.NormalizedKernelType* %_Func, %struct.NormalizedKernelType** %_Func.addr, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %call = call noundef %"class.std::_Func_class.115"* @"??0?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0) #15
  %1 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %2 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Func.addr, align 8
  invoke void @"??$_Reset@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %1, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %2)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::function.114"* %this1

ehcleanup:                                        ; preds = %entry
  %3 = cleanuppad within none []
  %4 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  call void @"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %4) #15 [ "funclet"(token %3) ]
  cleanupret from %3 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.std::function.114"* @"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z"(%"class.std::function.114"* noundef nonnull returned align 8 dereferenceable(64) %this, %"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %_Right) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Right.addr = alloca %"class.std::function.114"*, align 8
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %"class.std::function.114"* %_Right, %"class.std::function.114"** %_Right.addr, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %call = call noundef %"class.std::_Func_class.115"* @"??0?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0) #15
  %1 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %2 = load %"class.std::function.114"*, %"class.std::function.114"** %_Right.addr, align 8
  %3 = bitcast %"class.std::function.114"* %2 to %"class.std::_Func_class.115"*
  invoke void @"?_Reset_copy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEBV12@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %1, %"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %3)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::function.114"* %this1

ehcleanup:                                        ; preds = %entry
  %4 = cleanuppad within none []
  %5 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  call void @"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %5) #15 [ "funclet"(token %4) ]
  cleanupret from %4 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::HostKernel"* @"??0?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAA@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull returned align 8 dereferenceable(72) %this, %"class.std::function.114"* noundef %Kernel) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to %"class.cl::sycl::detail::HostKernelBase"*
  %call = call noundef %"class.cl::sycl::detail::HostKernelBase"* @"??0HostKernelBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %this1, i32 0, i32 1
  %call2 = invoke noundef %"class.std::function.114"* @"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %MKernel, %"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %Kernel)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %Kernel) #15
  ret %"class.cl::sycl::detail::HostKernel"* %this1

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  %3 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to %"class.cl::sycl::detail::HostKernelBase"*
  call void @"??1HostKernelBase@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %3) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind label %ehcleanup3

ehcleanup3:                                       ; preds = %ehcleanup
  %4 = cleanuppad within none []
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %Kernel) #15 [ "funclet"(token %4) ]
  cleanupret from %4 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?reset@?$unique_ptr@VHostKernelBase@detail@sycl@cl@@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@@std@@QEAAXPEAVHostKernelBase@detail@sycl@cl@@@Z"(%"class.std::unique_ptr.83"* noundef nonnull align 8 dereferenceable(8) %this, %"class.cl::sycl::detail::HostKernelBase"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  %this.addr = alloca %"class.std::unique_ptr.83"*, align 8
  %_Old = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %_Ptr, %"class.cl::sycl::detail::HostKernelBase"** %_Ptr.addr, align 8
  store %"class.std::unique_ptr.83"* %this, %"class.std::unique_ptr.83"** %this.addr, align 8
  %this1 = load %"class.std::unique_ptr.83"*, %"class.std::unique_ptr.83"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::unique_ptr.83", %"class.std::unique_ptr.83"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.84", %"class.std::_Compressed_pair.84"* %_Mypair, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::HostKernelBase"* @"??$exchange@PEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@@std@@YAPEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@0@Z"(%"class.cl::sycl::detail::HostKernelBase"** noundef nonnull align 8 dereferenceable(8) %_Myval2, %"class.cl::sycl::detail::HostKernelBase"** noundef nonnull align 8 dereferenceable(8) %_Ptr.addr) #15
  store %"class.cl::sycl::detail::HostKernelBase"* %call, %"class.cl::sycl::detail::HostKernelBase"** %_Old, align 8
  %0 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %_Old, align 8
  %tobool = icmp ne %"class.cl::sycl::detail::HostKernelBase"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Mypair2 = getelementptr inbounds %"class.std::unique_ptr.83", %"class.std::unique_ptr.83"* %this1, i32 0, i32 0
  %call3 = call noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.85"* @"?_Get_first@?$_Compressed_pair@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@PEAVHostKernelBase@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@VHostKernelBase@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.84"* noundef nonnull align 8 dereferenceable(8) %_Mypair2) #15
  %1 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %_Old, align 8
  call void @"??R?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@QEBAXPEAVHostKernelBase@detail@sycl@cl@@@Z"(%"struct.std::default_delete.85"* noundef nonnull align 1 dereferenceable(1) %call3, %"class.cl::sycl::detail::HostKernelBase"* noundef %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType* @"??$target@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAAPEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %call = call noundef i8* @"?_Target@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBAPEBXAEBVtype_info@@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0, %class.type_info* noundef nonnull align 8 dereferenceable(24) bitcast (%rtti.TypeDescriptor359* @"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@@8" to %class.type_info*)) #15
  %1 = bitcast i8* %call to %struct.NormalizedKernelType*
  ret %struct.NormalizedKernelType* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  call void @"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@XZ"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %struct.NormalizedKernelType*, align 8
  store %struct.NormalizedKernelType* %this, %struct.NormalizedKernelType** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %this1, i32 0, i32 0
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull returned align 8 dereferenceable(40) %this, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %0, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %this, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %NumWorkItems = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  %NumWorkItems2 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %1, i32 0, i32 0
  %2 = bitcast %"class.cl::sycl::range"* %NumWorkItems to i8*
  %3 = bitcast %"class.cl::sycl::range"* %NumWorkItems2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %KernelFunc = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 1
  %4 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %.addr, align 8
  %KernelFunc3 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %4, i32 0, i32 1
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc3) #15
  ret %"class.cl::sycl::detail::RoundedRangeKernel"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_class.115"* @"??0?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull returned align 8 dereferenceable(64) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_class.115"* %this1 to %"struct.std::_Arg_types.116"*
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  call void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.118"* noundef null) #15
  ret %"class.std::_Func_class.115"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Reset@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Val) #4 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %struct.NormalizedKernelType* %_Val, %struct.NormalizedKernelType** %_Val.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %0 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Val.addr, align 8
  %call = call noundef zeroext i1 @"??$_Test_callable@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@std@@YA_NAEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %0) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %1 = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to i8*
  %2 = bitcast i8* %1 to %"class.std::_Func_impl_no_alloc.119"*
  %3 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Val.addr, align 8
  %call2 = call noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %2, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %3)
  %4 = bitcast %"class.std::_Func_impl_no_alloc.119"* %2 to %"class.std::_Func_base.118"*
  call void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.118"* noundef %4) #15
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  call void @"?_Tidy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %"class.std::_Func_base.118"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.std::_Func_base.118"*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_base.118"* %_Ptr, %"class.std::_Func_base.118"** %_Ptr.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %0 = load %"class.std::_Func_base.118"*, %"class.std::_Func_base.118"** %_Ptr.addr, align 8
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %_Ptrs = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to [8 x %"class.std::_Func_base.118"*]*
  %arrayidx = getelementptr inbounds [8 x %"class.std::_Func_base.118"*], [8 x %"class.std::_Func_base.118"*]* %_Ptrs, i64 0, i64 7
  store %"class.std::_Func_base.118"* %0, %"class.std::_Func_base.118"** %arrayidx, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef zeroext i1 @"??$_Test_callable@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@std@@YA_NAEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Arg) #2 {
entry:
  %_Arg.addr = alloca %struct.NormalizedKernelType*, align 8
  store %struct.NormalizedKernelType* %_Arg, %struct.NormalizedKernelType** %_Arg.addr, align 8
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull returned align 8 dereferenceable(48) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %struct.NormalizedKernelType* %_Val, %struct.NormalizedKernelType** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@AEBU0?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@123@AEAAPEAV4523@0@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %2) #15
  ret %"class.std::_Func_impl_no_alloc.119"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_base.118"*, align 8
  store %"class.std::_Func_base.118"* %this, %"class.std::_Func_base.118"** %this.addr, align 8
  %this1 = load %"class.std::_Func_base.118"*, %"class.std::_Func_base.118"** %this.addr, align 8
  ret %"class.std::_Func_base.118"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@AEBU0?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@123@AEAAPEAV4523@0@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull returned align 8 dereferenceable(40) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %struct.NormalizedKernelType*, align 8
  store %struct.NormalizedKernelType* %0, %struct.NormalizedKernelType** %.addr, align 8
  store %struct.NormalizedKernelType* %this, %struct.NormalizedKernelType** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %this1, i32 0, i32 0
  %1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %.addr, align 8
  %MKernelFunc2 = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc2) #15
  ret %struct.NormalizedKernelType* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %"class.std::_Func_base.118"* @"?_Copy@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this, i8* noundef %_Where) unnamed_addr #4 align 2 {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc.119"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %call = call noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0AEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %1, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee)
  %2 = bitcast %"class.std::_Func_impl_no_alloc.119"* %1 to %"class.std::_Func_base.118"*
  ret %"class.std::_Func_base.118"* %2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_base.118"* @"?_Move@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this, i8* noundef %_Where) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc.119"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %call = invoke noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@$$QEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %1, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  %2 = bitcast %"class.std::_Func_impl_no_alloc.119"* %1 to %"class.std::_Func_base.118"*
  ret %"class.std::_Func_base.118"* %2

terminate:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"?_Do_call@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAXAEBV?$nd_item@$00@sycl@cl@@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Args) unnamed_addr #4 align 2 {
entry:
  %_Args.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %"class.cl::sycl::nd_item"* %_Args, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  call void @"??$_Call@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@@?$_Invoker_ret@X@std@@SAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@AEBV?$nd_item@$00@45@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef nonnull align 8 dereferenceable(24) %class.type_info* @"?_Target_type@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAAEBVtype_info@@XZ"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  ret %class.type_info* bitcast (%rtti.TypeDescriptor359* @"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@@8" to %class.type_info*)
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal void @"?_Delete_this@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAX_N@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this, i1 noundef zeroext %_Dealloc) unnamed_addr #2 align 2 {
entry:
  %_Dealloc.addr = alloca i8, align 1
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  %frombool = zext i1 %_Dealloc to i8
  store i8 %frombool, i8* %_Dealloc.addr, align 1
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  call void @"??1?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@XZ"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this1) #15
  %0 = load i8, i8* %_Dealloc.addr, align 1
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to i8*
  call void @"??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z"(i8* noundef %1, i64 noundef 48) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef i8* @"?_Get@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEBXXZ"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %0 = bitcast %struct.NormalizedKernelType* %_Callee to i8*
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0AEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEBUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull returned align 8 dereferenceable(48) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %struct.NormalizedKernelType* %_Val, %struct.NormalizedKernelType** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@AEBU0?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@123@AEAAPEAV4523@0@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %2) #15
  ret %"class.std::_Func_impl_no_alloc.119"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.119"* @"??$?0UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@$$QEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@@Z"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull returned align 8 dereferenceable(48) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %struct.NormalizedKernelType* %_Val, %struct.NormalizedKernelType** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.119"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@$$QEAU0?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@123@AEAAPEAV4523@0@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %2) #15
  ret %"class.std::_Func_impl_no_alloc.119"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType* @"??0NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@$$QEAU0?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@123@AEAAPEAV4523@0@Z@@Z"(%struct.NormalizedKernelType* noundef nonnull returned align 8 dereferenceable(40) %this, %struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %struct.NormalizedKernelType*, align 8
  %this.addr = alloca %struct.NormalizedKernelType*, align 8
  store %struct.NormalizedKernelType* %0, %struct.NormalizedKernelType** %.addr, align 8
  store %struct.NormalizedKernelType* %this, %struct.NormalizedKernelType** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %this1, i32 0, i32 0
  %1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %.addr, align 8
  %MKernelFunc2 = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@$$QEAV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc2) #15
  ret %struct.NormalizedKernelType* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Call@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@@?$_Invoker_ret@X@std@@SAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@45@AEBV6745@@Z@AEBV?$nd_item@$00@45@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Func, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Vals) #4 align 2 {
entry:
  %_Vals.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %_Func.addr = alloca %struct.NormalizedKernelType*, align 8
  store %"class.cl::sycl::nd_item"* %_Vals, %"class.cl::sycl::nd_item"** %_Vals.addr, align 8
  store %struct.NormalizedKernelType* %_Func, %struct.NormalizedKernelType** %_Func.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Vals.addr, align 8
  %1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Func.addr, align 8
  call void @"??$invoke@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@$$V@std@@YAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %1, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$invoke@AEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@$$V@std@@YAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@AEBV?$nd_item@$00@34@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Obj, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Arg1) #4 {
entry:
  %_Arg1.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %_Obj.addr = alloca %struct.NormalizedKernelType*, align 8
  store %"class.cl::sycl::nd_item"* %_Arg1, %"class.cl::sycl::nd_item"** %_Arg1.addr, align 8
  store %struct.NormalizedKernelType* %_Obj, %struct.NormalizedKernelType** %_Obj.addr, align 8
  %0 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %_Obj.addr, align 8
  %1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Arg1.addr, align 8
  call void @"??RNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAAXAEBV?$nd_item@$00@23@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %0, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??RNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAAXAEBV?$nd_item@$00@23@@Z"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %Arg) #4 align 2 {
entry:
  %Arg.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %this.addr = alloca %struct.NormalizedKernelType*, align 8
  %Item = alloca %"class.cl::sycl::item", align 8
  %ref.tmp = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp2 = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp3 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp = alloca %"class.cl::sycl::item", align 8
  %agg.tmp4 = alloca %"class.cl::sycl::detail::RoundedRangeKernel", align 8
  store %"class.cl::sycl::nd_item"* %Arg, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  store %struct.NormalizedKernelType* %this, %struct.NormalizedKernelType** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType*, %struct.NormalizedKernelType** %this.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_offset@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp)
  %1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_global_id@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %1, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp2)
  %2 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_global_range@?$nd_item@$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %2, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %ref.tmp3)
  call void @"??$createItem@$00$00@Builder@detail@sycl@cl@@SA?AV?$item@$00$00@23@AEBV?$range@$00@23@AEBV?$id@$00@23@1@Z"(%"class.cl::sycl::item"* sret(%"class.cl::sycl::item") align 8 %Item, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp3, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  %3 = bitcast %"class.cl::sycl::item"* %agg.tmp to i8*
  %4 = bitcast %"class.cl::sycl::item"* %Item to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType, %struct.NormalizedKernelType* %this1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::RoundedRangeKernel"* @"??0?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %agg.tmp4, %"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %MKernelFunc) #15
  call void @"??$runKernelWithArg@V?$item@$00$00@sycl@cl@@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@@detail@sycl@cl@@YAXV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@012@V?$item@$00$00@12@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef %agg.tmp4, %"class.cl::sycl::item"* noundef %agg.tmp)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$createItem@$00$00@Builder@detail@sycl@cl@@SA?AV?$item@$00$00@23@AEBV?$range@$00@23@AEBV?$id@$00@23@1@Z"(%"class.cl::sycl::item"* noalias sret(%"class.cl::sycl::item") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Extent, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %Index, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %Offset) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %Offset.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %Index.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %Extent.addr = alloca %"class.cl::sycl::range"*, align 8
  %0 = bitcast %"class.cl::sycl::item"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::id.27"* %Offset, %"class.cl::sycl::id.27"** %Offset.addr, align 8
  store %"class.cl::sycl::id.27"* %Index, %"class.cl::sycl::id.27"** %Index.addr, align 8
  store %"class.cl::sycl::range"* %Extent, %"class.cl::sycl::range"** %Extent.addr, align 8
  %1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %Offset.addr, align 8
  %2 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %Index.addr, align 8
  %3 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Extent.addr, align 8
  %call = call noundef %"class.cl::sycl::item"* @"??$?0$00@?$item@$00$00@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@1@Z"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %3, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?get_offset@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_item"* %this, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %globalItem = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 0
  call void @"??$get_offset@$00@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@12@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %globalItem, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %agg.result)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?get_global_id@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_item"* %this, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %globalItem = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 0
  call void @"?get_id@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %globalItem, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %agg.result)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?get_global_range@?$nd_item@$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_item"* %this, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %globalItem = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 0
  call void @"?get_range@?$item@$00$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %globalItem, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %agg.result)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$runKernelWithArg@V?$item@$00$00@sycl@cl@@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@@detail@sycl@cl@@YAXV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@012@V?$item@$00$00@12@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef %KernelName, %"class.cl::sycl::item"* noundef %Arg) #4 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %agg.tmp = alloca %"class.cl::sycl::item", align 8
  %0 = bitcast %"class.cl::sycl::item"* %agg.tmp to i8*
  %1 = bitcast %"class.cl::sycl::item"* %Arg to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  invoke void @"??R?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEBAXV?$item@$00$00@23@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelName, %"class.cl::sycl::item"* noundef %agg.tmp)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelName) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %KernelName) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::item"* @"??$?0$00@?$item@$00$00@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@1@Z"(%"class.cl::sycl::item"* noundef nonnull returned align 8 dereferenceable(24) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %extent, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %index, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %offset) unnamed_addr #5 comdat align 2 {
entry:
  %offset.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %index.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %extent.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"class.cl::sycl::item"*, align 8
  store %"class.cl::sycl::id.27"* %offset, %"class.cl::sycl::id.27"** %offset.addr, align 8
  store %"class.cl::sycl::id.27"* %index, %"class.cl::sycl::id.27"** %index.addr, align 8
  store %"class.cl::sycl::range"* %extent, %"class.cl::sycl::range"** %extent.addr, align 8
  store %"class.cl::sycl::item"* %this, %"class.cl::sycl::item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1, i32 0, i32 0
  %MExtent = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 0
  %0 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %extent.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %MExtent to i8*
  %2 = bitcast %"class.cl::sycl::range"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %MIndex = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 1
  %3 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %index.addr, align 8
  %4 = bitcast %"class.cl::sycl::id.27"* %MIndex to i8*
  %5 = bitcast %"class.cl::sycl::id.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  %MOffset = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 2
  %6 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %offset.addr, align 8
  %7 = bitcast %"class.cl::sycl::id.27"* %MOffset to i8*
  %8 = bitcast %"class.cl::sycl::id.27"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 8, i1 false)
  ret %"class.cl::sycl::item"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$get_offset@$00@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@12@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %this, %"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::item"*, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::item"* %this, %"class.cl::sycl::item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1, i32 0, i32 0
  %MOffset = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 2
  %1 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::id.27"* %MOffset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_id@?$item@$00$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %this, %"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::item"*, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::item"* %this, %"class.cl::sycl::item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1, i32 0, i32 0
  %MIndex = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 1
  %1 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::id.27"* %MIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_range@?$item@$00$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %this, %"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::item"*, align 8
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::item"* %this, %"class.cl::sycl::item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1, i32 0, i32 0
  %MExtent = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 0
  %1 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::range"* %MExtent to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??R?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@QEBAXV?$item@$00$00@23@@Z"(%"class.cl::sycl::detail::RoundedRangeKernel"* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::item"* noundef %Arg) #4 align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::item"*, align 8
  %Id.i = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::detail::RoundedRangeKernel"*, align 8
  %agg.tmp = alloca %"class.cl::sycl::range", align 8
  %agg.tmp5 = alloca %"class.cl::sycl::id.27", align 8
  store %"class.cl::sycl::detail::RoundedRangeKernel"* %this, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::RoundedRangeKernel"*, %"class.cl::sycl::detail::RoundedRangeKernel"** %this.addr, align 8
  store i32 0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::item"* %Arg, %"class.cl::sycl::item"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr.i, align 8
  %MImpl.i = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1.i, i32 0, i32 0
  %MIndex.i = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl.i, i32 0, i32 1
  %0 = bitcast %"class.cl::sycl::id.27"* %MIndex.i to %"class.cl::sycl::detail::array"*
  %1 = load i32, i32* %dimension.addr.i, align 4
  %call.i = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %0, i32 noundef %1)
  store i64 %call.i, i64* %Id.i, align 8
  %2 = load i64, i64* %Id.i, align 8
  %cmp.i = icmp ule i64 %2, 2147483647
  call void @llvm.assume(i1 %cmp.i)
  %3 = load i64, i64* %Id.i, align 8
  %NumWorkItems = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 0
  %4 = bitcast %"class.cl::sycl::range"* %NumWorkItems to %"class.cl::sycl::detail::array"*
  %call2 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %4, i32 noundef 0)
  %cmp = icmp uge i64 %3, %call2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %NumWorkItems3 = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 0
  %5 = bitcast %"class.cl::sycl::range"* %agg.tmp to i8*
  %6 = bitcast %"class.cl::sycl::range"* %NumWorkItems3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 8, i1 false)
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp, i32 0, i32 0
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %7 = bitcast [1 x i64]* %coerce.dive4 to i64*
  %8 = load i64, i64* %7, align 8
  call void @"?set_allowed_range@?$item@$00$00@sycl@cl@@AEAAXV?$range@$00@23@@Z"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %Arg, i64 %8)
  %KernelFunc = getelementptr inbounds %"class.cl::sycl::detail::RoundedRangeKernel", %"class.cl::sycl::detail::RoundedRangeKernel"* %this1, i32 0, i32 1
  %call6 = call noundef %"class.cl::sycl::id.27"* @"??$?0$00$00@?$id@$00@sycl@cl@@QEAA@AEBV?$item@$00$00@12@@Z"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.tmp5, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %Arg)
  %coerce.dive7 = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp5, i32 0, i32 0
  %coerce.dive8 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive7, i32 0, i32 0
  %9 = bitcast [1 x i64]* %coerce.dive8 to i64*
  %10 = load i64, i64* %9, align 8
  call void @"??R<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEBA?A?2@V?$id@$00@45@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc, i64 %10)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?set_allowed_range@?$item@$00$00@sycl@cl@@AEAAXV?$range@$00@23@@Z"(%"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %this, i64 %rnwi.coerce) #2 comdat align 2 {
entry:
  %rnwi = alloca %"class.cl::sycl::range", align 8
  %this.addr = alloca %"class.cl::sycl::item"*, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %rnwi, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %rnwi.coerce, i64* %0, align 8
  store %"class.cl::sycl::item"* %this, %"class.cl::sycl::item"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this2, i32 0, i32 0
  %MExtent = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl, i32 0, i32 0
  %1 = bitcast %"class.cl::sycl::range"* %MExtent to i8*
  %2 = bitcast %"class.cl::sycl::range"* %rnwi to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??R<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEBA?A?2@V?$id@$00@45@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %this, i64 %WIid.coerce) #4 align 2 {
entry:
  %WIid = alloca %"class.cl::sycl::id.27", align 8
  %this.addr = alloca %class.anon.113*, align 8
  %agg.tmp = alloca %"class.cl::sycl::id.27", align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %WIid, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %WIid.coerce, i64* %0, align 8
  store %class.anon.113* %this, %class.anon.113** %this.addr, align 8
  %this2 = load %class.anon.113*, %class.anon.113** %this.addr, align 8
  %call = call noundef float @"?ir_sum@@YAMMM@Z"(float noundef 1.000000e+01, float noundef 2.000000e+01)
  %conv = fptosi float %call to i32
  %Accessor = getelementptr inbounds %class.anon.113, %class.anon.113* %this2, i32 0, i32 0
  %1 = bitcast %"class.cl::sycl::id.27"* %agg.tmp to i8*
  %2 = bitcast %"class.cl::sycl::id.27"* %WIid to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %coerce.dive3 = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp, i32 0, i32 0
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive3, i32 0, i32 0
  %3 = bitcast [1 x i64]* %coerce.dive4 to i64*
  %4 = load i64, i64* %3, align 8
  %call5 = call noundef nonnull align 4 dereferenceable(4) i32* @"??$?A$00X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEAHV?$id@$00@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %Accessor, i64 %4)
  store i32 %conv, i32* %call5, align 4
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::id.27"* @"??$?0$00$00@?$id@$00@sycl@cl@@QEAA@AEBV?$item@$00$00@12@@Z"(%"class.cl::sycl::id.27"* noundef nonnull returned align 8 dereferenceable(8) %this, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %item) unnamed_addr #6 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::item"*, align 8
  %Id.i = alloca i64, align 8
  %item.addr = alloca %"class.cl::sycl::item"*, align 8
  %this.addr = alloca %"class.cl::sycl::id.27"*, align 8
  store %"class.cl::sycl::item"* %item, %"class.cl::sycl::item"** %item.addr, align 8
  store %"class.cl::sycl::id.27"* %this, %"class.cl::sycl::id.27"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %this1 to %"class.cl::sycl::detail::array"*
  %1 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %item.addr, align 8
  store i32 0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::item"* %1, %"class.cl::sycl::item"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %this.addr.i, align 8
  %MImpl.i = getelementptr inbounds %"class.cl::sycl::item", %"class.cl::sycl::item"* %this1.i, i32 0, i32 0
  %MIndex.i = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase", %"struct.cl::sycl::detail::ItemBase"* %MImpl.i, i32 0, i32 1
  %2 = bitcast %"class.cl::sycl::id.27"* %MIndex.i to %"class.cl::sycl::detail::array"*
  %3 = load i32, i32* %dimension.addr.i, align 4
  %call.i = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %2, i32 noundef %3)
  store i64 %call.i, i64* %Id.i, align 8
  %4 = load i64, i64* %Id.i, align 8
  %cmp.i = icmp ule i64 %4, 2147483647
  call void @llvm.assume(i1 %cmp.i)
  %5 = load i64, i64* %Id.i, align 8
  %call2 = call noundef %"class.cl::sycl::detail::array"* @"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %0, i64 noundef %5)
  ret %"class.cl::sycl::id.27"* %this1
}

; Function Attrs: inaccessiblememonly nocallback nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #14

declare dso_local noundef float @"?ir_sum@@YAMMM@Z"(float noundef, float noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(4) i32* @"??$?A$00X@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEBAAEAHV?$id@$00@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this, i64 %Index.coerce) #4 comdat align 2 {
entry:
  %Index = alloca %"class.cl::sycl::id.27", align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %LinearIndex = alloca i64, align 8
  %agg.tmp = alloca %"class.cl::sycl::id.27", align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %Index, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %Index.coerce, i64* %0, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::id.27"* %agg.tmp to i8*
  %2 = bitcast %"class.cl::sycl::id.27"* %Index to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %coerce.dive3 = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp, i32 0, i32 0
  %coerce.dive4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive3, i32 0, i32 0
  %3 = bitcast [1 x i64]* %coerce.dive4 to i64*
  %4 = load i64, i64* %3, align 8
  %call = call noundef i64 @"??$getLinearIndex@$00@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this2, i64 %4)
  store i64 %call, i64* %LinearIndex, align 8
  %call5 = call noundef i32* @"?getQualifiedPtr@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this2)
  %5 = load i64, i64* %LinearIndex, align 8
  %arrayidx = getelementptr inbounds i32, i32* %call5, i64 %5
  ret i32* %arrayidx
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"??$getLinearIndex@$00@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this, i64 %Id.coerce) #4 comdat align 2 {
entry:
  %Id = alloca %"class.cl::sycl::id.27", align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %Result = alloca i64, align 8
  %I = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %Id, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %Id.coerce, i64* %0, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  store i64 0, i64* %Result, align 8
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %Result, align 8
  %3 = bitcast %"class.cl::sycl::accessor.110"* %this2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::range.26"* @"?getMemoryRange@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$range@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %3)
  %4 = bitcast %"class.cl::sycl::range.26"* %call to %"class.cl::sycl::detail::array.25"*
  %5 = load i32, i32* %I, align 4
  %call3 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %5)
  %mul = mul i64 %2, %call3
  %6 = bitcast %"class.cl::sycl::id.27"* %Id to %"class.cl::sycl::detail::array"*
  %7 = load i32, i32* %I, align 4
  %call4 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %6, i32 noundef %7)
  %8 = load i64, i64* %call4, align 8
  %add = add i64 %mul, %8
  store i64 %add, i64* %Result, align 8
  %9 = bitcast %"class.cl::sycl::accessor.110"* %this2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call5 = call noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::id"* @"?getOffset@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$id@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %9)
  %10 = bitcast %"class.cl::sycl::id"* %call5 to %"class.cl::sycl::detail::array.25"*
  %11 = load i32, i32* %I, align 4
  %call6 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %11)
  %12 = load i64, i64* %Result, align 8
  %add7 = add i64 %12, %call6
  store i64 %add7, i64* %Result, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %I, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !27

for.end:                                          ; preds = %for.cond
  %14 = load i64, i64* %Result, align 8
  ret i64 %14
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i32* @"?getQualifiedPtr@?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ"(%"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %this) #4 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef i8* @"?getPtr@AccessorBaseHost@detail@sycl@cl@@IEBAPEAXXZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0)
  %1 = bitcast i8* %call to i32*
  ret i32* %1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::range.26"* @"?getMemoryRange@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$range@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??$?CVAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  %MMemoryRange = getelementptr inbounds %"class.cl::sycl::detail::AccessorImplHost", %"class.cl::sycl::detail::AccessorImplHost"* %call, i32 0, i32 2
  ret %"class.cl::sycl::range.26"* %MMemoryRange
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %this, i32 noundef %dimension) #4 comdat align 2 {
entry:
  %dimension.addr.i = alloca i32, align 4
  %this.addr.i = alloca %"class.cl::sycl::detail::array.25"*, align 8
  %tmp.i = alloca %"class.cl::sycl::invalid_parameter_error", align 8
  %dimension.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::array.25"*, align 8
  store i32 %dimension, i32* %dimension.addr, align 4
  store %"class.cl::sycl::detail::array.25"* %this, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %0 = load i32, i32* %dimension.addr, align 4
  store i32 %0, i32* %dimension.addr.i, align 4
  store %"class.cl::sycl::detail::array.25"* %this1, %"class.cl::sycl::detail::array.25"** %this.addr.i, align 8
  %this1.i = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr.i, align 8
  %1 = load i32, i32* %dimension.addr.i, align 4
  %cmp.i = icmp sge i32 %1, 3
  br i1 %cmp.i, label %if.then.i, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %entry
  %2 = load i32, i32* %dimension.addr.i, align 4
  %cmp2.i = icmp slt i32 %2, 0
  br i1 %cmp2.i, label %if.then.i, label %"?check_dimension@?$array@$02@detail@sycl@cl@@IEBAXH@Z.exit"

if.then.i:                                        ; preds = %lor.lhs.false.i, %entry
  %call.i = call noundef %"class.cl::sycl::invalid_parameter_error"* @"??0invalid_parameter_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_parameter_error"* noundef nonnull align 8 dereferenceable(80) %tmp.i, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @"??_C@_0BD@KNGCOGKE@Index?5out?5of?5range?$AA@", i64 0, i64 0), i32 noundef -30)
  %3 = bitcast %"class.cl::sycl::invalid_parameter_error"* %tmp.i to i8*
  call void @_CxxThrowException(i8* %3, %eh.ThrowInfo* @"_TI4?AVinvalid_parameter_error@sycl@cl@@") #17
  unreachable

"?check_dimension@?$array@$02@detail@sycl@cl@@IEBAXH@Z.exit": ; preds = %lor.lhs.false.i
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %this1, i32 0, i32 0
  %4 = load i32, i32* %dimension.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [3 x i64], [3 x i64]* %common_array, i64 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  ret i64 %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::id"* @"?getOffset@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$id@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??$?CVAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  %MOffset = getelementptr inbounds %"class.cl::sycl::detail::AccessorImplHost", %"class.cl::sycl::detail::AccessorImplHost"* %call, i32 0, i32 0
  ret %"class.cl::sycl::id"* %MOffset
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??$?CVAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %call = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  ret %"class.cl::sycl::detail::AccessorImplHost"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?getPtr@AccessorBaseHost@detail@sycl@cl@@IEBAPEAXXZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %call = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"??$?CVAccessorImplHost@detail@sycl@cl@@$0A@@?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl) #15
  %MData = getelementptr inbounds %"class.cl::sycl::detail::AccessorImplHost", %"class.cl::sycl::detail::AccessorImplHost"* %call, i32 0, i32 9
  %0 = load i8*, i8** %MData, align 8
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@34@AEBV5634@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@XZ"(%"class.std::_Func_impl_no_alloc.119"* noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.119"*, align 8
  store %"class.std::_Func_impl_no_alloc.119"* %this, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.119"*, %"class.std::_Func_impl_no_alloc.119"** %this.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.119", %"class.std::_Func_impl_no_alloc.119"* %this1, i32 0, i32 1
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@V?$item@$00$00@34@$00@handler@sycl@cl@@AEAAPEAV?$RoundedRangeKernel@V?$item@$00$00@sycl@cl@@$00V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@23@AEBV4523@@Z@QEAA@XZ"(%struct.NormalizedKernelType* noundef nonnull align 8 dereferenceable(40) %_Callee) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z"(i8* noundef %_Ptr, i64 noundef %_Bytes) #2 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Bytes.addr = alloca i64, align 8
  %_Ptr.addr = alloca i8*, align 8
  store i64 %_Bytes, i64* %_Bytes.addr, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  %0 = load i64, i64* %_Bytes.addr, align 8
  %cmp = icmp uge i64 %0, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  invoke void @"?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr.addr, i64* noundef nonnull align 8 dereferenceable(8) %_Bytes.addr)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %1 = load i64, i64* %_Bytes.addr, align 8
  %2 = load i8*, i8** %_Ptr.addr, align 8
  call void @"??3@YAXPEAX_K@Z"(i8* noundef %2, i64 noundef %1) #15
  ret void

terminate:                                        ; preds = %if.then
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Tidy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %call = call noundef zeroext i1 @"?_Empty@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2 = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %call3 = call noundef zeroext i1 @"?_Local@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %lnot = xor i1 %call3, true
  %0 = bitcast %"class.std::_Func_base.118"* %call2 to void (%"class.std::_Func_base.118"*, i1)***
  %vtable = load void (%"class.std::_Func_base.118"*, i1)**, void (%"class.std::_Func_base.118"*, i1)*** %0, align 8
  %vfn = getelementptr inbounds void (%"class.std::_Func_base.118"*, i1)*, void (%"class.std::_Func_base.118"*, i1)** %vtable, i64 4
  %1 = load void (%"class.std::_Func_base.118"*, i1)*, void (%"class.std::_Func_base.118"*, i1)** %vfn, align 8
  call void %1(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %call2, i1 noundef zeroext %lnot) #15
  call void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.118"* noundef null) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Empty@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %call = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %tobool = icmp ne %"class.std::_Func_base.118"* %call, null
  %lnot = xor i1 %tobool, true
  ret i1 %lnot
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %_Ptrs = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to [8 x %"class.std::_Func_base.118"*]*
  %arrayidx = getelementptr inbounds [8 x %"class.std::_Func_base.118"*], [8 x %"class.std::_Func_base.118"*]* %_Ptrs, i64 0, i64 7
  %0 = load %"class.std::_Func_base.118"*, %"class.std::_Func_base.118"** %arrayidx, align 8
  ret %"class.std::_Func_base.118"* %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Local@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %call = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %0 = bitcast %"class.std::_Func_base.118"* %call to i8*
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %1 = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to i8*
  %cmp = icmp eq i8* %0, %1
  ret i1 %cmp
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?_Reset_copy@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEBV12@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %_Right) #4 comdat align 2 {
entry:
  %_Right.addr = alloca %"class.std::_Func_class.115"*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %"class.std::_Func_class.115"* %_Right, %"class.std::_Func_class.115"** %_Right.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %0 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %_Right.addr, align 8
  %call = call noundef zeroext i1 @"?_Empty@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %_Right.addr, align 8
  %call2 = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %1) #15
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %2 = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to i8*
  %3 = bitcast %"class.std::_Func_base.118"* %call2 to %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)***
  %vtable = load %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)**, %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)*** %3, align 8
  %vfn = getelementptr inbounds %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)*, %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)** %vtable, i64 0
  %4 = load %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)*, %"class.std::_Func_base.118"* (%"class.std::_Func_base.118"*, i8*)** %vfn, align 8
  %call3 = call noundef %"class.std::_Func_base.118"* %4(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %call2, i8* noundef %2)
  call void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.118"* noundef %call3) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::HostKernelBase"* @"??0HostKernelBase@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %this, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::HostKernelBase"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7HostKernelBase@detail@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  ret %"class.cl::sycl::detail::HostKernelBase"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1HostKernelBase@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %this, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?call@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAXAEBVNDRDescT@234@PEAVHostProfilingInfo@234@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %NDRDesc, %"class.cl::sycl::detail::HostProfilingInfo"* noundef %HPI) unnamed_addr #4 comdat align 2 {
entry:
  %HPI.addr = alloca %"class.cl::sycl::detail::HostProfilingInfo"*, align 8
  %NDRDesc.addr = alloca %"class.cl::sycl::detail::NDRDescT"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  %AdjustedRange = alloca %"class.cl::sycl::detail::NDRDescT", align 8
  %WGsize = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp = alloca %"class.cl::sycl::nd_range", align 8
  %agg.tmp5 = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp6 = alloca %"class.cl::sycl::range.26", align 8
  %I = alloca i64, align 8
  store %"class.cl::sycl::detail::HostProfilingInfo"* %HPI, %"class.cl::sycl::detail::HostProfilingInfo"** %HPI.addr, align 8
  store %"class.cl::sycl::detail::NDRDescT"* %NDRDesc, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %1 = bitcast %"class.cl::sycl::detail::NDRDescT"* %AdjustedRange to i8*
  %2 = bitcast %"class.cl::sycl::detail::NDRDescT"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 104, i1 false)
  %3 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %GlobalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %3, i32 0, i32 0
  %4 = bitcast %"class.cl::sycl::range.26"* %GlobalSize to %"class.cl::sycl::detail::array.25"*
  %call = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %4, i32 noundef 0)
  %cmp = icmp eq i64 %call, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %5 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %NumWorkGroups = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %5, i32 0, i32 3
  %6 = bitcast %"class.cl::sycl::range.26"* %NumWorkGroups to %"class.cl::sycl::detail::array.25"*
  %call2 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %6, i32 noundef 0)
  %cmp3 = icmp ne i64 %call2, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call4 = call noundef %"class.cl::sycl::range.26"* @"??$?0$02@?$range@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %WGsize, i64 noundef 1, i64 noundef 1, i64 noundef 1)
  %7 = bitcast %"class.cl::sycl::range.26"* %agg.tmp5 to i8*
  %8 = bitcast %"class.cl::sycl::range.26"* %WGsize to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false)
  %9 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %NumWorkGroups7 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %9, i32 0, i32 3
  call void @"??Dsycl@cl@@YA?AV?$range@$02@01@AEBV201@0@Z"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.tmp6, %"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %NumWorkGroups7, %"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %WGsize)
  %call8 = call noundef %"class.cl::sycl::nd_range"* @"??0?$nd_range@$02@sycl@cl@@QEAA@V?$range@$02@12@0@Z"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %agg.tmp, %"class.cl::sycl::range.26"* noundef %agg.tmp6, %"class.cl::sycl::range.26"* noundef %agg.tmp5)
  %10 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %Dims = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %10, i32 0, i32 4
  %11 = load i64, i64* %Dims, align 8
  %conv = trunc i64 %11 to i32
  call void @"?set@NDRDescT@detail@sycl@cl@@QEAAXHV?$nd_range@$02@34@@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %AdjustedRange, i32 noundef %conv, %"class.cl::sycl::nd_range"* noundef %agg.tmp)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %LocalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %AdjustedRange, i32 0, i32 1
  %12 = bitcast %"class.cl::sycl::range.26"* %LocalSize to %"class.cl::sycl::detail::array.25"*
  %call9 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %12, i32 noundef 0)
  %13 = load i64, i64* %call9, align 8
  %cmp10 = icmp eq i64 %13, 0
  br i1 %cmp10, label %if.then11, label %if.end17

if.then11:                                        ; preds = %if.end
  store i64 0, i64* %I, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then11
  %14 = load i64, i64* %I, align 8
  %Dims12 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %AdjustedRange, i32 0, i32 4
  %15 = load i64, i64* %Dims12, align 8
  %cmp13 = icmp ult i64 %14, %15
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %LocalSize14 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %AdjustedRange, i32 0, i32 1
  %16 = bitcast %"class.cl::sycl::range.26"* %LocalSize14 to %"class.cl::sycl::detail::array.25"*
  %17 = load i64, i64* %I, align 8
  %conv15 = trunc i64 %17 to i32
  %call16 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %16, i32 noundef %conv15)
  store i64 1, i64* %call16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %I, align 8
  %inc = add i64 %18, 1
  store i64 %inc, i64* %I, align 8
  br label %for.cond, !llvm.loop !29

for.end:                                          ; preds = %for.cond
  br label %if.end17

if.end17:                                         ; preds = %for.end, %if.end
  %19 = load %"class.cl::sycl::detail::HostProfilingInfo"*, %"class.cl::sycl::detail::HostProfilingInfo"** %HPI.addr, align 8
  %tobool = icmp ne %"class.cl::sycl::detail::HostProfilingInfo"* %19, null
  br i1 %tobool, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.end17
  %20 = load %"class.cl::sycl::detail::HostProfilingInfo"*, %"class.cl::sycl::detail::HostProfilingInfo"** %HPI.addr, align 8
  call void @"?start@HostProfilingInfo@detail@sycl@cl@@QEAAXXZ"(%"class.cl::sycl::detail::HostProfilingInfo"* noundef nonnull align 8 dereferenceable(16) %20)
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %if.end17
  call void @"??$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@123@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this1, %"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %AdjustedRange)
  %21 = load %"class.cl::sycl::detail::HostProfilingInfo"*, %"class.cl::sycl::detail::HostProfilingInfo"** %HPI.addr, align 8
  %tobool20 = icmp ne %"class.cl::sycl::detail::HostProfilingInfo"* %21, null
  br i1 %tobool20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end19
  %22 = load %"class.cl::sycl::detail::HostProfilingInfo"*, %"class.cl::sycl::detail::HostProfilingInfo"** %HPI.addr, align 8
  call void @"?end@HostProfilingInfo@detail@sycl@cl@@QEAAXXZ"(%"class.cl::sycl::detail::HostProfilingInfo"* noundef nonnull align 8 dereferenceable(16) %22)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end19
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?getPtr@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEADXZ"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %this1, i32 0, i32 1
  %0 = bitcast %"class.std::function.114"* %MKernel to i8*
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_G?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_GHostKernelBase@detail@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::detail::HostKernelBase"* %this, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::HostKernelBase"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @llvm.trap() #16
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?set@NDRDescT@detail@sycl@cl@@QEAAXHV?$nd_range@$02@34@@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %this, i32 noundef %Dims_, %"class.cl::sycl::nd_range"* noundef %ExecutionRange) #4 comdat align 2 {
entry:
  %Dims_.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::detail::NDRDescT"*, align 8
  %I = alloca i32, align 4
  %ref.tmp = alloca %"class.cl::sycl::range.26", align 8
  %ref.tmp3 = alloca %"class.cl::sycl::range.26", align 8
  %ref.tmp6 = alloca %"class.cl::sycl::id", align 8
  store i32 %Dims_, i32* %Dims_.addr, align 4
  store %"class.cl::sycl::detail::NDRDescT"* %this, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %this.addr, align 8
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %I, align 4
  %1 = load i32, i32* %Dims_.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @"?get_global_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %ExecutionRange, %"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %ref.tmp)
  %2 = bitcast %"class.cl::sycl::range.26"* %ref.tmp to %"class.cl::sycl::detail::array.25"*
  %3 = load i32, i32* %I, align 4
  %call = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3)
  %4 = load i64, i64* %call, align 8
  %GlobalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 0
  %5 = bitcast %"class.cl::sycl::range.26"* %GlobalSize to %"class.cl::sycl::detail::array.25"*
  %6 = load i32, i32* %I, align 4
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %6)
  store i64 %4, i64* %call2, align 8
  call void @"?get_local_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %ExecutionRange, %"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %ref.tmp3)
  %7 = bitcast %"class.cl::sycl::range.26"* %ref.tmp3 to %"class.cl::sycl::detail::array.25"*
  %8 = load i32, i32* %I, align 4
  %call4 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %7, i32 noundef %8)
  %9 = load i64, i64* %call4, align 8
  %LocalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 1
  %10 = bitcast %"class.cl::sycl::range.26"* %LocalSize to %"class.cl::sycl::detail::array.25"*
  %11 = load i32, i32* %I, align 4
  %call5 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %11)
  store i64 %9, i64* %call5, align 8
  call void @"?get_offset@?$nd_range@$02@sycl@cl@@QEBA?AV?$id@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %ExecutionRange, %"class.cl::sycl::id"* sret(%"class.cl::sycl::id") align 8 %ref.tmp6)
  %12 = bitcast %"class.cl::sycl::id"* %ref.tmp6 to %"class.cl::sycl::detail::array.25"*
  %13 = load i32, i32* %I, align 4
  %call7 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %12, i32 noundef %13)
  %14 = load i64, i64* %call7, align 8
  %GlobalOffset = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 2
  %15 = bitcast %"class.cl::sycl::id"* %GlobalOffset to %"class.cl::sycl::detail::array.25"*
  %16 = load i32, i32* %I, align 4
  %call8 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %15, i32 noundef %16)
  store i64 %14, i64* %call8, align 8
  %NumWorkGroups = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 3
  %17 = bitcast %"class.cl::sycl::range.26"* %NumWorkGroups to %"class.cl::sycl::detail::array.25"*
  %18 = load i32, i32* %I, align 4
  %call9 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$02@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %17, i32 noundef %18)
  store i64 0, i64* %call9, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %I, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !30

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %Dims_.addr, align 4
  call void @"?setNDRangeLeftover@NDRDescT@detail@sycl@cl@@AEAAXH@Z"(%"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %this1, i32 noundef %20)
  %21 = load i32, i32* %Dims_.addr, align 4
  %conv = sext i32 %21 to i64
  %Dims = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %this1, i32 0, i32 4
  store i64 %conv, i64* %Dims, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Dsycl@cl@@YA?AV?$range@$02@01@AEBV201@0@Z"(%"class.cl::sycl::range.26"* noalias sret(%"class.cl::sycl::range.26") align 8 %agg.result, %"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %lhs, %"class.cl::sycl::range.26"* noundef nonnull align 8 dereferenceable(24) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::range.26"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::range.26"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::range.26"* %rhs, %"class.cl::sycl::range.26"** %rhs.addr, align 8
  store %"class.cl::sycl::range.26"* %lhs, %"class.cl::sycl::range.26"** %lhs.addr, align 8
  %1 = load %"class.cl::sycl::range.26"*, %"class.cl::sycl::range.26"** %lhs.addr, align 8
  %2 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  %3 = bitcast %"class.cl::sycl::range.26"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %"class.cl::sycl::range.26"*, %"class.cl::sycl::range.26"** %lhs.addr, align 8
  %6 = bitcast %"class.cl::sycl::range.26"* %5 to %"class.cl::sycl::detail::array.25"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %6, i32 0, i32 0
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [3 x i64], [3 x i64]* %common_array, i64 0, i64 %idxprom
  %8 = load i64, i64* %arrayidx, align 8
  %9 = load %"class.cl::sycl::range.26"*, %"class.cl::sycl::range.26"** %rhs.addr, align 8
  %10 = bitcast %"class.cl::sycl::range.26"* %9 to %"class.cl::sycl::detail::array.25"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds [3 x i64], [3 x i64]* %common_array1, i64 0, i64 %idxprom2
  %12 = load i64, i64* %arrayidx3, align 8
  %mul = mul i64 %8, %12
  %13 = bitcast %"class.cl::sycl::range.26"* %agg.result to %"class.cl::sycl::detail::array.25"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array.25", %"class.cl::sycl::detail::array.25"* %13, i32 0, i32 0
  %14 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr inbounds [3 x i64], [3 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %mul, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !31

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::nd_range"* @"??0?$nd_range@$02@sycl@cl@@QEAA@V?$range@$02@12@0@Z"(%"class.cl::sycl::nd_range"* noundef nonnull returned align 8 dereferenceable(72) %this, %"class.cl::sycl::range.26"* noundef %globalSize, %"class.cl::sycl::range.26"* noundef %localSize) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::nd_range"*, align 8
  store %"class.cl::sycl::nd_range"* %this, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range"*, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %globalSize2 = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 0
  %0 = bitcast %"class.cl::sycl::range.26"* %globalSize2 to i8*
  %1 = bitcast %"class.cl::sycl::range.26"* %globalSize to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 24, i1 false)
  %localSize3 = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 1
  %2 = bitcast %"class.cl::sycl::range.26"* %localSize3 to i8*
  %3 = bitcast %"class.cl::sycl::range.26"* %localSize to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 24, i1 false)
  %offset = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 2
  %4 = bitcast %"class.cl::sycl::id"* %offset to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  %call = call noundef %"class.cl::sycl::id"* @"??0?$id@$02@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id"* noundef nonnull align 8 dereferenceable(24) %offset)
  ret %"class.cl::sycl::nd_range"* %this1
}

declare dllimport void @"?start@HostProfilingInfo@detail@sycl@cl@@QEAAXXZ"(%"class.cl::sycl::detail::HostProfilingInfo"* noundef nonnull align 8 dereferenceable(16)) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@123@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::detail::NDRDescT"* noundef nonnull align 8 dereferenceable(104) %NDRDesc) #4 comdat align 2 {
entry:
  %UpperBound.addr.i = alloca %"class.cl::sycl::range"*, align 8
  %LowerBound.i = alloca %"class.cl::sycl::range", align 8
  %Stride.i = alloca %"class.cl::sycl::range", align 8
  %Index.i = alloca %"class.cl::sycl::range", align 8
  %agg.tmp.ensured.i = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl", align 1
  %agg.tmp.i = alloca %class.anon.122, align 8
  %NDRDesc.addr = alloca %"class.cl::sycl::detail::NDRDescT"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  %GroupSize = alloca %"class.cl::sycl::range", align 8
  %I = alloca i32, align 4
  %tmp = alloca %"class.cl::sycl::nd_range_error", align 8
  %LocalSize13 = alloca %"class.cl::sycl::range", align 8
  %GlobalSize14 = alloca %"class.cl::sycl::range", align 8
  %GlobalOffset = alloca %"class.cl::sycl::id.27", align 8
  %I16 = alloca i32, align 4
  %agg.tmp = alloca %class.anon.122, align 8
  store %"class.cl::sycl::detail::NDRDescT"* %NDRDesc, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %GroupSize)
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %LocalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %1, i32 0, i32 1
  %2 = bitcast %"class.cl::sycl::range.26"* %LocalSize to %"class.cl::sycl::detail::array.25"*
  %3 = load i32, i32* %I, align 4
  %call = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %2, i32 noundef %3)
  %cmp2 = icmp eq i64 %call, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %4 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %GlobalSize = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %4, i32 0, i32 0
  %5 = bitcast %"class.cl::sycl::range.26"* %GlobalSize to %"class.cl::sycl::detail::array.25"*
  %6 = load i32, i32* %I, align 4
  %call3 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %6)
  %7 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %LocalSize4 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %7, i32 0, i32 1
  %8 = bitcast %"class.cl::sycl::range.26"* %LocalSize4 to %"class.cl::sycl::detail::array.25"*
  %9 = load i32, i32* %I, align 4
  %call5 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %8, i32 noundef %9)
  %rem = urem i64 %call3, %call5
  %cmp6 = icmp ne i64 %rem, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %call7 = call noundef %"class.cl::sycl::nd_range_error"* @"??0nd_range_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %tmp, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @"??_C@_0CD@LPBAPNCF@Invalid?5local?5size?5for?5global?5si@", i64 0, i64 0), i32 noundef -54)
  %10 = bitcast %"class.cl::sycl::nd_range_error"* %tmp to i8*
  call void @_CxxThrowException(i8* %10, %eh.ThrowInfo* @"_TI4?AVnd_range_error@sycl@cl@@") #17
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %GlobalSize8 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %11, i32 0, i32 0
  %12 = bitcast %"class.cl::sycl::range.26"* %GlobalSize8 to %"class.cl::sycl::detail::array.25"*
  %13 = load i32, i32* %I, align 4
  %call9 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %12, i32 noundef %13)
  %14 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %LocalSize10 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %14, i32 0, i32 1
  %15 = bitcast %"class.cl::sycl::range.26"* %LocalSize10 to %"class.cl::sycl::detail::array.25"*
  %16 = load i32, i32* %I, align 4
  %call11 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %15, i32 noundef %16)
  %div = udiv i64 %call9, %call11
  %17 = bitcast %"class.cl::sycl::range"* %GroupSize to %"class.cl::sycl::detail::array"*
  %18 = load i32, i32* %I, align 4
  %call12 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %17, i32 noundef %18)
  store i64 %div, i64* %call12, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %I, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !32

for.end:                                          ; preds = %for.cond
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %LocalSize13)
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %GlobalSize14)
  %call15 = call noundef %"class.cl::sycl::id.27"* @"??0?$id@$00@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %GlobalOffset)
  store i32 0, i32* %I16, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc29, %for.end
  %20 = load i32, i32* %I16, align 4
  %cmp18 = icmp slt i32 %20, 1
  br i1 %cmp18, label %for.body19, label %for.end31

for.body19:                                       ; preds = %for.cond17
  %21 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %GlobalOffset20 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %21, i32 0, i32 2
  %22 = bitcast %"class.cl::sycl::id"* %GlobalOffset20 to %"class.cl::sycl::detail::array.25"*
  %23 = load i32, i32* %I16, align 4
  %call21 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %22, i32 noundef %23)
  %24 = bitcast %"class.cl::sycl::id.27"* %GlobalOffset to %"class.cl::sycl::detail::array"*
  %25 = load i32, i32* %I16, align 4
  %call22 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %24, i32 noundef %25)
  store i64 %call21, i64* %call22, align 8
  %26 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %LocalSize23 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %26, i32 0, i32 1
  %27 = bitcast %"class.cl::sycl::range.26"* %LocalSize23 to %"class.cl::sycl::detail::array.25"*
  %28 = load i32, i32* %I16, align 4
  %call24 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %27, i32 noundef %28)
  %29 = bitcast %"class.cl::sycl::range"* %LocalSize13 to %"class.cl::sycl::detail::array"*
  %30 = load i32, i32* %I16, align 4
  %call25 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %29, i32 noundef %30)
  store i64 %call24, i64* %call25, align 8
  %31 = load %"class.cl::sycl::detail::NDRDescT"*, %"class.cl::sycl::detail::NDRDescT"** %NDRDesc.addr, align 8
  %GlobalSize26 = getelementptr inbounds %"class.cl::sycl::detail::NDRDescT", %"class.cl::sycl::detail::NDRDescT"* %31, i32 0, i32 0
  %32 = bitcast %"class.cl::sycl::range.26"* %GlobalSize26 to %"class.cl::sycl::detail::array.25"*
  %33 = load i32, i32* %I16, align 4
  %call27 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %32, i32 noundef %33)
  %34 = bitcast %"class.cl::sycl::range"* %GlobalSize14 to %"class.cl::sycl::detail::array"*
  %35 = load i32, i32* %I16, align 4
  %call28 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %34, i32 noundef %35)
  store i64 %call27, i64* %call28, align 8
  br label %for.inc29

for.inc29:                                        ; preds = %for.body19
  %36 = load i32, i32* %I16, align 4
  %inc30 = add nsw i32 %36, 1
  store i32 %inc30, i32* %I16, align 4
  br label %for.cond17, !llvm.loop !33

for.end31:                                        ; preds = %for.cond17
  %GlobalSize32 = getelementptr inbounds %class.anon.122, %class.anon.122* %agg.tmp, i32 0, i32 0
  store %"class.cl::sycl::range"* %GlobalSize14, %"class.cl::sycl::range"** %GlobalSize32, align 8
  %LocalSize33 = getelementptr inbounds %class.anon.122, %class.anon.122* %agg.tmp, i32 0, i32 1
  store %"class.cl::sycl::range"* %LocalSize13, %"class.cl::sycl::range"** %LocalSize33, align 8
  %GroupSize34 = getelementptr inbounds %class.anon.122, %class.anon.122* %agg.tmp, i32 0, i32 2
  store %"class.cl::sycl::range"* %GroupSize, %"class.cl::sycl::range"** %GroupSize34, align 8
  %GlobalOffset35 = getelementptr inbounds %class.anon.122, %class.anon.122* %agg.tmp, i32 0, i32 3
  store %"class.cl::sycl::id.27"* %GlobalOffset, %"class.cl::sycl::id.27"** %GlobalOffset35, align 8
  %37 = getelementptr inbounds %class.anon.122, %class.anon.122* %agg.tmp, i32 0, i32 4
  store %"class.cl::sycl::detail::HostKernel"* %this1, %"class.cl::sycl::detail::HostKernel"** %37, align 8
  store %"class.cl::sycl::range"* %GroupSize, %"class.cl::sycl::range"** %UpperBound.addr.i, align 8
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %LowerBound.i)
  call void @"??$get@$00@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %Stride.i)
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %Index.i)
  %38 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %UpperBound.addr.i, align 8
  %39 = bitcast %class.anon.122* %agg.tmp.i to i8*
  %40 = bitcast %class.anon.122* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 40, i1 false)
  %call.i = call noundef %"struct.cl::sycl::detail::NDLoopIterateImpl"* @"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@AEAV423@@Z"(%"struct.cl::sycl::detail::NDLoopIterateImpl"* noundef nonnull align 1 dereferenceable(1) %agg.tmp.ensured.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %LowerBound.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Stride.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %38, %class.anon.122* noundef %agg.tmp.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Index.i)
  ret void
}

declare dllimport void @"?end@HostProfilingInfo@detail@sycl@cl@@QEAAXXZ"(%"class.cl::sycl::detail::HostProfilingInfo"* noundef nonnull align 8 dereferenceable(16)) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_global_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::range.26"* noalias sret(%"class.cl::sycl::range.26") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range"*, align 8
  %0 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_range"* %this, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range"*, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %globalSize = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 0
  %1 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::range.26"* %globalSize to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_local_range@?$nd_range@$02@sycl@cl@@QEBA?AV?$range@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::range.26"* noalias sret(%"class.cl::sycl::range.26") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range"*, align 8
  %0 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_range"* %this, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range"*, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %localSize = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 1
  %1 = bitcast %"class.cl::sycl::range.26"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::range.26"* %localSize to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?get_offset@?$nd_range@$02@sycl@cl@@QEBA?AV?$id@$02@23@XZ"(%"class.cl::sycl::nd_range"* noundef nonnull align 8 dereferenceable(72) %this, %"class.cl::sycl::id"* noalias sret(%"class.cl::sycl::id") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range"*, align 8
  %0 = bitcast %"class.cl::sycl::id"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::nd_range"* %this, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range"*, %"class.cl::sycl::nd_range"** %this.addr, align 8
  %offset = getelementptr inbounds %"class.cl::sycl::nd_range", %"class.cl::sycl::nd_range"* %this1, i32 0, i32 2
  %1 = bitcast %"class.cl::sycl::id"* %agg.result to i8*
  %2 = bitcast %"class.cl::sycl::id"* %offset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::id"* @"??0?$id@$02@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::id"*, align 8
  store %"class.cl::sycl::id"* %this, %"class.cl::sycl::id"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::id"*, %"class.cl::sycl::id"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::id"* %this1 to %"class.cl::sycl::detail::array.25"*
  %call = call noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02$0A@@?$array@$02@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %0)
  ret %"class.cl::sycl::id"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02$0A@@?$array@$02@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::array.25"* noundef nonnull returned align 8 dereferenceable(24) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::array.25"*, align 8
  store %"class.cl::sycl::detail::array.25"* %this, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array.25"*, %"class.cl::sycl::detail::array.25"** %this.addr, align 8
  %call = call noundef %"class.cl::sycl::detail::array.25"* @"??$?0$02@?$array@$02@detail@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %this1, i64 noundef 0, i64 noundef 0, i64 noundef 0)
  ret %"class.cl::sycl::detail::array.25"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %call = call noundef %"class.cl::sycl::range"* @"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %agg.result, i64 noundef 0)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::nd_range_error"* @"??0nd_range_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull returned align 8 dereferenceable(80) %this, i8* noundef %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  %ref.tmp = alloca %"class.std::basic_string", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store i8* %Msg, i8** %Msg.addr, align 8
  store %"class.cl::sycl::nd_range_error"* %this, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %0 = load i32, i32* %Err.addr, align 4
  %1 = load i8*, i8** %Msg.addr, align 8
  %call = call noundef %"class.std::basic_string"* @"??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8* noundef %1)
  %call2 = invoke noundef %"class.cl::sycl::nd_range_error"* @"??0nd_range_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %this1, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp, i32 noundef %0)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15
  ret %"class.cl::sycl::nd_range_error"* %this1

ehcleanup:                                        ; preds = %entry
  %2 = cleanuppad within none []
  call void @"??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %ref.tmp) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::nd_range_error"* @"??0nd_range_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %0) unnamed_addr #6 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  store %"class.cl::sycl::nd_range_error"* %0, %"class.cl::sycl::nd_range_error"** %.addr, align 8
  store %"class.cl::sycl::nd_range_error"* %this, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to %"class.cl::sycl::runtime_error"*
  %2 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::nd_range_error"* %2 to %"class.cl::sycl::runtime_error"*
  %call = call noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@AEBV012@@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %1, %"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %3)
  %4 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7nd_range_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %4, align 8
  ret %"class.cl::sycl::nd_range_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1nd_range_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  store %"class.cl::sycl::nd_range_error"* %this, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to %"class.cl::sycl::runtime_error"*
  call void @"??1runtime_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %0) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::id.27"* @"??0?$id@$00@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id.27"* noundef nonnull returned align 8 dereferenceable(8) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::id.27"*, align 8
  store %"class.cl::sycl::id.27"* %this, %"class.cl::sycl::id.27"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::id.27"* %this1 to %"class.cl::sycl::detail::array"*
  %call = call noundef %"class.cl::sycl::detail::array"* @"??$?0$00@?$array@$00@detail@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %0, i64 noundef 0)
  ret %"class.cl::sycl::id.27"* %this1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::nd_range_error"* @"??0nd_range_error@sycl@cl@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull returned align 8 dereferenceable(80) %this, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %Msg, i32 noundef %Err) unnamed_addr #6 comdat align 2 {
entry:
  %Err.addr = alloca i32, align 4
  %Msg.addr = alloca %"class.std::basic_string"*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  %agg.tmp = alloca %"class.std::error_code", align 8
  store i32 %Err, i32* %Err.addr, align 4
  store %"class.std::basic_string"* %Msg, %"class.std::basic_string"** %Msg.addr, align 8
  store %"class.cl::sycl::nd_range_error"* %this, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to %"class.cl::sycl::runtime_error"*
  %1 = load i32, i32* %Err.addr, align 4
  %2 = load %"class.std::basic_string"*, %"class.std::basic_string"** %Msg.addr, align 8
  call void @"?make_error_code@sycl@cl@@YA?AVerror_code@std@@W4errc@12@@Z"(%"class.std::error_code"* sret(%"class.std::error_code") align 8 %agg.tmp, i32 noundef 4) #15
  %call = call noundef %"class.cl::sycl::runtime_error"* @"??0runtime_error@sycl@cl@@QEAA@Verror_code@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@H@Z"(%"class.cl::sycl::runtime_error"* noundef nonnull align 8 dereferenceable(80) %0, %"class.std::error_code"* noundef %agg.tmp, %"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %2, i32 noundef %1)
  %3 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7nd_range_error@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %3, align 8
  ret %"class.cl::sycl::nd_range_error"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"??_Gnd_range_error@sycl@cl@@UEAAPEAXI@Z"(%"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %this, i32 noundef %should_call_delete) unnamed_addr #5 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %should_call_delete.addr = alloca i32, align 4
  %this.addr = alloca %"class.cl::sycl::nd_range_error"*, align 8
  store i32 %should_call_delete, i32* %should_call_delete.addr, align 4
  store %"class.cl::sycl::nd_range_error"* %this, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_range_error"*, %"class.cl::sycl::nd_range_error"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to i8*
  store i8* %0, i8** %retval, align 8
  %should_call_delete2 = load i32, i32* %should_call_delete.addr, align 4
  call void @"??1nd_range_error@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::nd_range_error"* noundef nonnull align 8 dereferenceable(80) %this1) #15
  %1 = icmp eq i32 %should_call_delete2, 0
  br i1 %1, label %dtor.continue, label %dtor.call_delete

dtor.call_delete:                                 ; preds = %entry
  %2 = bitcast %"class.cl::sycl::nd_range_error"* %this1 to i8*
  call void @"??3@YAXPEAX@Z"(i8* noundef %2) #19
  br label %dtor.continue

dtor.continue:                                    ; preds = %dtor.call_delete, %entry
  %3 = load i8*, i8** %retval, align 8
  ret i8* %3
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$get@$00@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result) #2 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %call = call noundef %"class.cl::sycl::range"* @"??$?0$00@?$range@$00@sycl@cl@@QEAA@_K@Z"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %agg.result, i64 noundef 1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"struct.cl::sycl::detail::NDLoopIterateImpl"* @"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@AEAV423@@Z"(%"struct.cl::sycl::detail::NDLoopIterateImpl"* noundef nonnull returned align 1 dereferenceable(1) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %LowerBound, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Stride, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %UpperBound, %class.anon.122* noundef %f, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Index) unnamed_addr #6 comdat align 2 {
entry:
  %retval = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl"*, align 8
  %Index.addr = alloca %"class.cl::sycl::range"*, align 8
  %UpperBound.addr = alloca %"class.cl::sycl::range"*, align 8
  %Stride.addr = alloca %"class.cl::sycl::range"*, align 8
  %LowerBound.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl"*, align 8
  %AdjIdx = alloca i64, align 8
  %ref.tmp = alloca %"class.cl::sycl::id.27", align 8
  store %"class.cl::sycl::range"* %Index, %"class.cl::sycl::range"** %Index.addr, align 8
  store %"class.cl::sycl::range"* %UpperBound, %"class.cl::sycl::range"** %UpperBound.addr, align 8
  store %"class.cl::sycl::range"* %Stride, %"class.cl::sycl::range"** %Stride.addr, align 8
  store %"class.cl::sycl::range"* %LowerBound, %"class.cl::sycl::range"** %LowerBound.addr, align 8
  store %"struct.cl::sycl::detail::NDLoopIterateImpl"* %this, %"struct.cl::sycl::detail::NDLoopIterateImpl"** %this.addr, align 8
  %this1 = load %"struct.cl::sycl::detail::NDLoopIterateImpl"*, %"struct.cl::sycl::detail::NDLoopIterateImpl"** %this.addr, align 8
  store %"struct.cl::sycl::detail::NDLoopIterateImpl"* %this1, %"struct.cl::sycl::detail::NDLoopIterateImpl"** %retval, align 8
  store i64 0, i64* %AdjIdx, align 8
  %0 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LowerBound.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %0 to %"class.cl::sycl::detail::array"*
  %call = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %1, i32 noundef 0)
  %2 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %3 = bitcast %"class.cl::sycl::range"* %2 to %"class.cl::sycl::detail::array"*
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %3, i32 noundef 0)
  store i64 %call, i64* %call2, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %5 = bitcast %"class.cl::sycl::range"* %4 to %"class.cl::sycl::detail::array"*
  %call3 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %5, i32 noundef 0)
  %6 = load i64, i64* %call3, align 8
  %7 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %UpperBound.addr, align 8
  %8 = bitcast %"class.cl::sycl::range"* %7 to %"class.cl::sycl::detail::array"*
  %call4 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %8, i32 noundef 0)
  %cmp = icmp ult i64 %6, %call4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %10 = bitcast %"class.cl::sycl::range"* %9 to %"class.cl::sycl::detail::array"*
  call void @"??B?$array@$00@detail@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %10, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp)
  call void @"??R<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z"(%class.anon.122* noundef nonnull align 8 dereferenceable(40) %f, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Stride.addr, align 8
  %12 = bitcast %"class.cl::sycl::range"* %11 to %"class.cl::sycl::detail::array"*
  %call5 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef 0)
  %13 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %14 = bitcast %"class.cl::sycl::range"* %13 to %"class.cl::sycl::detail::array"*
  %call6 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %14, i32 noundef 0)
  %15 = load i64, i64* %call6, align 8
  %add = add i64 %15, %call5
  store i64 %add, i64* %call6, align 8
  br label %for.cond, !llvm.loop !34

for.end:                                          ; preds = %for.cond
  %16 = load %"struct.cl::sycl::detail::NDLoopIterateImpl"*, %"struct.cl::sycl::detail::NDLoopIterateImpl"** %retval, align 8
  ret %"struct.cl::sycl::detail::NDLoopIterateImpl"* %16
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??R<lambda_1>@?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z"(%class.anon.122* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %GroupID) #4 comdat align 2 {
entry:
  %UpperBound.addr.i = alloca %"class.cl::sycl::range"*, align 8
  %LowerBound.i = alloca %"class.cl::sycl::range", align 8
  %Stride.i = alloca %"class.cl::sycl::range", align 8
  %Index.i = alloca %"class.cl::sycl::range", align 8
  %agg.tmp.ensured.i = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl.124", align 1
  %agg.tmp.i = alloca %class.anon.123, align 8
  %GroupID.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %this.addr = alloca %class.anon.122*, align 8
  %Group = alloca %"class.cl::sycl::group", align 8
  %agg.tmp = alloca %class.anon.123, align 8
  store %"class.cl::sycl::id.27"* %GroupID, %"class.cl::sycl::id.27"** %GroupID.addr, align 8
  store %class.anon.122* %this, %class.anon.122** %this.addr, align 8
  %this1 = load %class.anon.122*, %class.anon.122** %this.addr, align 8
  %0 = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 4
  %1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %0, align 8
  %2 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GroupID.addr, align 8
  %GroupSize = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 2
  %3 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %GroupSize, align 8
  %LocalSize = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 1
  %4 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LocalSize, align 8
  %GlobalSize = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 0
  %5 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %GlobalSize, align 8
  call void @"??$createGroup@$00@Builder@detail@sycl@cl@@SA?AV?$group@$00@23@AEBV?$range@$00@23@00AEBV?$id@$00@23@@Z"(%"class.cl::sycl::group"* sret(%"class.cl::sycl::group") align 8 %Group, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %5, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %4, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %3, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %2)
  %GroupID2 = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 0
  %6 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GroupID.addr, align 8
  store %"class.cl::sycl::id.27"* %6, %"class.cl::sycl::id.27"** %GroupID2, align 8
  %LocalSize3 = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 1
  %LocalSize4 = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 1
  %7 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LocalSize4, align 8
  store %"class.cl::sycl::range"* %7, %"class.cl::sycl::range"** %LocalSize3, align 8
  %GlobalOffset = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 2
  %GlobalOffset5 = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 3
  %8 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GlobalOffset5, align 8
  store %"class.cl::sycl::id.27"* %8, %"class.cl::sycl::id.27"** %GlobalOffset, align 8
  %GlobalSize6 = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 3
  %GlobalSize7 = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 0
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %GlobalSize7, align 8
  store %"class.cl::sycl::range"* %9, %"class.cl::sycl::range"** %GlobalSize6, align 8
  %Group8 = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 4
  store %"class.cl::sycl::group"* %Group, %"class.cl::sycl::group"** %Group8, align 8
  %10 = getelementptr inbounds %class.anon.123, %class.anon.123* %agg.tmp, i32 0, i32 5
  store %"class.cl::sycl::detail::HostKernel"* %1, %"class.cl::sycl::detail::HostKernel"** %10, align 8
  %LocalSize9 = getelementptr inbounds %class.anon.122, %class.anon.122* %this1, i32 0, i32 1
  %11 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LocalSize9, align 8
  store %"class.cl::sycl::range"* %11, %"class.cl::sycl::range"** %UpperBound.addr.i, align 8
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %LowerBound.i)
  call void @"??$get@$00@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %Stride.i)
  call void @"??$get@$0A@@?$InitializedVal@$00Vrange@sycl@cl@@@detail@sycl@cl@@SA?AV?$range@$00@23@XZ"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %Index.i)
  %12 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %UpperBound.addr.i, align 8
  %13 = bitcast %class.anon.123* %agg.tmp.i to i8*
  %14 = bitcast %class.anon.123* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 48, i1 false)
  %call.i = call noundef %"struct.cl::sycl::detail::NDLoopIterateImpl.124"* @"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???R4?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???R5?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@AEAV423@@Z"(%"struct.cl::sycl::detail::NDLoopIterateImpl.124"* noundef nonnull align 1 dereferenceable(1) %agg.tmp.ensured.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %LowerBound.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Stride.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %12, %class.anon.123* noundef %agg.tmp.i, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Index.i)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??B?$array@$00@detail@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %this, %"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::array"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::detail::array"* %this, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::array"*, %"class.cl::sycl::detail::array"** %this.addr, align 8
  %call = call noundef %"class.cl::sycl::id.27"* @"??0?$id@$00@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.result)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %this1, i32 0, i32 0
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %3 = load i64, i64* %arrayidx, align 8
  %4 = bitcast %"class.cl::sycl::id.27"* %agg.result to %"class.cl::sycl::detail::array"*
  %5 = load i32, i32* %i, align 4
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %4, i32 noundef %5)
  store i64 %3, i64* %call2, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !35

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$createGroup@$00@Builder@detail@sycl@cl@@SA?AV?$group@$00@23@AEBV?$range@$00@23@00AEBV?$id@$00@23@@Z"(%"class.cl::sycl::group"* noalias sret(%"class.cl::sycl::group") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Global, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Local, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Group, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %Index) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %Index.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %Group.addr = alloca %"class.cl::sycl::range"*, align 8
  %Local.addr = alloca %"class.cl::sycl::range"*, align 8
  %Global.addr = alloca %"class.cl::sycl::range"*, align 8
  %agg.tmp = alloca %"class.cl::sycl::range", align 8
  %0 = bitcast %"class.cl::sycl::group"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::id.27"* %Index, %"class.cl::sycl::id.27"** %Index.addr, align 8
  store %"class.cl::sycl::range"* %Group, %"class.cl::sycl::range"** %Group.addr, align 8
  store %"class.cl::sycl::range"* %Local, %"class.cl::sycl::range"** %Local.addr, align 8
  store %"class.cl::sycl::range"* %Global, %"class.cl::sycl::range"** %Global.addr, align 8
  %1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %Index.addr, align 8
  %2 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Group.addr, align 8
  %3 = bitcast %"class.cl::sycl::range"* %agg.tmp to i8*
  %4 = bitcast %"class.cl::sycl::range"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Local.addr, align 8
  %6 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Global.addr, align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %7 = bitcast [1 x i64]* %coerce.dive1 to i64*
  %8 = load i64, i64* %7, align 8
  %call = call noundef %"class.cl::sycl::group"* @"??0?$group@$00@sycl@cl@@IEAA@AEBV?$range@$00@12@0V312@AEBV?$id@$00@12@@Z"(%"class.cl::sycl::group"* noundef nonnull align 8 dereferenceable(32) %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %6, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %5, i64 %8, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %1)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::group"* @"??0?$group@$00@sycl@cl@@IEAA@AEBV?$range@$00@12@0V312@AEBV?$id@$00@12@@Z"(%"class.cl::sycl::group"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %G, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %L, i64 %GroupRange.coerce, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %I) unnamed_addr #6 comdat align 2 {
entry:
  %retval = alloca %"class.cl::sycl::group"*, align 8
  %GroupRange = alloca %"class.cl::sycl::range", align 8
  %I.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %L.addr = alloca %"class.cl::sycl::range"*, align 8
  %G.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"class.cl::sycl::group"*, align 8
  %ref.tmp = alloca %"class.cl::sycl::range", align 8
  %ref.tmp3 = alloca %"class.cl::sycl::range", align 8
  %ref.tmp4 = alloca %"class.cl::sycl::range", align 8
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %GroupRange, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %GroupRange.coerce, i64* %0, align 8
  store %"class.cl::sycl::id.27"* %I, %"class.cl::sycl::id.27"** %I.addr, align 8
  store %"class.cl::sycl::range"* %L, %"class.cl::sycl::range"** %L.addr, align 8
  store %"class.cl::sycl::range"* %G, %"class.cl::sycl::range"** %G.addr, align 8
  store %"class.cl::sycl::group"* %this, %"class.cl::sycl::group"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::group"*, %"class.cl::sycl::group"** %this.addr, align 8
  store %"class.cl::sycl::group"* %this2, %"class.cl::sycl::group"** %retval, align 8
  %globalRange = getelementptr inbounds %"class.cl::sycl::group", %"class.cl::sycl::group"* %this2, i32 0, i32 0
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %G.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %globalRange to i8*
  %3 = bitcast %"class.cl::sycl::range"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %localRange = getelementptr inbounds %"class.cl::sycl::group", %"class.cl::sycl::group"* %this2, i32 0, i32 1
  %4 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %L.addr, align 8
  %5 = bitcast %"class.cl::sycl::range"* %localRange to i8*
  %6 = bitcast %"class.cl::sycl::range"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 8, i1 false)
  %groupRange = getelementptr inbounds %"class.cl::sycl::group", %"class.cl::sycl::group"* %this2, i32 0, i32 2
  %7 = bitcast %"class.cl::sycl::range"* %groupRange to i8*
  %8 = bitcast %"class.cl::sycl::range"* %GroupRange to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 8, i1 false)
  %index = getelementptr inbounds %"class.cl::sycl::group", %"class.cl::sycl::group"* %this2, i32 0, i32 3
  %9 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %I.addr, align 8
  %10 = bitcast %"class.cl::sycl::id.27"* %index to i8*
  %11 = bitcast %"class.cl::sycl::id.27"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 8, i1 false)
  %12 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %L.addr, align 8
  %13 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %G.addr, align 8
  call void @"??Lsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %ref.tmp, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %13, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %12)
  %call = call noundef i64 @"?size@?$range@$00@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  %cmp = icmp eq i64 %call, 0
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  call void @_wassert(i16* noundef getelementptr inbounds ([65 x i16], [65 x i16]* @"??_C@_1IC@OOFNJDPJ@?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?$CF?$AA?5?$AAL?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA?$CC?$AAg?$AAl?$AAo?$AAb?$AAa?$AAl@", i64 0, i64 0), i16* noundef getelementptr inbounds ([115 x i16], [115 x i16]* @"??_C@_1OG@FLOAHMKB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAK?$AAi?$AAk?$AAe?$AA?2?$AAD?$AAe?$AAs?$AAk?$AAt?$AAo?$AAp?$AA?2?$AAT?$AAF?$AAM?$AA?2?$AAr?$AAe?$AAp?$AAo?$AAs?$AA?2@", i64 0, i64 0), i32 noundef 528)
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %14 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %15 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %L.addr, align 8
  %16 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %G.addr, align 8
  call void @"??Ksycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %ref.tmp4, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %16, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %15)
  call void @"??Gsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %ref.tmp3, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp4, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %GroupRange)
  %call5 = call noundef i64 @"?size@?$range@$00@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp3)
  %cmp6 = icmp eq i64 %call5, 0
  br i1 %cmp6, label %lor.end8, label %lor.rhs7

lor.rhs7:                                         ; preds = %lor.end
  call void @_wassert(i16* noundef getelementptr inbounds ([83 x i16], [83 x i16]* @"??_C@_1KG@HJCACLNI@?$AA?$CI?$AA?$CI?$AA?$CI?$AAG?$AA?5?$AA?1?$AA?5?$AAL?$AA?$CJ?$AA?5?$AA?9?$AA?5?$AAG?$AAr?$AAo?$AAu?$AAp?$AAR?$AAa?$AAn?$AAg?$AAe?$AA?$CJ?$AA?4?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN@", i64 0, i64 0), i16* noundef getelementptr inbounds ([115 x i16], [115 x i16]* @"??_C@_1OG@FLOAHMKB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAK?$AAi?$AAk?$AAe?$AA?2?$AAD?$AAe?$AAs?$AAk?$AAt?$AAo?$AAp?$AA?2?$AAT?$AAF?$AAM?$AA?2?$AAr?$AAe?$AAp?$AAo?$AAs?$AA?2@", i64 0, i64 0), i32 noundef 530)
  br label %lor.end8

lor.end8:                                         ; preds = %lor.rhs7, %lor.end
  %17 = phi i1 [ true, %lor.end ], [ false, %lor.rhs7 ]
  %18 = load %"class.cl::sycl::group"*, %"class.cl::sycl::group"** %retval, align 8
  ret %"class.cl::sycl::group"* %18
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Lsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %lhs, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::range"* %rhs, %"class.cl::sycl::range"** %rhs.addr, align 8
  store %"class.cl::sycl::range"* %lhs, %"class.cl::sycl::range"** %lhs.addr, align 8
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  %3 = bitcast %"class.cl::sycl::range"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %6 = bitcast %"class.cl::sycl::range"* %5 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %6, i32 0, i32 0
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %8 = load i64, i64* %arrayidx, align 8
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %rhs.addr, align 8
  %10 = bitcast %"class.cl::sycl::range"* %9 to %"class.cl::sycl::detail::array"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array1, i64 0, i64 %idxprom2
  %12 = load i64, i64* %arrayidx3, align 8
  %rem = urem i64 %8, %12
  %13 = bitcast %"class.cl::sycl::range"* %agg.result to %"class.cl::sycl::detail::array"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %13, i32 0, i32 0
  %14 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %rem, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !36

for.end:                                          ; preds = %for.cond
  ret void
}

declare dllimport void @_wassert(i16* noundef, i16* noundef, i32 noundef) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Gsycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %lhs, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::range"* %rhs, %"class.cl::sycl::range"** %rhs.addr, align 8
  store %"class.cl::sycl::range"* %lhs, %"class.cl::sycl::range"** %lhs.addr, align 8
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  %3 = bitcast %"class.cl::sycl::range"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %6 = bitcast %"class.cl::sycl::range"* %5 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %6, i32 0, i32 0
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %8 = load i64, i64* %arrayidx, align 8
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %rhs.addr, align 8
  %10 = bitcast %"class.cl::sycl::range"* %9 to %"class.cl::sycl::detail::array"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array1, i64 0, i64 %idxprom2
  %12 = load i64, i64* %arrayidx3, align 8
  %sub = sub i64 %8, %12
  %13 = bitcast %"class.cl::sycl::range"* %agg.result to %"class.cl::sycl::detail::array"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %13, i32 0, i32 0
  %14 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %sub, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !37

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Ksycl@cl@@YA?AV?$range@$00@01@AEBV201@0@Z"(%"class.cl::sycl::range"* noalias sret(%"class.cl::sycl::range") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %lhs, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::range"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::range"* %rhs, %"class.cl::sycl::range"** %rhs.addr, align 8
  store %"class.cl::sycl::range"* %lhs, %"class.cl::sycl::range"** %lhs.addr, align 8
  %1 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %2 = bitcast %"class.cl::sycl::range"* %agg.result to i8*
  %3 = bitcast %"class.cl::sycl::range"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %4, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %lhs.addr, align 8
  %6 = bitcast %"class.cl::sycl::range"* %5 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %6, i32 0, i32 0
  %7 = load i32, i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %8 = load i64, i64* %arrayidx, align 8
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %rhs.addr, align 8
  %10 = bitcast %"class.cl::sycl::range"* %9 to %"class.cl::sycl::detail::array"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array1, i64 0, i64 %idxprom2
  %12 = load i64, i64* %arrayidx3, align 8
  %div = udiv i64 %8, %12
  %13 = bitcast %"class.cl::sycl::range"* %agg.result to %"class.cl::sycl::detail::array"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %13, i32 0, i32 0
  %14 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %div, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !38

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"struct.cl::sycl::detail::NDLoopIterateImpl.124"* @"??0?$NDLoopIterateImpl@$00$0A@Vrange@sycl@cl@@V<lambda_1>@?0???R4?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@23@QEAAXAEBVNDRDescT@623@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@V123@@detail@sycl@cl@@QEAA@AEBV?$range@$00@23@00V<lambda_1>@?0???R5?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@123@QEAAXAEBVNDRDescT@123@@Z@QEBA?A?<auto>@@AEBV?$id@$00@23@@Z@AEAV423@@Z"(%"struct.cl::sycl::detail::NDLoopIterateImpl.124"* noundef nonnull returned align 1 dereferenceable(1) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %LowerBound, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Stride, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %UpperBound, %class.anon.123* noundef %f, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Index) unnamed_addr #6 comdat align 2 {
entry:
  %retval = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl.124"*, align 8
  %Index.addr = alloca %"class.cl::sycl::range"*, align 8
  %UpperBound.addr = alloca %"class.cl::sycl::range"*, align 8
  %Stride.addr = alloca %"class.cl::sycl::range"*, align 8
  %LowerBound.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"struct.cl::sycl::detail::NDLoopIterateImpl.124"*, align 8
  %AdjIdx = alloca i64, align 8
  %ref.tmp = alloca %"class.cl::sycl::id.27", align 8
  store %"class.cl::sycl::range"* %Index, %"class.cl::sycl::range"** %Index.addr, align 8
  store %"class.cl::sycl::range"* %UpperBound, %"class.cl::sycl::range"** %UpperBound.addr, align 8
  store %"class.cl::sycl::range"* %Stride, %"class.cl::sycl::range"** %Stride.addr, align 8
  store %"class.cl::sycl::range"* %LowerBound, %"class.cl::sycl::range"** %LowerBound.addr, align 8
  store %"struct.cl::sycl::detail::NDLoopIterateImpl.124"* %this, %"struct.cl::sycl::detail::NDLoopIterateImpl.124"** %this.addr, align 8
  %this1 = load %"struct.cl::sycl::detail::NDLoopIterateImpl.124"*, %"struct.cl::sycl::detail::NDLoopIterateImpl.124"** %this.addr, align 8
  store %"struct.cl::sycl::detail::NDLoopIterateImpl.124"* %this1, %"struct.cl::sycl::detail::NDLoopIterateImpl.124"** %retval, align 8
  store i64 0, i64* %AdjIdx, align 8
  %0 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LowerBound.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %0 to %"class.cl::sycl::detail::array"*
  %call = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %1, i32 noundef 0)
  %2 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %3 = bitcast %"class.cl::sycl::range"* %2 to %"class.cl::sycl::detail::array"*
  %call2 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %3, i32 noundef 0)
  store i64 %call, i64* %call2, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %5 = bitcast %"class.cl::sycl::range"* %4 to %"class.cl::sycl::detail::array"*
  %call3 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %5, i32 noundef 0)
  %6 = load i64, i64* %call3, align 8
  %7 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %UpperBound.addr, align 8
  %8 = bitcast %"class.cl::sycl::range"* %7 to %"class.cl::sycl::detail::array"*
  %call4 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %8, i32 noundef 0)
  %cmp = icmp ult i64 %6, %call4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %10 = bitcast %"class.cl::sycl::range"* %9 to %"class.cl::sycl::detail::array"*
  call void @"??B?$array@$00@detail@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %10, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp)
  call void @"??R<lambda_1>@?0???R0?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z@QEBA?A?6@1@Z"(%class.anon.123* noundef nonnull align 8 dereferenceable(48) %f, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Stride.addr, align 8
  %12 = bitcast %"class.cl::sycl::range"* %11 to %"class.cl::sycl::detail::array"*
  %call5 = call noundef i64 @"??A?$array@$00@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %12, i32 noundef 0)
  %13 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Index.addr, align 8
  %14 = bitcast %"class.cl::sycl::range"* %13 to %"class.cl::sycl::detail::array"*
  %call6 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %14, i32 noundef 0)
  %15 = load i64, i64* %call6, align 8
  %add = add i64 %15, %call5
  store i64 %add, i64* %call6, align 8
  br label %for.cond, !llvm.loop !39

for.end:                                          ; preds = %for.cond
  %16 = load %"struct.cl::sycl::detail::NDLoopIterateImpl.124"*, %"struct.cl::sycl::detail::NDLoopIterateImpl.124"** %retval, align 8
  ret %"struct.cl::sycl::detail::NDLoopIterateImpl.124"* %16
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??R<lambda_1>@?0???R0?0???$runOnHost@V?$nd_item@$00@sycl@cl@@@?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAAXAEBVNDRDescT@234@@Z@QEBA?A?<auto>@@AEBV?$id@$00@34@@Z@QEBA?A?6@1@Z"(%class.anon.123* noundef nonnull align 8 dereferenceable(48) %this, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %LocalID) #4 comdat align 2 {
entry:
  %LocalID.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %this.addr = alloca %class.anon.123*, align 8
  %GlobalID = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp2 = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp3 = alloca %"class.cl::sycl::id.27", align 8
  %GlobalItem = alloca %"class.cl::sycl::item", align 8
  %LocalItem = alloca %"class.cl::sycl::item.120", align 8
  %NDItem = alloca %"class.cl::sycl::nd_item", align 8
  %agg.tmp = alloca %"class.cl::sycl::nd_item", align 8
  %agg.tmp6 = alloca %"class.std::function.114", align 8
  store %"class.cl::sycl::id.27"* %LocalID, %"class.cl::sycl::id.27"** %LocalID.addr, align 8
  store %class.anon.123* %this, %class.anon.123** %this.addr, align 8
  %this1 = load %class.anon.123*, %class.anon.123** %this.addr, align 8
  %0 = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 5
  %1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %0, align 8
  %GlobalOffset = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 2
  %2 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GlobalOffset, align 8
  %3 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %LocalID.addr, align 8
  %LocalSize = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 1
  %4 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LocalSize, align 8
  %5 = bitcast %"class.cl::sycl::range"* %4 to %"class.cl::sycl::detail::array"*
  call void @"??B?$array@$00@detail@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %5, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp3)
  %GroupID = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 0
  %6 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GroupID, align 8
  call void @"??Dsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z"(%"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %6, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp3)
  call void @"??Hsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z"(%"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %3)
  call void @"??Hsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z"(%"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %GlobalID, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %2)
  %GlobalOffset4 = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 2
  %7 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %GlobalOffset4, align 8
  %GlobalSize = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 3
  %8 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %GlobalSize, align 8
  call void @"??$createItem@$00$00@Builder@detail@sycl@cl@@SA?AV?$item@$00$00@23@AEBV?$range@$00@23@AEBV?$id@$00@23@1@Z"(%"class.cl::sycl::item"* sret(%"class.cl::sycl::item") align 8 %GlobalItem, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %8, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %GlobalID, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %7)
  %9 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %LocalID.addr, align 8
  %LocalSize5 = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 1
  %10 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %LocalSize5, align 8
  call void @"??$createItem@$00$0A@@Builder@detail@sycl@cl@@SA?AV?$item@$00$0A@@23@AEBV?$range@$00@23@AEBV?$id@$00@23@@Z"(%"class.cl::sycl::item.120"* sret(%"class.cl::sycl::item.120") align 8 %LocalItem, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %10, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %9)
  %Group = getelementptr inbounds %class.anon.123, %class.anon.123* %this1, i32 0, i32 4
  %11 = load %"class.cl::sycl::group"*, %"class.cl::sycl::group"** %Group, align 8
  call void @"??$createNDItem@$00@Builder@detail@sycl@cl@@SA?AV?$nd_item@$00@23@AEBV?$item@$00$00@23@AEBV?$item@$00$0A@@23@AEBV?$group@$00@23@@Z"(%"class.cl::sycl::nd_item"* sret(%"class.cl::sycl::nd_item") align 8 %NDItem, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %GlobalItem, %"class.cl::sycl::item.120"* noundef nonnull align 8 dereferenceable(16) %LocalItem, %"class.cl::sycl::group"* noundef nonnull align 8 dereferenceable(32) %11)
  %12 = bitcast %"class.cl::sycl::nd_item"* %agg.tmp to i8*
  %13 = bitcast %"class.cl::sycl::nd_item"* %NDItem to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 72, i1 false)
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %1, i32 0, i32 1
  %call = call noundef %"class.std::function.114"* @"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %agg.tmp6, %"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %MKernel)
  call void @"??$runKernelWithArg@$$CBV?$nd_item@$00@sycl@cl@@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@detail@sycl@cl@@YAXV?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@12@@Z"(%"class.std::function.114"* noundef %agg.tmp6, %"class.cl::sycl::nd_item"* noundef %agg.tmp)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Hsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z"(%"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %lhs, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::id.27"* %rhs, %"class.cl::sycl::id.27"** %rhs.addr, align 8
  store %"class.cl::sycl::id.27"* %lhs, %"class.cl::sycl::id.27"** %lhs.addr, align 8
  %call = call noundef %"class.cl::sycl::id.27"* @"??0?$id@$00@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.result)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %lhs.addr, align 8
  %3 = bitcast %"class.cl::sycl::id.27"* %2 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %3, i32 0, i32 0
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  %6 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %rhs.addr, align 8
  %7 = bitcast %"class.cl::sycl::id.27"* %6 to %"class.cl::sycl::detail::array"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %7, i32 0, i32 0
  %8 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %8 to i64
  %arrayidx3 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array1, i64 0, i64 %idxprom2
  %9 = load i64, i64* %arrayidx3, align 8
  %add = add i64 %5, %9
  %10 = bitcast %"class.cl::sycl::id.27"* %agg.result to %"class.cl::sycl::detail::array"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %add, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !40

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??Dsycl@cl@@YA?AV?$id@$00@01@AEBV201@0@Z"(%"class.cl::sycl::id.27"* noalias sret(%"class.cl::sycl::id.27") align 8 %agg.result, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %lhs, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %rhs) #2 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %rhs.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %lhs.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %i = alloca i32, align 4
  %0 = bitcast %"class.cl::sycl::id.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::id.27"* %rhs, %"class.cl::sycl::id.27"** %rhs.addr, align 8
  store %"class.cl::sycl::id.27"* %lhs, %"class.cl::sycl::id.27"** %lhs.addr, align 8
  %call = call noundef %"class.cl::sycl::id.27"* @"??0?$id@$00@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.result)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %lhs.addr, align 8
  %3 = bitcast %"class.cl::sycl::id.27"* %2 to %"class.cl::sycl::detail::array"*
  %common_array = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %3, i32 0, i32 0
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %common_array, i64 0, i64 %idxprom
  %5 = load i64, i64* %arrayidx, align 8
  %6 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %rhs.addr, align 8
  %7 = bitcast %"class.cl::sycl::id.27"* %6 to %"class.cl::sycl::detail::array"*
  %common_array1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %7, i32 0, i32 0
  %8 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %8 to i64
  %arrayidx3 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array1, i64 0, i64 %idxprom2
  %9 = load i64, i64* %arrayidx3, align 8
  %mul = mul i64 %5, %9
  %10 = bitcast %"class.cl::sycl::id.27"* %agg.result to %"class.cl::sycl::detail::array"*
  %common_array4 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %10, i32 0, i32 0
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [1 x i64], [1 x i64]* %common_array4, i64 0, i64 %idxprom5
  store i64 %mul, i64* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond, !llvm.loop !41

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$createItem@$00$0A@@Builder@detail@sycl@cl@@SA?AV?$item@$00$0A@@23@AEBV?$range@$00@23@AEBV?$id@$00@23@@Z"(%"class.cl::sycl::item.120"* noalias sret(%"class.cl::sycl::item.120") align 8 %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %Extent, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %Index) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %Index.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %Extent.addr = alloca %"class.cl::sycl::range"*, align 8
  %0 = bitcast %"class.cl::sycl::item.120"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::id.27"* %Index, %"class.cl::sycl::id.27"** %Index.addr, align 8
  store %"class.cl::sycl::range"* %Extent, %"class.cl::sycl::range"** %Extent.addr, align 8
  %1 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %Index.addr, align 8
  %2 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %Extent.addr, align 8
  %call = call noundef %"class.cl::sycl::item.120"* @"??$?0$0A@@?$item@$00$0A@@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@@Z"(%"class.cl::sycl::item.120"* noundef nonnull align 8 dereferenceable(16) %agg.result, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$createNDItem@$00@Builder@detail@sycl@cl@@SA?AV?$nd_item@$00@23@AEBV?$item@$00$00@23@AEBV?$item@$00$0A@@23@AEBV?$group@$00@23@@Z"(%"class.cl::sycl::nd_item"* noalias sret(%"class.cl::sycl::nd_item") align 8 %agg.result, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %Global, %"class.cl::sycl::item.120"* noundef nonnull align 8 dereferenceable(16) %Local, %"class.cl::sycl::group"* noundef nonnull align 8 dereferenceable(32) %Group) #4 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %Group.addr = alloca %"class.cl::sycl::group"*, align 8
  %Local.addr = alloca %"class.cl::sycl::item.120"*, align 8
  %Global.addr = alloca %"class.cl::sycl::item"*, align 8
  %0 = bitcast %"class.cl::sycl::nd_item"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.cl::sycl::group"* %Group, %"class.cl::sycl::group"** %Group.addr, align 8
  store %"class.cl::sycl::item.120"* %Local, %"class.cl::sycl::item.120"** %Local.addr, align 8
  store %"class.cl::sycl::item"* %Global, %"class.cl::sycl::item"** %Global.addr, align 8
  %1 = load %"class.cl::sycl::group"*, %"class.cl::sycl::group"** %Group.addr, align 8
  %2 = load %"class.cl::sycl::item.120"*, %"class.cl::sycl::item.120"** %Local.addr, align 8
  %3 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %Global.addr, align 8
  %call = call noundef %"class.cl::sycl::nd_item"* @"??0?$nd_item@$00@sycl@cl@@IEAA@AEBV?$item@$00$00@12@AEBV?$item@$00$0A@@12@AEBV?$group@$00@12@@Z"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %agg.result, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %3, %"class.cl::sycl::item.120"* noundef nonnull align 8 dereferenceable(16) %2, %"class.cl::sycl::group"* noundef nonnull align 8 dereferenceable(32) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??$runKernelWithArg@$$CBV?$nd_item@$00@sycl@cl@@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@detail@sycl@cl@@YAXV?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@12@@Z"(%"class.std::function.114"* noundef %KernelName, %"class.cl::sycl::nd_item"* noundef %Arg) #4 comdat personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %0 = bitcast %"class.std::function.114"* %KernelName to %"class.std::_Func_class.115"*
  invoke void @"??R?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAXAEBV?$nd_item@$00@sycl@cl@@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %Arg)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %KernelName) #15
  ret void

ehcleanup:                                        ; preds = %entry
  %1 = cleanuppad within none []
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %KernelName) #15 [ "funclet"(token %1) ]
  cleanupret from %1 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::item.120"* @"??$?0$0A@@?$item@$00$0A@@sycl@cl@@IEAA@AEBV?$range@$00@12@AEBV?$id@$00@12@@Z"(%"class.cl::sycl::item.120"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %extent, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %index) unnamed_addr #5 comdat align 2 {
entry:
  %index.addr = alloca %"class.cl::sycl::id.27"*, align 8
  %extent.addr = alloca %"class.cl::sycl::range"*, align 8
  %this.addr = alloca %"class.cl::sycl::item.120"*, align 8
  store %"class.cl::sycl::id.27"* %index, %"class.cl::sycl::id.27"** %index.addr, align 8
  store %"class.cl::sycl::range"* %extent, %"class.cl::sycl::range"** %extent.addr, align 8
  store %"class.cl::sycl::item.120"* %this, %"class.cl::sycl::item.120"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::item.120"*, %"class.cl::sycl::item.120"** %this.addr, align 8
  %MImpl = getelementptr inbounds %"class.cl::sycl::item.120", %"class.cl::sycl::item.120"* %this1, i32 0, i32 0
  %MExtent = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase.121", %"struct.cl::sycl::detail::ItemBase.121"* %MImpl, i32 0, i32 0
  %0 = load %"class.cl::sycl::range"*, %"class.cl::sycl::range"** %extent.addr, align 8
  %1 = bitcast %"class.cl::sycl::range"* %MExtent to i8*
  %2 = bitcast %"class.cl::sycl::range"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %MIndex = getelementptr inbounds %"struct.cl::sycl::detail::ItemBase.121", %"struct.cl::sycl::detail::ItemBase.121"* %MImpl, i32 0, i32 1
  %3 = load %"class.cl::sycl::id.27"*, %"class.cl::sycl::id.27"** %index.addr, align 8
  %4 = bitcast %"class.cl::sycl::id.27"* %MIndex to i8*
  %5 = bitcast %"class.cl::sycl::id.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false)
  ret %"class.cl::sycl::item.120"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::nd_item"* @"??0?$nd_item@$00@sycl@cl@@IEAA@AEBV?$item@$00$00@12@AEBV?$item@$00$0A@@12@AEBV?$group@$00@12@@Z"(%"class.cl::sycl::nd_item"* noundef nonnull returned align 8 dereferenceable(72) %this, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %GL, %"class.cl::sycl::item.120"* noundef nonnull align 8 dereferenceable(16) %L, %"class.cl::sycl::group"* noundef nonnull align 8 dereferenceable(32) %GR) unnamed_addr #5 comdat align 2 {
entry:
  %GR.addr = alloca %"class.cl::sycl::group"*, align 8
  %L.addr = alloca %"class.cl::sycl::item.120"*, align 8
  %GL.addr = alloca %"class.cl::sycl::item"*, align 8
  %this.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  store %"class.cl::sycl::group"* %GR, %"class.cl::sycl::group"** %GR.addr, align 8
  store %"class.cl::sycl::item.120"* %L, %"class.cl::sycl::item.120"** %L.addr, align 8
  store %"class.cl::sycl::item"* %GL, %"class.cl::sycl::item"** %GL.addr, align 8
  store %"class.cl::sycl::nd_item"* %this, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %this.addr, align 8
  %globalItem = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 0
  %0 = load %"class.cl::sycl::item"*, %"class.cl::sycl::item"** %GL.addr, align 8
  %1 = bitcast %"class.cl::sycl::item"* %globalItem to i8*
  %2 = bitcast %"class.cl::sycl::item"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  %localItem = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 1
  %3 = load %"class.cl::sycl::item.120"*, %"class.cl::sycl::item.120"** %L.addr, align 8
  %4 = bitcast %"class.cl::sycl::item.120"* %localItem to i8*
  %5 = bitcast %"class.cl::sycl::item.120"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %Group = getelementptr inbounds %"class.cl::sycl::nd_item", %"class.cl::sycl::nd_item"* %this1, i32 0, i32 2
  %6 = load %"class.cl::sycl::group"*, %"class.cl::sycl::group"** %GR.addr, align 8
  %7 = bitcast %"class.cl::sycl::group"* %Group to i8*
  %8 = bitcast %"class.cl::sycl::group"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 32, i1 false)
  ret %"class.cl::sycl::nd_item"* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"??R?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAXAEBV?$nd_item@$00@sycl@cl@@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Args) #4 comdat align 2 {
entry:
  %_Args.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  %_Impl = alloca %"class.std::_Func_base.118"*, align 8
  store %"class.cl::sycl::nd_item"* %_Args, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %call = call noundef zeroext i1 @"?_Empty@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Xbad_function_call@std@@YAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %call2 = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  store %"class.std::_Func_base.118"* %call2, %"class.std::_Func_base.118"** %_Impl, align 8
  %0 = load %"class.std::_Func_base.118"*, %"class.std::_Func_base.118"** %_Impl, align 8
  %1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  %2 = bitcast %"class.std::_Func_base.118"* %0 to void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)***
  %vtable = load void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)**, void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)*** %2, align 8
  %vfn = getelementptr inbounds void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)*, void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)** %vtable, i64 2
  %3 = load void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)*, void (%"class.std::_Func_base.118"*, %"class.cl::sycl::nd_item"*)** %vfn, align 8
  call void %3(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %1)
  ret void
}

; Function Attrs: noreturn
declare dso_local void @"?_Xbad_function_call@std@@YAXXZ"() #7

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??1?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  store %"class.cl::sycl::detail::HostKernel"* %this, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@6B@" to i32 (...)**), i32 (...)*** %0, align 8
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %this1, i32 0, i32 1
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %MKernel) #15
  %1 = bitcast %"class.cl::sycl::detail::HostKernel"* %this1 to %"class.cl::sycl::detail::HostKernelBase"*
  call void @"??1HostKernelBase@detail@sycl@cl@@UEAA@XZ"(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %1) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::HostKernelBase"* @"??$exchange@PEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@@std@@YAPEAVHostKernelBase@detail@sycl@cl@@AEAPEAV1234@0@Z"(%"class.cl::sycl::detail::HostKernelBase"** noundef nonnull align 8 dereferenceable(8) %_Val, %"class.cl::sycl::detail::HostKernelBase"** noundef nonnull align 8 dereferenceable(8) %_New_val) #2 comdat {
entry:
  %_New_val.addr = alloca %"class.cl::sycl::detail::HostKernelBase"**, align 8
  %_Val.addr = alloca %"class.cl::sycl::detail::HostKernelBase"**, align 8
  %_Old_val = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  store %"class.cl::sycl::detail::HostKernelBase"** %_New_val, %"class.cl::sycl::detail::HostKernelBase"*** %_New_val.addr, align 8
  store %"class.cl::sycl::detail::HostKernelBase"** %_Val, %"class.cl::sycl::detail::HostKernelBase"*** %_Val.addr, align 8
  %0 = load %"class.cl::sycl::detail::HostKernelBase"**, %"class.cl::sycl::detail::HostKernelBase"*** %_Val.addr, align 8
  %1 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %0, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %1, %"class.cl::sycl::detail::HostKernelBase"** %_Old_val, align 8
  %2 = load %"class.cl::sycl::detail::HostKernelBase"**, %"class.cl::sycl::detail::HostKernelBase"*** %_New_val.addr, align 8
  %3 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %2, align 8
  %4 = load %"class.cl::sycl::detail::HostKernelBase"**, %"class.cl::sycl::detail::HostKernelBase"*** %_Val.addr, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %3, %"class.cl::sycl::detail::HostKernelBase"** %4, align 8
  %5 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %_Old_val, align 8
  ret %"class.cl::sycl::detail::HostKernelBase"* %5
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"struct.std::default_delete.85"* @"?_Get_first@?$_Compressed_pair@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@PEAVHostKernelBase@detail@sycl@cl@@$00@std@@QEAAAEAU?$default_delete@VHostKernelBase@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.84"* noundef nonnull align 8 dereferenceable(8) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.84"*, align 8
  store %"class.std::_Compressed_pair.84"* %this, %"class.std::_Compressed_pair.84"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.84"*, %"class.std::_Compressed_pair.84"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.84"* %this1 to %"struct.std::default_delete.85"*
  ret %"struct.std::default_delete.85"* %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??R?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@QEBAXPEAVHostKernelBase@detail@sycl@cl@@@Z"(%"struct.std::default_delete.85"* noundef nonnull align 1 dereferenceable(1) %this, %"class.cl::sycl::detail::HostKernelBase"* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca %"class.cl::sycl::detail::HostKernelBase"*, align 8
  %this.addr = alloca %"struct.std::default_delete.85"*, align 8
  store %"class.cl::sycl::detail::HostKernelBase"* %_Ptr, %"class.cl::sycl::detail::HostKernelBase"** %_Ptr.addr, align 8
  store %"struct.std::default_delete.85"* %this, %"struct.std::default_delete.85"** %this.addr, align 8
  %this1 = load %"struct.std::default_delete.85"*, %"struct.std::default_delete.85"** %this.addr, align 8
  %0 = load %"class.cl::sycl::detail::HostKernelBase"*, %"class.cl::sycl::detail::HostKernelBase"** %_Ptr.addr, align 8
  %isnull = icmp eq %"class.cl::sycl::detail::HostKernelBase"* %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"class.cl::sycl::detail::HostKernelBase"* %0 to i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)***
  %vtable = load i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)**, i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)*** %1, align 8
  %vfn = getelementptr inbounds i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)*, i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)** %vtable, i64 2
  %2 = load i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)*, i8* (%"class.cl::sycl::detail::HostKernelBase"*, i32)** %vfn, align 8
  %call = call noundef i8* %2(%"class.cl::sycl::detail::HostKernelBase"* noundef nonnull align 8 dereferenceable(8) %0, i32 noundef 1) #15
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Target@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBAPEBXAEBVtype_info@@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %class.type_info* noundef nonnull align 8 dereferenceable(24) %_Info) #2 comdat align 2 {
entry:
  %_Info.addr = alloca %class.type_info*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %class.type_info* %_Info, %class.type_info** %_Info.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %call = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %tobool = icmp ne %"class.std::_Func_base.118"* %call, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call2 = call noundef %"class.std::_Func_base.118"* @"?_Getimpl@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %0 = load %class.type_info*, %class.type_info** %_Info.addr, align 8
  %call3 = call noundef i8* @"?_Target@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAPEBXAEBVtype_info@@@Z"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %call2, %class.type_info* noundef nonnull align 8 dereferenceable(24) %0) #15
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call3, %cond.true ], [ null, %cond.false ]
  ret i8* %cond
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Target@?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEBAPEBXAEBVtype_info@@@Z"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %this, %class.type_info* noundef nonnull align 8 dereferenceable(24) %_Info) #2 comdat align 2 {
entry:
  %_Info.addr = alloca %class.type_info*, align 8
  %this.addr = alloca %"class.std::_Func_base.118"*, align 8
  store %class.type_info* %_Info, %class.type_info** %_Info.addr, align 8
  store %"class.std::_Func_base.118"* %this, %"class.std::_Func_base.118"** %this.addr, align 8
  %this1 = load %"class.std::_Func_base.118"*, %"class.std::_Func_base.118"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_base.118"* %this1 to %class.type_info* (%"class.std::_Func_base.118"*)***
  %vtable = load %class.type_info* (%"class.std::_Func_base.118"*)**, %class.type_info* (%"class.std::_Func_base.118"*)*** %0, align 8
  %vfn = getelementptr inbounds %class.type_info* (%"class.std::_Func_base.118"*)*, %class.type_info* (%"class.std::_Func_base.118"*)** %vtable, i64 3
  %1 = load %class.type_info* (%"class.std::_Func_base.118"*)*, %class.type_info* (%"class.std::_Func_base.118"*)** %vfn, align 8
  %call = call noundef nonnull align 8 dereferenceable(24) %class.type_info* %1(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %this1) #15
  %2 = load %class.type_info*, %class.type_info** %_Info.addr, align 8
  %call2 = call noundef zeroext i1 @"??8type_info@@QEBA_NAEBV0@@Z"(%class.type_info* noundef nonnull align 8 dereferenceable(24) %call, %class.type_info* noundef nonnull align 8 dereferenceable(24) %2) #15
  br i1 %call2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = bitcast %"class.std::_Func_base.118"* %this1 to i8* (%"class.std::_Func_base.118"*)***
  %vtable3 = load i8* (%"class.std::_Func_base.118"*)**, i8* (%"class.std::_Func_base.118"*)*** %3, align 8
  %vfn4 = getelementptr inbounds i8* (%"class.std::_Func_base.118"*)*, i8* (%"class.std::_Func_base.118"*)** %vtable3, i64 5
  %4 = load i8* (%"class.std::_Func_base.118"*)*, i8* (%"class.std::_Func_base.118"*)** %vfn4, align 8
  %call5 = call noundef i8* %4(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %this1) #15
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ null, %cond.false ]
  ret i8* %cond
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"??8type_info@@QEBA_NAEBV0@@Z"(%class.type_info* noundef nonnull align 8 dereferenceable(24) %this, %class.type_info* noundef nonnull align 8 dereferenceable(24) %_Other) #2 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Other.addr = alloca %class.type_info*, align 8
  %this.addr = alloca %class.type_info*, align 8
  store %class.type_info* %_Other, %class.type_info** %_Other.addr, align 8
  store %class.type_info* %this, %class.type_info** %this.addr, align 8
  %this1 = load %class.type_info*, %class.type_info** %this.addr, align 8
  %0 = load %class.type_info*, %class.type_info** %_Other.addr, align 8
  %_Data = getelementptr inbounds %class.type_info, %class.type_info* %0, i32 0, i32 1
  %_Data2 = getelementptr inbounds %class.type_info, %class.type_info* %this1, i32 0, i32 1
  %call = invoke i32 @__std_type_info_compare(%struct.__std_type_info_data* noundef %_Data2, %struct.__std_type_info_data* noundef %_Data)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp

terminate:                                        ; preds = %entry
  %1 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %1) ]
  unreachable
}

declare dso_local i32 @__std_type_info_compare(%struct.__std_type_info_data* noundef, %struct.__std_type_info_data* noundef) #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Destroy_range@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@YAXPEAVArgDesc@detail@sycl@cl@@QEAV1234@AEAV?$allocator@VArgDesc@detail@sycl@cl@@@0@@Z"(%"class.cl::sycl::detail::ArgDesc"* noundef %_First, %"class.cl::sycl::detail::ArgDesc"* noundef %_Last, %"class.std::allocator.73"* noundef nonnull align 1 dereferenceable(1) %_Al) #2 comdat {
entry:
  %_Al.addr = alloca %"class.std::allocator.73"*, align 8
  %_Last.addr = alloca %"class.cl::sycl::detail::ArgDesc"*, align 8
  %_First.addr = alloca %"class.cl::sycl::detail::ArgDesc"*, align 8
  store %"class.std::allocator.73"* %_Al, %"class.std::allocator.73"** %_Al.addr, align 8
  store %"class.cl::sycl::detail::ArgDesc"* %_Last, %"class.cl::sycl::detail::ArgDesc"** %_Last.addr, align 8
  store %"class.cl::sycl::detail::ArgDesc"* %_First, %"class.cl::sycl::detail::ArgDesc"** %_First.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.73"* @"?_Getal@?$vector@VArgDesc@detail@sycl@cl@@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@@std@@AEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ"(%"class.std::vector.71"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.71"*, align 8
  store %"class.std::vector.71"* %this, %"class.std::vector.71"** %this.addr, align 8
  %this1 = load %"class.std::vector.71"*, %"class.std::vector.71"** %this.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::vector.71", %"class.std::vector.71"* %this1, i32 0, i32 0
  %call = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.73"* @"?_Get_first@?$_Compressed_pair@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@VArgDesc@detail@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.72"* noundef nonnull align 8 dereferenceable(24) %_Mypair) #15
  ret %"class.std::allocator.73"* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.73"* @"?_Get_first@?$_Compressed_pair@V?$allocator@VArgDesc@detail@sycl@cl@@@std@@V?$_Vector_val@U?$_Simple_types@VArgDesc@detail@sycl@cl@@@std@@@2@$00@std@@QEAAAEAV?$allocator@VArgDesc@detail@sycl@cl@@@2@XZ"(%"class.std::_Compressed_pair.72"* noundef nonnull align 8 dereferenceable(24) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Compressed_pair.72"*, align 8
  store %"class.std::_Compressed_pair.72"* %this, %"class.std::_Compressed_pair.72"** %this.addr, align 8
  %this1 = load %"class.std::_Compressed_pair.72"*, %"class.std::_Compressed_pair.72"** %this.addr, align 8
  %0 = bitcast %"class.std::_Compressed_pair.72"* %this1 to %"class.std::allocator.73"*
  ret %"class.std::allocator.73"* %0
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i8* noundef %_Ptr) #4 comdat align 2 {
entry:
  %_Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %_Ptr.addr, align 8
  %call = call noundef i64 @"?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z"(i8* noundef %0) #15
  %call2 = call noundef i64 @"??$_Convert_size@_K_K@std@@YA_K_K@Z"(i64 noundef %call) #15
  %1 = load i8*, i8** %_Ptr.addr, align 8
  %call3 = call noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i8* noundef %1, i64 noundef %call2)
  ret %"class.std::basic_string"* %call3
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i8* noundef %_Ptr, i64 noundef %_Count) #4 comdat align 2 {
entry:
  %retval = alloca %"class.std::basic_string"*, align 8
  %_Count.addr = alloca i64, align 8
  %_Ptr.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %_Old_ptr = alloca i8*, align 8
  %ref.tmp = alloca i8, align 1
  %agg.tmp = alloca %class.anon.126, align 1
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval2, i32 0, i32 2
  %1 = load i64, i64* %_Myres, align 8
  %cmp = icmp ule i64 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Mypair2 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval23 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair2, i32 0, i32 0
  %call = call noundef i8* @"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %_Myval23) #15
  store i8* %call, i8** %_Old_ptr, align 8
  %2 = load i64, i64* %_Count.addr, align 8
  %_Mypair4 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval25 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair4, i32 0, i32 0
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval25, i32 0, i32 1
  store i64 %2, i64* %_Mysize, align 8
  %3 = load i64, i64* %_Count.addr, align 8
  %4 = load i8*, i8** %_Ptr.addr, align 8
  %5 = load i8*, i8** %_Old_ptr, align 8
  %call6 = call noundef i8* @"?move@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %5, i8* noundef %4, i64 noundef %3) #15
  store i8 0, i8* %ref.tmp, align 1
  %6 = load i8*, i8** %_Old_ptr, align 8
  %7 = load i64, i64* %_Count.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %7
  call void @"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z"(i8* noundef nonnull align 1 dereferenceable(1) %arrayidx, i8* noundef nonnull align 1 dereferenceable(1) %ref.tmp) #15
  store %"class.std::basic_string"* %this1, %"class.std::basic_string"** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %8 = load i8*, i8** %_Ptr.addr, align 8
  %9 = load i64, i64* %_Count.addr, align 8
  %coerce.dive = getelementptr inbounds %class.anon.126, %class.anon.126* %agg.tmp, i32 0, i32 0
  %10 = load i8, i8* %coerce.dive, align 1
  %call7 = call noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"??$_Reallocate_for@V<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %9, i8 %10, i8* noundef %8)
  store %"class.std::basic_string"* %call7, %"class.std::basic_string"** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load %"class.std::basic_string"*, %"class.std::basic_string"** %retval, align 8
  ret %"class.std::basic_string"* %11
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i8* @"?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_String_val"*, align 8
  %_Result = alloca i8*, align 8
  store %"class.std::_String_val"* %this, %"class.std::_String_val"** %this.addr, align 8
  %this1 = load %"class.std::_String_val"*, %"class.std::_String_val"** %this.addr, align 8
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  %_Buf = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_Buf, i64 0, i64 0
  store i8* %arraydecay, i8** %_Result, align 8
  %call = call noundef zeroext i1 @"?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ"(%"class.std::_String_val"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Bx2 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %this1, i32 0, i32 0
  %_Ptr = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx2 to i8**
  %0 = load i8*, i8** %_Ptr, align 8
  %call3 = call noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %0) #15
  store i8* %call3, i8** %_Result, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %_Result, align 8
  ret i8* %1
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef nonnull align 8 dereferenceable(32) %"class.std::basic_string"* @"??$_Reallocate_for@V<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?0??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %_New_size, i8 %_Fn.coerce, i8* noundef %_Args) #4 comdat align 2 {
entry:
  %_Fn = alloca %class.anon.126, align 1
  %_Args.addr = alloca i8*, align 8
  %_New_size.addr = alloca i64, align 8
  %this.addr = alloca %"class.std::basic_string"*, align 8
  %_Old_capacity = alloca i64, align 8
  %_New_capacity = alloca i64, align 8
  %_Al = alloca %"class.std::allocator.1"*, align 8
  %_New_ptr = alloca i8*, align 8
  %coerce.dive = getelementptr inbounds %class.anon.126, %class.anon.126* %_Fn, i32 0, i32 0
  store i8 %_Fn.coerce, i8* %coerce.dive, align 1
  store i8* %_Args, i8** %_Args.addr, align 8
  store i64 %_New_size, i64* %_New_size.addr, align 8
  store %"class.std::basic_string"* %this, %"class.std::basic_string"** %this.addr, align 8
  %this1 = load %"class.std::basic_string"*, %"class.std::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %_New_size.addr, align 8
  %call = call noundef i64 @"?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @"?_Xlen_string@std@@YAXXZ"() #17
  unreachable

if.end:                                           ; preds = %entry
  %_Mypair = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval2 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair, i32 0, i32 0
  %_Myres = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval2, i32 0, i32 2
  %1 = load i64, i64* %_Myres, align 8
  store i64 %1, i64* %_Old_capacity, align 8
  %2 = load i64, i64* %_New_size.addr, align 8
  %call2 = call noundef i64 @"?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %2) #15
  store i64 %call2, i64* %_New_capacity, align 8
  %call3 = call noundef nonnull align 1 dereferenceable(1) %"class.std::allocator.1"* @"?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ"(%"class.std::basic_string"* noundef nonnull align 8 dereferenceable(32) %this1) #15
  store %"class.std::allocator.1"* %call3, %"class.std::allocator.1"** %_Al, align 8
  %3 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %_Al, align 8
  %4 = load i64, i64* %_New_capacity, align 8
  %add = add i64 %4, 1
  %call4 = call noundef i8* @"?allocate@?$allocator@D@std@@QEAAPEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %3, i64 noundef %add)
  store i8* %call4, i8** %_New_ptr, align 8
  %_Mypair5 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval26 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair5, i32 0, i32 0
  %5 = bitcast %"class.std::_String_val"* %_Myval26 to %"struct.std::_Container_base0"*
  call void @"?_Orphan_all@_Container_base0@std@@QEAAXXZ"(%"struct.std::_Container_base0"* noundef nonnull align 1 dereferenceable(1) %5) #15
  %6 = load i64, i64* %_New_size.addr, align 8
  %_Mypair7 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval28 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair7, i32 0, i32 0
  %_Mysize = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval28, i32 0, i32 1
  store i64 %6, i64* %_Mysize, align 8
  %7 = load i64, i64* %_New_capacity, align 8
  %_Mypair9 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval210 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair9, i32 0, i32 0
  %_Myres11 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval210, i32 0, i32 2
  store i64 %7, i64* %_Myres11, align 8
  %8 = load i8*, i8** %_Args.addr, align 8
  %9 = load i64, i64* %_New_size.addr, align 8
  %10 = load i8*, i8** %_New_ptr, align 8
  %call12 = call noundef i8* @"??$_Unfancy@D@std@@YAPEADPEAD@Z"(i8* noundef %10) #15
  call void @"??R<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA?A?<auto>@@QEAD10@Z"(%class.anon.126* noundef nonnull align 1 dereferenceable(1) %_Fn, i8* noundef %call12, i64 noundef %9, i8* noundef %8)
  %11 = load i64, i64* %_Old_capacity, align 8
  %cmp13 = icmp ule i64 16, %11
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end
  %12 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %_Al, align 8
  %13 = load i64, i64* %_Old_capacity, align 8
  %add15 = add i64 %13, 1
  %_Mypair16 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval217 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair16, i32 0, i32 0
  %_Bx = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval217, i32 0, i32 0
  %_Ptr = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx to i8**
  %14 = load i8*, i8** %_Ptr, align 8
  call void @"?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z"(%"class.std::allocator.1"* noundef nonnull align 1 dereferenceable(1) %12, i8* noundef %14, i64 noundef %add15)
  %15 = load i8*, i8** %_New_ptr, align 8
  %_Mypair18 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval219 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair18, i32 0, i32 0
  %_Bx20 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval219, i32 0, i32 0
  %_Ptr21 = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx20 to i8**
  store i8* %15, i8** %_Ptr21, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end
  %_Mypair22 = getelementptr inbounds %"class.std::basic_string", %"class.std::basic_string"* %this1, i32 0, i32 0
  %_Myval223 = getelementptr inbounds %"class.std::_Compressed_pair.0", %"class.std::_Compressed_pair.0"* %_Mypair22, i32 0, i32 0
  %_Bx24 = getelementptr inbounds %"class.std::_String_val", %"class.std::_String_val"* %_Myval223, i32 0, i32 0
  %_Ptr25 = bitcast %"union.std::_String_val<std::_Simple_types<char>>::_Bxty"* %_Bx24 to i8**
  call void @"??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z"(i8** noundef nonnull align 8 dereferenceable(8) %_Ptr25, i8** noundef nonnull align 8 dereferenceable(8) %_New_ptr) #15
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then14
  ret %"class.std::basic_string"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??R<lambda_1>@?0??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA?A?<auto>@@QEAD10@Z"(%class.anon.126* noundef nonnull align 1 dereferenceable(1) %this, i8* noundef %_New_ptr, i64 noundef %_Count, i8* noundef %_Ptr) #2 comdat align 2 {
entry:
  %_Ptr.addr = alloca i8*, align 8
  %_Count.addr = alloca i64, align 8
  %_New_ptr.addr = alloca i8*, align 8
  %this.addr = alloca %class.anon.126*, align 8
  %ref.tmp = alloca i8, align 1
  store i8* %_Ptr, i8** %_Ptr.addr, align 8
  store i64 %_Count, i64* %_Count.addr, align 8
  store i8* %_New_ptr, i8** %_New_ptr.addr, align 8
  store %class.anon.126* %this, %class.anon.126** %this.addr, align 8
  %this1 = load %class.anon.126*, %class.anon.126** %this.addr, align 8
  %0 = load i64, i64* %_Count.addr, align 8
  %1 = load i8*, i8** %_Ptr.addr, align 8
  %2 = load i8*, i8** %_New_ptr.addr, align 8
  %call = call noundef i8* @"?copy@?$_Char_traits@DH@std@@SAPEADQEADQEBD_K@Z"(i8* noundef %2, i8* noundef %1, i64 noundef %0) #15
  store i8 0, i8* %ref.tmp, align 1
  %3 = load i8*, i8** %_New_ptr.addr, align 8
  %4 = load i64, i64* %_Count.addr, align 8
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %4
  call void @"?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z"(i8* noundef nonnull align 1 dereferenceable(1) %arrayidx, i8* noundef nonnull align 1 dereferenceable(1) %ref.tmp) #15
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal void @"??$kernel_parallel_for@VFillBuffer@@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAVhandler@34@@Z@@handler@sycl@cl@@AEAAXAEBV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #2 align 2 {
entry:
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %class.anon.113* @"??$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@AEBV3?0???R3?0??4@9@QEBA?A?5@0@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #4 align 2 {
entry:
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  %call = call noundef %class.anon.113* @"??$ResetHostKernelHelper@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@456@AEAAPEAV1?0???R1?0??2@9@QEBA?A?3@0@Z@AEBV1?0???R1?0??2@9@QEBA?A?3@0@Z@@Z@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@AEBV3?0???R3?0??4@9@QEBA?A?5@0@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this1, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0)
  ret %class.anon.113* %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?isESIMD@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SA_NXZ"() #2 comdat align 2 {
entry:
  ret i1 false
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(12) %"struct.cl::sycl::detail::kernel_param_desc_t"* @"?getParamDesc@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAAEBUkernel_param_desc_t@234@I@Z"(i32 noundef %i) #2 comdat align 2 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %add = add i32 %0, 2
  %idxprom = zext i32 %add to i64
  %arrayidx = getelementptr inbounds [4 x %"struct.cl::sycl::detail::kernel_param_desc_t"], [4 x %"struct.cl::sycl::detail::kernel_param_desc_t"]* @"?kernel_signatures@detail@sycl@cl@@3QBUkernel_param_desc_t@123@B", i64 0, i64 %idxprom
  ret %"struct.cl::sycl::detail::kernel_param_desc_t"* %arrayidx
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i32 @"?getNumParams@?$KernelInfo@VFillBuffer@@@detail@sycl@cl@@SAIXZ"() #2 comdat align 2 {
entry:
  ret i32 1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %class.anon.113* @"??$ResetHostKernelHelper@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@456@AEAAPEAV1?0???R1?0??2@9@QEBA?A?3@0@Z@AEBV1?0???R1?0??2@9@QEBA?A?3@0@Z@@Z@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAV012@@Z@AEBV3?0???R3?0??4@9@QEBA?A?5@0@Z@@Z"(%"class.cl::sycl::handler"* noundef nonnull align 8 dereferenceable(552) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) #4 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %"class.cl::sycl::handler"*, align 8
  %NormalizedKernel = alloca %struct.NormalizedKernelType.127, align 8
  %NormalizedKernelFunc = alloca %"class.std::function.114", align 8
  %HostKernelPtr = alloca %"class.cl::sycl::detail::HostKernel"*, align 8
  %agg.tmp = alloca %"class.std::function.114", align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %"class.cl::sycl::handler"* %this, %"class.cl::sycl::handler"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::handler"*, %"class.cl::sycl::handler"** %this.addr, align 8
  %0 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  %call = call noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@1@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %NormalizedKernel, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0)
  %call2 = invoke noundef %"class.std::function.114"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %NormalizedKernel)
          to label %invoke.cont unwind label %ehcleanup11

invoke.cont:                                      ; preds = %entry
  %call4 = invoke noalias noundef nonnull i8* @"??2@YAPEAX_K@Z"(i64 noundef 72) #18
          to label %invoke.cont3 unwind label %ehcleanup10

invoke.cont3:                                     ; preds = %invoke.cont
  %1 = bitcast i8* %call4 to %"class.cl::sycl::detail::HostKernel"*
  %call6 = invoke noundef %"class.std::function.114"* @"??0?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEBV01@@Z"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %agg.tmp, %"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc)
          to label %invoke.cont5 unwind label %ehcleanup

invoke.cont5:                                     ; preds = %invoke.cont3
  %call8 = invoke noundef %"class.cl::sycl::detail::HostKernel"* @"??0?$HostKernel@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@V?$nd_item@$00@sycl@cl@@$00@detail@sycl@cl@@QEAA@V?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@@Z"(%"class.cl::sycl::detail::HostKernel"* noundef nonnull align 8 dereferenceable(72) %1, %"class.std::function.114"* noundef %agg.tmp)
          to label %invoke.cont7 unwind label %ehcleanup

invoke.cont7:                                     ; preds = %invoke.cont5
  store %"class.cl::sycl::detail::HostKernel"* %1, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %MHostKernel = getelementptr inbounds %"class.cl::sycl::handler", %"class.cl::sycl::handler"* %this1, i32 0, i32 17
  %2 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %3 = bitcast %"class.cl::sycl::detail::HostKernel"* %2 to %"class.cl::sycl::detail::HostKernelBase"*
  call void @"?reset@?$unique_ptr@VHostKernelBase@detail@sycl@cl@@U?$default_delete@VHostKernelBase@detail@sycl@cl@@@std@@@std@@QEAAXPEAVHostKernelBase@detail@sycl@cl@@@Z"(%"class.std::unique_ptr.83"* noundef nonnull align 8 dereferenceable(8) %MHostKernel, %"class.cl::sycl::detail::HostKernelBase"* noundef %3) #15
  %4 = load %"class.cl::sycl::detail::HostKernel"*, %"class.cl::sycl::detail::HostKernel"** %HostKernelPtr, align 8
  %MKernel = getelementptr inbounds %"class.cl::sycl::detail::HostKernel", %"class.cl::sycl::detail::HostKernel"* %4, i32 0, i32 1
  %call9 = call noundef %struct.NormalizedKernelType.127* @"??$target@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAAPEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %MKernel) #15
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %call9, i32 0, i32 0
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc) #15
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@XZ"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %NormalizedKernel) #15
  ret %class.anon.113* %MKernelFunc

ehcleanup:                                        ; preds = %invoke.cont5, %invoke.cont3
  %5 = cleanuppad within none []
  call void @"??3@YAXPEAX@Z"(i8* noundef %call4) #19 [ "funclet"(token %5) ]
  cleanupret from %5 unwind label %ehcleanup10

ehcleanup10:                                      ; preds = %ehcleanup, %invoke.cont
  %6 = cleanuppad within none []
  call void @"??1?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %NormalizedKernelFunc) #15 [ "funclet"(token %6) ]
  cleanupret from %6 unwind label %ehcleanup11

ehcleanup11:                                      ; preds = %ehcleanup10, %entry
  %7 = cleanuppad within none []
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@XZ"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %NormalizedKernel) #15 [ "funclet"(token %7) ]
  cleanupret from %7 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@1@Z"(%struct.NormalizedKernelType.127* noundef nonnull returned align 8 dereferenceable(32) %this, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelFunc) unnamed_addr #5 align 2 {
entry:
  %KernelFunc.addr = alloca %class.anon.113*, align 8
  %this.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %class.anon.113* %KernelFunc, %class.anon.113** %KernelFunc.addr, align 8
  store %struct.NormalizedKernelType.127* %this, %struct.NormalizedKernelType.127** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %this1, i32 0, i32 0
  %0 = load %class.anon.113*, %class.anon.113** %KernelFunc.addr, align 8
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %0) #15
  ret %struct.NormalizedKernelType.127* %this1
}

; Function Attrs: noinline optnone uwtable
define internal noundef %"class.std::function.114"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::function.114"* noundef nonnull returned align 8 dereferenceable(64) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Func) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Func.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %struct.NormalizedKernelType.127* %_Func, %struct.NormalizedKernelType.127** %_Func.addr, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %call = call noundef %"class.std::_Func_class.115"* @"??0?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0) #15
  %1 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %2 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Func.addr, align 8
  invoke void @"??$_Reset@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %1, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  ret %"class.std::function.114"* %this1

ehcleanup:                                        ; preds = %entry
  %3 = cleanuppad within none []
  %4 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  call void @"??1?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %4) #15 [ "funclet"(token %3) ]
  cleanupret from %3 unwind to caller
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType.127* @"??$target@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@?$function@$$A6AXAEBV?$nd_item@$00@sycl@cl@@@Z@std@@QEAAPEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@XZ"(%"class.std::function.114"* noundef nonnull align 8 dereferenceable(64) %this) #2 align 2 {
entry:
  %this.addr = alloca %"class.std::function.114"*, align 8
  store %"class.std::function.114"* %this, %"class.std::function.114"** %this.addr, align 8
  %this1 = load %"class.std::function.114"*, %"class.std::function.114"** %this.addr, align 8
  %0 = bitcast %"class.std::function.114"* %this1 to %"class.std::_Func_class.115"*
  %call = call noundef i8* @"?_Target@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEBAPEBXAEBVtype_info@@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %0, %class.type_info* noundef nonnull align 8 dereferenceable(24) bitcast (%rtti.TypeDescriptor256* @"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@@8" to %class.type_info*)) #15
  %1 = bitcast i8* %call to %struct.NormalizedKernelType.127*
  ret %struct.NormalizedKernelType.127* %1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@XZ"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %struct.NormalizedKernelType.127* %this, %struct.NormalizedKernelType.127** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %this1, i32 0, i32 0
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc) #15
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Reset@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@IEAAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Val) #4 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %"class.std::_Func_class.115"*, align 8
  store %struct.NormalizedKernelType.127* %_Val, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  store %"class.std::_Func_class.115"* %this, %"class.std::_Func_class.115"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.115"*, %"class.std::_Func_class.115"** %this.addr, align 8
  %0 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  %call = call noundef zeroext i1 @"??$_Test_callable@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@std@@YA_NAEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %0) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.115", %"class.std::_Func_class.115"* %this1, i32 0, i32 0
  %1 = bitcast %"union.std::_Func_class<void, const cl::sycl::nd_item<1> &>::_Storage"* %_Mystorage to i8*
  %2 = bitcast i8* %1 to %"class.std::_Func_impl_no_alloc.128"*
  %3 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  %call2 = call noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %2, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %3)
  %4 = bitcast %"class.std::_Func_impl_no_alloc.128"* %2 to %"class.std::_Func_base.118"*
  call void @"?_Set@?$_Func_class@XAEBV?$nd_item@$00@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@@Z"(%"class.std::_Func_class.115"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.118"* noundef %4) #15
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef zeroext i1 @"??$_Test_callable@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@std@@YA_NAEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Arg) #2 {
entry:
  %_Arg.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %struct.NormalizedKernelType.127* %_Arg, %struct.NormalizedKernelType.127** %_Arg.addr, align 8
  ret i1 true
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull returned align 8 dereferenceable(40) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %struct.NormalizedKernelType.127* %_Val, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@AEBU0?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@123@AEAAPEAV4?0???R4?0??5@9@QEBA?A?6@0@Z@1@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %2) #15
  ret %"class.std::_Func_impl_no_alloc.128"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@AEBU0?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@123@AEAAPEAV4?0???R4?0??5@9@QEBA?A?6@0@Z@1@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull returned align 8 dereferenceable(32) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %struct.NormalizedKernelType.127* %0, %struct.NormalizedKernelType.127** %.addr, align 8
  store %struct.NormalizedKernelType.127* %this, %struct.NormalizedKernelType.127** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %this1, i32 0, i32 0
  %1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %.addr, align 8
  %MKernelFunc2 = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %1, i32 0, i32 0
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc2) #15
  ret %struct.NormalizedKernelType.127* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal noundef %"class.std::_Func_base.118"* @"?_Copy@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this, i8* noundef %_Where) unnamed_addr #4 align 2 {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc.128"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %call = call noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0AEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %1, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee)
  %2 = bitcast %"class.std::_Func_impl_no_alloc.128"* %1 to %"class.std::_Func_base.118"*
  ret %"class.std::_Func_base.118"* %2
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_base.118"* @"?_Move@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAPEAV?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@2@PEAX@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this, i8* noundef %_Where) unnamed_addr #2 align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %_Where.addr = alloca i8*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store i8* %_Where, i8** %_Where.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = load i8*, i8** %_Where.addr, align 8
  %1 = bitcast i8* %0 to %"class.std::_Func_impl_no_alloc.128"*
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %call = invoke noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@$$QEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %1, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee)
          to label %invoke.cont unwind label %terminate

invoke.cont:                                      ; preds = %entry
  %2 = bitcast %"class.std::_Func_impl_no_alloc.128"* %1 to %"class.std::_Func_base.118"*
  ret %"class.std::_Func_base.118"* %2

terminate:                                        ; preds = %entry
  %3 = cleanuppad within none []
  call void @__std_terminate() #16 [ "funclet"(token %3) ]
  unreachable
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"?_Do_call@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAXAEBV?$nd_item@$00@sycl@cl@@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Args) unnamed_addr #4 align 2 {
entry:
  %_Args.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %"class.cl::sycl::nd_item"* %_Args, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Args.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  call void @"??$_Call@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@@?$_Invoker_ret@X@std@@SAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@AEBV?$nd_item@$00@45@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef nonnull align 8 dereferenceable(24) %class.type_info* @"?_Target_type@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAAEBVtype_info@@XZ"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  ret %class.type_info* bitcast (%rtti.TypeDescriptor256* @"??_R0?AUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@@8" to %class.type_info*)
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal void @"?_Delete_this@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEAAX_N@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this, i1 noundef zeroext %_Dealloc) unnamed_addr #2 align 2 {
entry:
  %_Dealloc.addr = alloca i8, align 1
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  %frombool = zext i1 %_Dealloc to i8
  store i8 %frombool, i8* %_Dealloc.addr, align 1
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  call void @"??1?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@XZ"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this1) #15
  %0 = load i8, i8* %_Dealloc.addr, align 1
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to i8*
  call void @"??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z"(i8* noundef %1, i64 noundef 40) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define internal noundef i8* @"?_Get@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@EEBAPEBXXZ"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #2 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %0 = bitcast %struct.NormalizedKernelType.127* %_Callee to i8*
  ret i8* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0AEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@AEBUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull returned align 8 dereferenceable(40) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %struct.NormalizedKernelType.127* %_Val, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@AEBU0?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@123@AEAAPEAV4?0???R4?0??5@9@QEBA?A?6@0@Z@1@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %2) #15
  ret %"class.std::_Func_impl_no_alloc.128"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %"class.std::_Func_impl_no_alloc.128"* @"??$?0UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@$0A@@?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@$$QEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@@Z"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull returned align 8 dereferenceable(40) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Val) unnamed_addr #5 align 2 {
entry:
  %_Val.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %struct.NormalizedKernelType.127* %_Val, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %0 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to %"class.std::_Func_base.118"*
  %call = call noundef %"class.std::_Func_base.118"* @"??0?$_Func_base@XAEBV?$nd_item@$00@sycl@cl@@@std@@QEAA@XZ"(%"class.std::_Func_base.118"* noundef nonnull align 8 dereferenceable(8) %0) #15
  %1 = bitcast %"class.std::_Func_impl_no_alloc.128"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** @"??_7?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@6B@" to i32 (...)**), i32 (...)*** %1, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  %2 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Val.addr, align 8
  %call2 = call noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@$$QEAU0?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@123@AEAAPEAV4?0???R4?0??5@9@QEBA?A?6@0@Z@1@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %2) #15
  ret %"class.std::_Func_impl_no_alloc.128"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define internal noundef %struct.NormalizedKernelType.127* @"??0NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@$$QEAU0?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@123@AEAAPEAV4?0???R4?0??5@9@QEBA?A?6@0@Z@1@Z@@Z"(%struct.NormalizedKernelType.127* noundef nonnull returned align 8 dereferenceable(32) %this, %struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 align 2 {
entry:
  %.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %this.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %struct.NormalizedKernelType.127* %0, %struct.NormalizedKernelType.127** %.addr, align 8
  store %struct.NormalizedKernelType.127* %this, %struct.NormalizedKernelType.127** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %this.addr, align 8
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %this1, i32 0, i32 0
  %1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %.addr, align 8
  %MKernelFunc2 = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %1, i32 0, i32 0
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@$$QEAV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc2) #15
  ret %struct.NormalizedKernelType.127* %this1
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$_Call@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@@?$_Invoker_ret@X@std@@SAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R6?0??main@@9@QEBA?A?<auto>@@AEAV345@@Z@AEBV6?0???R6?0??7@9@QEBA?A?8@0@Z@@Z@AEBV?$nd_item@$00@45@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Func, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Vals) #4 align 2 {
entry:
  %_Vals.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %_Func.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %"class.cl::sycl::nd_item"* %_Vals, %"class.cl::sycl::nd_item"** %_Vals.addr, align 8
  store %struct.NormalizedKernelType.127* %_Func, %struct.NormalizedKernelType.127** %_Func.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Vals.addr, align 8
  %1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Func.addr, align 8
  call void @"??$invoke@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@$$V@std@@YAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %1, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$invoke@AEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@$$V@std@@YAXAEAUNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@AEBV?$nd_item@$00@34@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Obj, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %_Arg1) #4 {
entry:
  %_Arg1.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %_Obj.addr = alloca %struct.NormalizedKernelType.127*, align 8
  store %"class.cl::sycl::nd_item"* %_Arg1, %"class.cl::sycl::nd_item"** %_Arg1.addr, align 8
  store %struct.NormalizedKernelType.127* %_Obj, %struct.NormalizedKernelType.127** %_Obj.addr, align 8
  %0 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %_Obj.addr, align 8
  %1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %_Arg1.addr, align 8
  call void @"??RNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAAXAEBV?$nd_item@$00@23@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %0, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %1)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??RNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAAXAEBV?$nd_item@$00@23@@Z"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %this, %"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %Arg) #4 align 2 {
entry:
  %Arg.addr = alloca %"class.cl::sycl::nd_item"*, align 8
  %this.addr = alloca %struct.NormalizedKernelType.127*, align 8
  %Item = alloca %"class.cl::sycl::item", align 8
  %ref.tmp = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp2 = alloca %"class.cl::sycl::id.27", align 8
  %ref.tmp3 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp = alloca %"class.cl::sycl::item", align 8
  %agg.tmp4 = alloca %class.anon.113, align 8
  store %"class.cl::sycl::nd_item"* %Arg, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  store %struct.NormalizedKernelType.127* %this, %struct.NormalizedKernelType.127** %this.addr, align 8
  %this1 = load %struct.NormalizedKernelType.127*, %struct.NormalizedKernelType.127** %this.addr, align 8
  %0 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_offset@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %0, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp)
  %1 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_global_id@?$nd_item@$00@sycl@cl@@QEBA?AV?$id@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %1, %"class.cl::sycl::id.27"* sret(%"class.cl::sycl::id.27") align 8 %ref.tmp2)
  %2 = load %"class.cl::sycl::nd_item"*, %"class.cl::sycl::nd_item"** %Arg.addr, align 8
  call void @"?get_global_range@?$nd_item@$00@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::nd_item"* noundef nonnull align 8 dereferenceable(72) %2, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %ref.tmp3)
  call void @"??$createItem@$00$00@Builder@detail@sycl@cl@@SA?AV?$item@$00$00@23@AEBV?$range@$00@23@AEBV?$id@$00@23@1@Z"(%"class.cl::sycl::item"* sret(%"class.cl::sycl::item") align 8 %Item, %"class.cl::sycl::range"* noundef nonnull align 8 dereferenceable(8) %ref.tmp3, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp2, %"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %ref.tmp)
  %3 = bitcast %"class.cl::sycl::item"* %agg.tmp to i8*
  %4 = bitcast %"class.cl::sycl::item"* %Item to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %MKernelFunc = getelementptr inbounds %struct.NormalizedKernelType.127, %struct.NormalizedKernelType.127* %this1, i32 0, i32 0
  %call = call noundef %class.anon.113* @"??0<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@AEBV0?0???R0?0??1@9@QEBA?A?2@0@Z@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %agg.tmp4, %class.anon.113* noundef nonnull align 8 dereferenceable(32) %MKernelFunc) #15
  call void @"??$runKernelWithArg@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@YAXV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAVhandler@12@@Z@V?$item@$00$00@12@@Z"(%class.anon.113* noundef %agg.tmp4, %"class.cl::sycl::item"* noundef %agg.tmp)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define internal void @"??$runKernelWithArg@V?$item@$00$00@sycl@cl@@V<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAVhandler@23@@Z@@detail@sycl@cl@@YAXV<lambda_1>@?0???R3?0??main@@9@QEBA?A?<auto>@@AEAVhandler@12@@Z@V?$item@$00$00@12@@Z"(%class.anon.113* noundef %KernelName, %"class.cl::sycl::item"* noundef %Arg) #4 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %agg.tmp = alloca %"class.cl::sycl::id.27", align 8
  %call = invoke noundef %"class.cl::sycl::id.27"* @"??$?0$00$00@?$id@$00@sycl@cl@@QEAA@AEBV?$item@$00$00@12@@Z"(%"class.cl::sycl::id.27"* noundef nonnull align 8 dereferenceable(8) %agg.tmp, %"class.cl::sycl::item"* noundef nonnull align 8 dereferenceable(24) %Arg)
          to label %invoke.cont unwind label %ehcleanup

invoke.cont:                                      ; preds = %entry
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %agg.tmp, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  %1 = load i64, i64* %0, align 8
  invoke void @"??R<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEBA?A?2@V?$id@$00@45@@Z"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelName, i64 %1)
          to label %invoke.cont2 unwind label %ehcleanup

invoke.cont2:                                     ; preds = %invoke.cont
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelName) #15
  ret void

ehcleanup:                                        ; preds = %invoke.cont, %entry
  %2 = cleanuppad within none []
  call void @"??1<lambda_1>@?0???R0?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@QEAA@XZ"(%class.anon.113* noundef nonnull align 8 dereferenceable(32) %KernelName) #15 [ "funclet"(token %2) ]
  cleanupret from %2 unwind to caller
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @"??1?$_Func_impl_no_alloc@UNormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R5?0??main@@9@QEBA?A?<auto>@@AEAV234@@Z@AEBV5?0???R5?0??6@9@QEBA?A?7@0@Z@@Z@XAEBV?$nd_item@$00@34@@std@@QEAA@XZ"(%"class.std::_Func_impl_no_alloc.128"* noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_impl_no_alloc.128"*, align 8
  store %"class.std::_Func_impl_no_alloc.128"* %this, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %this1 = load %"class.std::_Func_impl_no_alloc.128"*, %"class.std::_Func_impl_no_alloc.128"** %this.addr, align 8
  %_Callee = getelementptr inbounds %"class.std::_Func_impl_no_alloc.128", %"class.std::_Func_impl_no_alloc.128"* %this1, i32 0, i32 1
  call void @"??1NormalizedKernelType@?1???$ResetHostKernel@V<lambda_1>@?0???R1?0??main@@9@QEBA?A?<auto>@@AEAVhandler@sycl@cl@@@Z@V?$item@$00$00@56@$00@handler@sycl@cl@@AEAAPEAV<lambda_1>@?0???R4?0??main@@9@QEBA?A?<auto>@@AEAV123@@Z@AEBV4?0???R4?0??5@9@QEBA?A?6@0@Z@@Z@QEAA@XZ"(%struct.NormalizedKernelType.127* noundef nonnull align 8 dereferenceable(32) %_Callee) #15
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::accessor.110"* @"??0?$accessor@H$00$0EAB@$0HNO@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@$$QEAV012@@Z"(%"class.cl::sycl::accessor.110"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::accessor.110"* noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  %this.addr = alloca %"class.cl::sycl::accessor.110"*, align 8
  store %"class.cl::sycl::accessor.110"* %0, %"class.cl::sycl::accessor.110"** %.addr, align 8
  store %"class.cl::sycl::accessor.110"* %this, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %this.addr, align 8
  %1 = bitcast %"class.cl::sycl::accessor.110"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %2 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %3 = bitcast %"class.cl::sycl::accessor.110"* %2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@$$QEAV0123@@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %1, %"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %3) #15
  %4 = bitcast %"class.cl::sycl::accessor.110"* %this1 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 16
  %6 = bitcast i8* %5 to %"class.cl::sycl::detail::accessor_common.111"*
  %7 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %8 = bitcast %"class.cl::sycl::accessor.110"* %7 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 16
  %9 = bitcast i8* %add.ptr to %"class.cl::sycl::detail::accessor_common.111"*
  %padding = getelementptr inbounds %"class.cl::sycl::accessor.110", %"class.cl::sycl::accessor.110"* %this1, i32 0, i32 1
  %10 = load %"class.cl::sycl::accessor.110"*, %"class.cl::sycl::accessor.110"** %.addr, align 8
  %padding2 = getelementptr inbounds %"class.cl::sycl::accessor.110", %"class.cl::sycl::accessor.110"* %10, i32 0, i32 1
  %11 = bitcast [16 x i8]* %padding to i8*
  %12 = bitcast [16 x i8]* %padding2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false)
  ret %"class.cl::sycl::accessor.110"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@$$QEAV0123@@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %0, %"class.cl::sycl::detail::AccessorBaseHost"** %.addr, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %.addr, align 8
  %impl2 = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %1, i32 0, i32 0
  %call = call noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@$$QEAV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl2) #15
  ret %"class.cl::sycl::detail::AccessorBaseHost"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@AEBV0123@@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0) unnamed_addr #5 comdat align 2 {
entry:
  %.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  %this.addr = alloca %"class.cl::sycl::detail::AccessorBaseHost"*, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %0, %"class.cl::sycl::detail::AccessorBaseHost"** %.addr, align 8
  store %"class.cl::sycl::detail::AccessorBaseHost"* %this, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %this.addr, align 8
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %this1, i32 0, i32 0
  %1 = load %"class.cl::sycl::detail::AccessorBaseHost"*, %"class.cl::sycl::detail::AccessorBaseHost"** %.addr, align 8
  %impl2 = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %1, i32 0, i32 0
  %call = call noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %impl2) #15
  ret %"class.cl::sycl::detail::AccessorBaseHost"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::shared_ptr.23"* @"??0?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@std@@QEAA@AEBV01@@Z"(%"class.std::shared_ptr.23"* noundef nonnull returned align 8 dereferenceable(16) %this, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %_Other) unnamed_addr #5 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %this.addr = alloca %"class.std::shared_ptr.23"*, align 8
  store %"class.std::shared_ptr.23"* %_Other, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  store %"class.std::shared_ptr.23"* %this, %"class.std::shared_ptr.23"** %this.addr, align 8
  %this1 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %this.addr, align 8
  %0 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %call = call noundef %"class.std::_Ptr_base.24"* @"??0?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAA@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %0) #15
  %1 = bitcast %"class.std::shared_ptr.23"* %this1 to %"class.std::_Ptr_base.24"*
  %2 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  call void @"??$_Copy_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %1, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %2) #15
  ret %"class.std::shared_ptr.23"* %this1
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"??$_Copy_construct_from@VAccessorImplHost@detail@sycl@cl@@@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEAAXAEBV?$shared_ptr@VAccessorImplHost@detail@sycl@cl@@@1@@Z"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this, %"class.std::shared_ptr.23"* noundef nonnull align 8 dereferenceable(16) %_Other) #2 comdat align 2 {
entry:
  %_Other.addr = alloca %"class.std::shared_ptr.23"*, align 8
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::shared_ptr.23"* %_Other, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %0 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  %1 = bitcast %"class.std::shared_ptr.23"* %0 to %"class.std::_Ptr_base.24"*
  call void @"?_Incref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %1) #15
  %2 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  %3 = bitcast %"class.std::shared_ptr.23"* %2 to %"class.std::_Ptr_base.24"*
  %_Ptr = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %3, i32 0, i32 0
  %4 = load %"class.cl::sycl::detail::AccessorImplHost"*, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr, align 8
  %_Ptr2 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 0
  store %"class.cl::sycl::detail::AccessorImplHost"* %4, %"class.cl::sycl::detail::AccessorImplHost"** %_Ptr2, align 8
  %5 = load %"class.std::shared_ptr.23"*, %"class.std::shared_ptr.23"** %_Other.addr, align 8
  %6 = bitcast %"class.std::shared_ptr.23"* %5 to %"class.std::_Ptr_base.24"*
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %6, i32 0, i32 1
  %7 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %_Rep3 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  store %"class.std::_Ref_count_base"* %7, %"class.std::_Ref_count_base"** %_Rep3, align 8
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Incref@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAXXZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Ptr_base.24"*, align 8
  store %"class.std::_Ptr_base.24"* %this, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %this1 = load %"class.std::_Ptr_base.24"*, %"class.std::_Ptr_base.24"** %this.addr, align 8
  %_Rep = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  %0 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep, align 8
  %tobool = icmp ne %"class.std::_Ref_count_base"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_Rep2 = getelementptr inbounds %"class.std::_Ptr_base.24", %"class.std::_Ptr_base.24"* %this1, i32 0, i32 1
  %1 = load %"class.std::_Ref_count_base"*, %"class.std::_Ref_count_base"** %_Rep2, align 8
  call void @"?_Incref@_Ref_count_base@std@@QEAAXXZ"(%"class.std::_Ref_count_base"* noundef nonnull align 8 dereferenceable(16) %1) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local void @"?_Tidy@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEAAXXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %call = call noundef zeroext i1 @"?_Empty@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call2 = call noundef %"class.std::_Func_base.38"* @"?_Getimpl@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %call3 = call noundef zeroext i1 @"?_Local@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBA_NXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %lnot = xor i1 %call3, true
  %0 = bitcast %"class.std::_Func_base.38"* %call2 to void (%"class.std::_Func_base.38"*, i1)***
  %vtable = load void (%"class.std::_Func_base.38"*, i1)**, void (%"class.std::_Func_base.38"*, i1)*** %0, align 8
  %vfn = getelementptr inbounds void (%"class.std::_Func_base.38"*, i1)*, void (%"class.std::_Func_base.38"*, i1)** %vtable, i64 4
  %1 = load void (%"class.std::_Func_base.38"*, i1)*, void (%"class.std::_Func_base.38"*, i1)** %vfn, align 8
  call void %1(%"class.std::_Func_base.38"* noundef nonnull align 8 dereferenceable(8) %call2, i1 noundef zeroext %lnot) #15
  call void @"?_Set@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEAAXPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@@Z"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1, %"class.std::_Func_base.38"* noundef null) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Empty@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@IEBA_NXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %call = call noundef %"class.std::_Func_base.38"* @"?_Getimpl@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %tobool = icmp ne %"class.std::_Func_base.38"* %call, null
  %lnot = xor i1 %tobool, true
  ret i1 %lnot
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef %"class.std::_Func_base.38"* @"?_Getimpl@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.35", %"class.std::_Func_class.35"* %this1, i32 0, i32 0
  %_Ptrs = bitcast %"union.std::_Func_class<void, cl::sycl::handler &>::_Storage"* %_Mystorage to [8 x %"class.std::_Func_base.38"*]*
  %arrayidx = getelementptr inbounds [8 x %"class.std::_Func_base.38"*], [8 x %"class.std::_Func_base.38"*]* %_Ptrs, i64 0, i64 7
  %0 = load %"class.std::_Func_base.38"*, %"class.std::_Func_base.38"** %arrayidx, align 8
  ret %"class.std::_Func_base.38"* %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef zeroext i1 @"?_Local@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBA_NXZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::_Func_class.35"*, align 8
  store %"class.std::_Func_class.35"* %this, %"class.std::_Func_class.35"** %this.addr, align 8
  %this1 = load %"class.std::_Func_class.35"*, %"class.std::_Func_class.35"** %this.addr, align 8
  %call = call noundef %"class.std::_Func_base.38"* @"?_Getimpl@?$_Func_class@XAEAVhandler@sycl@cl@@@std@@AEBAPEAV?$_Func_base@XAEAVhandler@sycl@cl@@@2@XZ"(%"class.std::_Func_class.35"* noundef nonnull align 8 dereferenceable(64) %this1) #15
  %0 = bitcast %"class.std::_Func_base.38"* %call to i8*
  %_Mystorage = getelementptr inbounds %"class.std::_Func_class.35", %"class.std::_Func_class.35"* %this1, i32 0, i32 0
  %1 = bitcast %"union.std::_Func_class<void, cl::sycl::handler &>::_Storage"* %_Mystorage to i8*
  %cmp = icmp eq i8* %0, %1
  ret i1 %cmp
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local noundef %"class.cl::sycl::accessor"* @"??$?0H$00V?$aligned_allocator@D@detail@sycl@cl@@X@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@QEAA@AEAV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@AEBVproperty_list@12@Ucode_location@detail@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull returned align 8 dereferenceable(32) %this, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %BufferRef, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList, %"struct.cl::sycl::detail::code_location"* noundef %CodeLoc) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__CxxFrameHandler3 to i8*) {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::property_list"*, align 8
  %BufferRef.addr = alloca %"class.cl::sycl::buffer"*, align 8
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  %ref.tmp = alloca %"class.std::shared_ptr.3", align 8
  %ref.tmp2 = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list", align 8
  %agg.tmp = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp6 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp9 = alloca %"class.cl::sycl::range.26", align 8
  %agg.tmp10 = alloca %"class.cl::sycl::range", align 8
  %agg.tmp14 = alloca %"class.cl::sycl::id", align 8
  %ref.tmp19 = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list", align 8
  %ref.tmp29 = alloca %"class.std::shared_ptr.3", align 8
  store %"class.cl::sycl::property_list"* %PropertyList, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  store %"class.cl::sycl::buffer"* %BufferRef, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %1 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %IsSubBuffer = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %1, i32 0, i32 3
  %2 = load i8, i8* %IsSubBuffer, align 8
  %tobool = trunc i8 %2 to i1
  %3 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %OffsetInBytes = getelementptr inbounds %"class.cl::sycl::buffer", %"class.cl::sycl::buffer"* %3, i32 0, i32 2
  %4 = load i64, i64* %OffsetInBytes, align 8
  %conv = trunc i64 %4 to i32
  %5 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  call void @"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z"(%"class.std::shared_ptr.3"* sret(%"class.std::shared_ptr.3") align 8 %ref.tmp, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %5)
  %6 = bitcast %"class.std::shared_ptr.3"* %ref.tmp to %"class.std::_Ptr_base.4"*
  %call = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %6) #15
  %7 = bitcast %"class.cl::sycl::detail::buffer_impl"* %call to %"class.cl::sycl::detail::SYCLMemObjI"*
  %8 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  %call3 = invoke noundef %"class.cl::sycl::ext::oneapi::accessor_property_list"* @"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %8)
          to label %invoke.cont unwind label %ehcleanup18

invoke.cont:                                      ; preds = %entry
  %call5 = invoke noundef i32 @"?getAdjustedMode@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2)
          to label %invoke.cont4 unwind label %ehcleanup

invoke.cont4:                                     ; preds = %invoke.cont
  %9 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  call void @"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %9, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %agg.tmp6)
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp6, i32 0, i32 0
  %coerce.dive7 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %10 = bitcast [1 x i64]* %coerce.dive7 to i64*
  %11 = load i64, i64* %10, align 8
  invoke void @"??$convertToArrayOfN@$02$00Vrange@sycl@cl@@$00@detail@sycl@cl@@YA?AV?$range@$02@12@V?$range@$00@12@@Z"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.tmp, i64 %11)
          to label %invoke.cont8 unwind label %ehcleanup

invoke.cont8:                                     ; preds = %invoke.cont4
  %12 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  call void @"?get_range@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA?AV?$range@$00@23@XZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %12, %"class.cl::sycl::range"* sret(%"class.cl::sycl::range") align 8 %agg.tmp10)
  %coerce.dive11 = getelementptr inbounds %"class.cl::sycl::range", %"class.cl::sycl::range"* %agg.tmp10, i32 0, i32 0
  %coerce.dive12 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive11, i32 0, i32 0
  %13 = bitcast [1 x i64]* %coerce.dive12 to i64*
  %14 = load i64, i64* %13, align 8
  invoke void @"??$convertToArrayOfN@$02$00Vrange@sycl@cl@@$00@detail@sycl@cl@@YA?AV?$range@$02@12@V?$range@$00@12@@Z"(%"class.cl::sycl::range.26"* sret(%"class.cl::sycl::range.26") align 8 %agg.tmp9, i64 %14)
          to label %invoke.cont13 unwind label %ehcleanup

invoke.cont13:                                    ; preds = %invoke.cont8
  %call15 = call noundef %"class.cl::sycl::id"* @"??$?0$02@?$id@$02@sycl@cl@@QEAA@_K00@Z"(%"class.cl::sycl::id"* noundef nonnull align 8 dereferenceable(24) %agg.tmp14, i64 noundef 0, i64 noundef 0, i64 noundef 0)
  %call17 = invoke noundef %"class.cl::sycl::detail::AccessorBaseHost"* @"??0AccessorBaseHost@detail@sycl@cl@@QEAA@V?$id@$02@23@V?$range@$02@23@1W4mode@access@23@PEAVSYCLMemObjI@123@HHH_N@Z"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0, %"class.cl::sycl::id"* noundef %agg.tmp14, %"class.cl::sycl::range.26"* noundef %agg.tmp9, %"class.cl::sycl::range.26"* noundef %agg.tmp, i32 noundef %call5, %"class.cl::sycl::detail::SYCLMemObjI"* noundef %7, i32 noundef 1, i32 noundef 4, i32 noundef %conv, i1 noundef zeroext %tobool)
          to label %invoke.cont16 unwind label %ehcleanup

invoke.cont16:                                    ; preds = %invoke.cont13
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2) #15
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15
  %15 = bitcast %"class.cl::sycl::accessor"* %this1 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 16
  %17 = bitcast i8* %16 to %"class.cl::sycl::detail::accessor_common"*
  %18 = load %"class.cl::sycl::property_list"*, %"class.cl::sycl::property_list"** %PropertyList.addr, align 8
  %call21 = invoke noundef %"class.cl::sycl::ext::oneapi::accessor_property_list"* @"??0?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@AEBVproperty_list@34@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp19, %"class.cl::sycl::property_list"* noundef nonnull align 8 dereferenceable(32) %18)
          to label %invoke.cont20 unwind label %ehcleanup33

invoke.cont20:                                    ; preds = %invoke.cont16
  %19 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  %call22 = call noundef i64 @"?size@?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@QEBA_KXZ"(%"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %19) #15
  invoke void @"?preScreenAccessor@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this1, i64 noundef %call22, %"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp19)
          to label %invoke.cont23 unwind label %ehcleanup24

invoke.cont23:                                    ; preds = %invoke.cont20
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp19) #15
  %20 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %impl = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %20, i32 0, i32 0
  %21 = bitcast %"class.std::shared_ptr.23"* %impl to %"class.std::_Ptr_base.24"*
  %call25 = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %21) #15
  invoke void @"?addHostAccessorAndWait@detail@sycl@cl@@YAXPEAVAccessorImplHost@123@@Z"(%"class.cl::sycl::detail::AccessorImplHost"* noundef %call25)
          to label %invoke.cont26 unwind label %ehcleanup33

invoke.cont26:                                    ; preds = %invoke.cont23
  %22 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %impl27 = getelementptr inbounds %"class.cl::sycl::detail::AccessorBaseHost", %"class.cl::sycl::detail::AccessorBaseHost"* %22, i32 0, i32 0
  %23 = bitcast %"class.std::shared_ptr.23"* %impl27 to %"class.std::_Ptr_base.24"*
  %call28 = call noundef %"class.cl::sycl::detail::AccessorImplHost"* @"?get@?$_Ptr_base@VAccessorImplHost@detail@sycl@cl@@@std@@IEBAPEAVAccessorImplHost@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.24"* noundef nonnull align 8 dereferenceable(16) %23) #15
  %24 = bitcast %"class.cl::sycl::detail::AccessorImplHost"* %call28 to i8*
  %25 = load %"class.cl::sycl::buffer"*, %"class.cl::sycl::buffer"** %BufferRef.addr, align 8
  call void @"??$getSyclObjImpl@V?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@sycl@cl@@@detail@sycl@cl@@YA?AV?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@AEBV?$buffer@H$00V?$aligned_allocator@D@detail@sycl@cl@@X@12@@Z"(%"class.std::shared_ptr.3"* sret(%"class.std::shared_ptr.3") align 8 %ref.tmp29, %"class.cl::sycl::buffer"* noundef nonnull align 8 dereferenceable(40) %25)
  %26 = bitcast %"class.std::shared_ptr.3"* %ref.tmp29 to %"class.std::_Ptr_base.4"*
  %call30 = call noundef %"class.cl::sycl::detail::buffer_impl"* @"?get@?$_Ptr_base@Vbuffer_impl@detail@sycl@cl@@@std@@IEBAPEAVbuffer_impl@detail@sycl@cl@@XZ"(%"class.std::_Ptr_base.4"* noundef nonnull align 8 dereferenceable(16) %26) #15
  %27 = bitcast %"class.cl::sycl::detail::buffer_impl"* %call30 to i8*
  invoke void @"?constructorNotification@detail@sycl@cl@@YAXPEAX0W4target@access@23@W4mode@523@AEBUcode_location@123@@Z"(i8* noundef %27, i8* noundef %24, i32 noundef 2018, i32 noundef 1024, %"struct.cl::sycl::detail::code_location"* noundef nonnull align 8 dereferenceable(24) %CodeLoc)
          to label %invoke.cont31 unwind label %ehcleanup32

invoke.cont31:                                    ; preds = %invoke.cont26
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp29) #15
  ret %"class.cl::sycl::accessor"* %this1

ehcleanup:                                        ; preds = %invoke.cont13, %invoke.cont8, %invoke.cont4, %invoke.cont
  %28 = cleanuppad within none []
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp2) #15 [ "funclet"(token %28) ]
  cleanupret from %28 unwind label %ehcleanup18

ehcleanup18:                                      ; preds = %ehcleanup, %entry
  %29 = cleanuppad within none []
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp) #15 [ "funclet"(token %29) ]
  cleanupret from %29 unwind to caller

ehcleanup24:                                      ; preds = %invoke.cont20
  %30 = cleanuppad within none []
  call void @"??1?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %ref.tmp19) #15 [ "funclet"(token %30) ]
  cleanupret from %30 unwind label %ehcleanup33

ehcleanup32:                                      ; preds = %invoke.cont26
  %31 = cleanuppad within none []
  call void @"??1?$shared_ptr@Vbuffer_impl@detail@sycl@cl@@@std@@QEAA@XZ"(%"class.std::shared_ptr.3"* noundef nonnull align 8 dereferenceable(16) %ref.tmp29) #15 [ "funclet"(token %31) ]
  cleanupret from %31 unwind label %ehcleanup33

ehcleanup33:                                      ; preds = %ehcleanup32, %invoke.cont23, %ehcleanup24, %invoke.cont16
  %32 = cleanuppad within none []
  %33 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  call void @"??1AccessorBaseHost@detail@sycl@cl@@QEAA@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %33) #15 [ "funclet"(token %32) ]
  cleanupret from %32 unwind to caller
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i32 @"?getAdjustedMode@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@KA?AW4mode@access@23@AEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList) #4 comdat align 2 {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  %AdjustedMode = alloca i32, align 4
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %PropertyList, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  store i32 1024, i32* %AdjustedMode, align 4
  %0 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call = call noundef zeroext i1 @"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %0)
  br i1 %call, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call1 = call noundef zeroext i1 @"??$has_property@Vnoinit@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %1)
  br i1 %call1, label %if.then, label %if.end6

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32, i32* %AdjustedMode, align 4
  %cmp = icmp eq i32 %2, 1025
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  store i32 1027, i32* %AdjustedMode, align 4
  br label %if.end5

if.else:                                          ; preds = %if.then
  %3 = load i32, i32* %AdjustedMode, align 4
  %cmp3 = icmp eq i32 %3, 1026
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 1028, i32* %AdjustedMode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then2
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %lor.lhs.false
  %4 = load i32, i32* %AdjustedMode, align 4
  ret i32 %4
}

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local void @"?preScreenAccessor@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@AEAAX_KAEBV?$accessor_property_list@$$V@oneapi@ext@23@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this, i64 noundef %elemInBuffer, %"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %PropertyList) #4 comdat align 2 {
entry:
  %PropertyList.addr = alloca %"class.cl::sycl::ext::oneapi::accessor_property_list"*, align 8
  %elemInBuffer.addr = alloca i64, align 8
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  %tmp = alloca %"class.cl::sycl::invalid_object_error", align 8
  store %"class.cl::sycl::ext::oneapi::accessor_property_list"* %PropertyList, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  store i64 %elemInBuffer, i64* %elemInBuffer.addr, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  %0 = load %"class.cl::sycl::ext::oneapi::accessor_property_list"*, %"class.cl::sycl::ext::oneapi::accessor_property_list"** %PropertyList.addr, align 8
  %call = call noundef zeroext i1 @"??$has_property@Vno_init@property@sycl@cl@@@?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@QEBA_NXZ"(%"class.cl::sycl::ext::oneapi::accessor_property_list"* noundef nonnull align 8 dereferenceable(32) %0)
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call noundef %"class.cl::sycl::invalid_object_error"* @"??0invalid_object_error@sycl@cl@@QEAA@PEBDH@Z"(%"class.cl::sycl::invalid_object_error"* noundef nonnull align 8 dereferenceable(80) %tmp, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @"??_C@_0DE@JHMCFHEP@accessor?5would?5cannot?5be?5both?5re@", i64 0, i64 0), i32 noundef -30)
  %1 = bitcast %"class.cl::sycl::invalid_object_error"* %tmp to i8*
  call void @_CxxThrowException(i8* %1, %eh.ThrowInfo* @"_TI4?AVinvalid_object_error@sycl@cl@@") #17
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

declare dllimport void @"?addHostAccessorAndWait@detail@sycl@cl@@YAXPEAVAccessorImplHost@123@@Z"(%"class.cl::sycl::detail::AccessorImplHost"* noundef) #1

; Function Attrs: mustprogress noinline optnone uwtable
define linkonce_odr dso_local noundef i64 @"??$getLinearIndex@$00@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBA_KV?$id@$00@12@@Z"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this, i64 %Id.coerce) #4 comdat align 2 {
entry:
  %Id = alloca %"class.cl::sycl::id.27", align 8
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  %Result = alloca i64, align 8
  %I = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %"class.cl::sycl::id.27", %"class.cl::sycl::id.27"* %Id, i32 0, i32 0
  %coerce.dive1 = getelementptr inbounds %"class.cl::sycl::detail::array", %"class.cl::sycl::detail::array"* %coerce.dive, i32 0, i32 0
  %0 = bitcast [1 x i64]* %coerce.dive1 to i64*
  store i64 %Id.coerce, i64* %0, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this2 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  store i64 0, i64* %Result, align 8
  store i32 0, i32* %I, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %I, align 4
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %Result, align 8
  %3 = bitcast %"class.cl::sycl::accessor"* %this2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::range.26"* @"?getMemoryRange@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$range@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %3)
  %4 = bitcast %"class.cl::sycl::range.26"* %call to %"class.cl::sycl::detail::array.25"*
  %5 = load i32, i32* %I, align 4
  %call3 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %5)
  %mul = mul i64 %2, %call3
  %6 = bitcast %"class.cl::sycl::id.27"* %Id to %"class.cl::sycl::detail::array"*
  %7 = load i32, i32* %I, align 4
  %call4 = call noundef nonnull align 8 dereferenceable(8) i64* @"??A?$array@$00@detail@sycl@cl@@QEAAAEA_KH@Z"(%"class.cl::sycl::detail::array"* noundef nonnull align 8 dereferenceable(8) %6, i32 noundef %7)
  %8 = load i64, i64* %call4, align 8
  %add = add i64 %mul, %8
  store i64 %add, i64* %Result, align 8
  %9 = bitcast %"class.cl::sycl::accessor"* %this2 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call5 = call noundef nonnull align 8 dereferenceable(24) %"class.cl::sycl::id"* @"?getOffset@AccessorBaseHost@detail@sycl@cl@@IEBAAEBV?$id@$02@34@XZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %9)
  %10 = bitcast %"class.cl::sycl::id"* %call5 to %"class.cl::sycl::detail::array.25"*
  %11 = load i32, i32* %I, align 4
  %call6 = call noundef i64 @"??A?$array@$02@detail@sycl@cl@@QEBA_KH@Z"(%"class.cl::sycl::detail::array.25"* noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %11)
  %12 = load i64, i64* %Result, align 8
  %add7 = add i64 %12, %call6
  store i64 %add7, i64* %Result, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %I, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %I, align 4
  br label %for.cond, !llvm.loop !42

for.end:                                          ; preds = %for.cond
  %14 = load i64, i64* %Result, align 8
  ret i64 %14
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define linkonce_odr dso_local noundef i32* @"?getQualifiedPtr@?$accessor@H$00$0EAA@$0HOC@$0A@V?$accessor_property_list@$$V@oneapi@ext@sycl@cl@@@sycl@cl@@IEBAPEAHXZ"(%"class.cl::sycl::accessor"* noundef nonnull align 8 dereferenceable(32) %this) #2 comdat align 2 {
entry:
  %this.addr = alloca %"class.cl::sycl::accessor"*, align 8
  store %"class.cl::sycl::accessor"* %this, %"class.cl::sycl::accessor"** %this.addr, align 8
  %this1 = load %"class.cl::sycl::accessor"*, %"class.cl::sycl::accessor"** %this.addr, align 8
  %0 = bitcast %"class.cl::sycl::accessor"* %this1 to %"class.cl::sycl::detail::AccessorBaseHost"*
  %call = call noundef i8* @"?getPtr@AccessorBaseHost@detail@sycl@cl@@IEBAPEAXXZ"(%"class.cl::sycl::detail::AccessorBaseHost"* noundef nonnull align 8 dereferenceable(16) %0)
  %1 = bitcast i8* %call to i32*
  ret i32* %1
}

attributes #0 = { mustprogress noinline norecurse optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress noinline optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { noinline nounwind optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noinline optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { argmemonly nofree nounwind willreturn }
attributes #9 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { argmemonly nofree nounwind willreturn writeonly }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { mustprogress noinline noreturn optnone uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { inaccessiblememonly nocallback nofree nosync nounwind willreturn }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { noreturn }
attributes #18 = { builtin allocsize(0) }
attributes #19 = { builtin nounwind }
attributes #20 = { allocsize(0) }

!llvm.linker.options = !{!0, !1, !2, !3, !4, !5, !6}
!llvm.module.flags = !{!7, !8, !9}
!llvm.ident = !{!10}

!0 = !{!"/FAILIFMISMATCH:\22_MSC_VER=1900\22"}
!1 = !{!"/FAILIFMISMATCH:\22_ITERATOR_DEBUG_LEVEL=0\22"}
!2 = !{!"/FAILIFMISMATCH:\22RuntimeLibrary=MD_DynamicRelease\22"}
!3 = !{!"/DEFAULTLIB:msvcprt.lib"}
!4 = !{!"/FAILIFMISMATCH:\22_CRT_STDIO_ISO_WIDE_SPECIFIERS=0\22"}
!5 = !{!"/FAILIFMISMATCH:\22annotate_string=0\22"}
!6 = !{!"/FAILIFMISMATCH:\22annotate_vector=0\22"}
!7 = !{i32 1, !"wchar_size", i32 2}
!8 = !{i32 7, !"PIC Level", i32 2}
!9 = !{i32 7, !"uwtable", i32 2}
!10 = !{!"clang version 15.0.0 (https://github.com/intel/llvm 5352b423f8913fce44e8276de68a39ffdb190bdc)"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.mustprogress"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = distinct !{!16, !12}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !12}
!25 = distinct !{!25, !12}
!26 = distinct !{!26, !12}
!27 = distinct !{!27, !12, !28}
!28 = !{!"llvm.loop.unroll.count", i32 3}
!29 = distinct !{!29, !12}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !12}
!33 = distinct !{!33, !12}
!34 = distinct !{!34, !12}
!35 = distinct !{!35, !12}
!36 = distinct !{!36, !12}
!37 = distinct !{!37, !12}
!38 = distinct !{!38, !12}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !12}
!42 = distinct !{!42, !12, !28}

; __CLANG_OFFLOAD_BUNDLE____END__ host-x86_64-pc-windows-msvc
